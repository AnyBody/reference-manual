
.. _AnyFunAnd:

#########
AnyFunAnd
#########

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Abstract
:Parent class: :ref:`AnyFunLogical`


**************
Description
**************


This is an abstract class implementing the function: :ref:`andfun()` .

.. seealso:: Please see the documentation on :ref:`andfun()` for more information
    on how to use the function.


.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyFunAnd
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyFunLogical </demos/zips/ClassExamples.AnyFunLogical.zip>`
     - Logical functions (derived from AnyFunLogical)



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunAnd.FunctionFloatFloat:

FunctionFloatFloat
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatFloat">
    <span id="anyfunand-functionfloatfloat" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatFloat</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatFloat" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatFloat.ArgList:

FunctionFloatFloat.ArgList
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionFloatFloat.ArgList">
    <span id="anyfunand-functionfloatfloat-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatFloat.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatFloat.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatFloat.ArgList.Arg1:

FunctionFloatFloat.ArgList.Arg1
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatFloat.ArgList.Arg1">
    <span id="anyfunand-functionfloatfloat-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatFloat.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatFloat.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatFloat.ArgList.Arg2:

FunctionFloatFloat.ArgList.Arg2
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionFloatFloat.ArgList.Arg2">
    <span id="anyfunand-functionfloatfloat-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatFloat.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatFloat.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatFloat.Return:

FunctionFloatFloat.Return
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatFloat.Return">
    <span id="anyfunand-functionfloatfloat-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatFloat.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatFloat.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntInt:

FunctionIntInt
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntInt">
    <span id="anyfunand-functionintint" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntInt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntInt" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntInt.ArgList:

FunctionIntInt.ArgList
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionIntInt.ArgList">
    <span id="anyfunand-functionintint-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntInt.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntInt.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntInt.ArgList.Arg1:

FunctionIntInt.ArgList.Arg1
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntInt.ArgList.Arg1">
    <span id="anyfunand-functionintint-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntInt.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntInt.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntInt.ArgList.Arg2:

FunctionIntInt.ArgList.Arg2
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionIntInt.ArgList.Arg2">
    <span id="anyfunand-functionintint-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntInt.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntInt.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntInt.Return:

FunctionIntInt.Return
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntInt.Return">
    <span id="anyfunand-functionintint-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntInt.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntInt.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatInt:

FunctionFloatInt
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatInt">
    <span id="anyfunand-functionfloatint" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatInt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatInt" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatInt.ArgList:

FunctionFloatInt.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionFloatInt.ArgList">
    <span id="anyfunand-functionfloatint-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatInt.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatInt.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatInt.ArgList.Arg1:

FunctionFloatInt.ArgList.Arg1
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatInt.ArgList.Arg1">
    <span id="anyfunand-functionfloatint-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatInt.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatInt.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatInt.ArgList.Arg2:

FunctionFloatInt.ArgList.Arg2
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionFloatInt.ArgList.Arg2">
    <span id="anyfunand-functionfloatint-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatInt.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatInt.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionFloatInt.Return:

FunctionFloatInt.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionFloatInt.Return">
    <span id="anyfunand-functionfloatint-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionFloatInt.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionFloatInt.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntFloat:

FunctionIntFloat
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntFloat">
    <span id="anyfunand-functionintfloat" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntFloat</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntFloat" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntFloat.ArgList:

FunctionIntFloat.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionIntFloat.ArgList">
    <span id="anyfunand-functionintfloat-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntFloat.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntFloat.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntFloat.ArgList.Arg1:

FunctionIntFloat.ArgList.Arg1
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntFloat.ArgList.Arg1">
    <span id="anyfunand-functionintfloat-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntFloat.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntFloat.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntFloat.ArgList.Arg2:

FunctionIntFloat.ArgList.Arg2
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionIntFloat.ArgList.Arg2">
    <span id="anyfunand-functionintfloat-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntFloat.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntFloat.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionIntFloat.Return:

FunctionIntFloat.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionIntFloat.Return">
    <span id="anyfunand-functionintfloat-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionIntFloat.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionIntFloat.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionSwitchSwitch:

FunctionSwitchSwitch
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionSwitchSwitch">
    <span id="anyfunand-functionswitchswitch" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionSwitchSwitch</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionSwitchSwitch" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionSwitchSwitch.ArgList:

FunctionSwitchSwitch.ArgList
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionSwitchSwitch.ArgList">
    <span id="anyfunand-functionswitchswitch-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionSwitchSwitch.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionSwitchSwitch.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionSwitchSwitch.ArgList.Arg1:

FunctionSwitchSwitch.ArgList.Arg1
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionSwitchSwitch.ArgList.Arg1">
    <span id="anyfunand-functionswitchswitch-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionSwitchSwitch.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionSwitchSwitch.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionSwitchSwitch.ArgList.Arg2:

FunctionSwitchSwitch.ArgList.Arg2
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FunctionSwitchSwitch.ArgList.Arg2">
    <span id="anyfunand-functionswitchswitch-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionSwitchSwitch.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionSwitchSwitch.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAnd.FunctionSwitchSwitch.Return:

FunctionSwitchSwitch.Return
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FunctionSwitchSwitch.Return">
    <span id="anyfunand-functionswitchswitch-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FunctionSwitchSwitch.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FunctionSwitchSwitch.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..





