
.. _AnyKinDriverMarker:

##################
AnyKinDriverMarker
##################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyKinDriver`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyKinDriverMarker.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyKinDriverMarker
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`Demo.SliderCrank2D </demos/zips/Demo.SliderCrank2D.zip>`
     - Planar slider crank mechanism.
   * - :download:`Demo.SliderCrank3D </demos/zips/Demo.SliderCrank3D.zip>`
     - Model of spatial slider-crank mechanism in 3D demonstrating...
   * - :download:`Demo.SliderCrank3D_2 </demos/zips/Demo.SliderCrank3D_2.zip>`
     - Extension of the Demo.SliderCrank3D with an additional linkage.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyKinDriverMarker.AnyRefFrame:

AnyRefFrame
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="AnyRefFrame">
    <span id="anykindrivermarker-anyrefframe" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyRefFrame (1..2) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyRefFrame" title="Permalink to this headline">¶</a>
    <span class="member-descr">The reference frames that are input for the measure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrame`
    | **Number:** 1..2



    The reference frames that are input for the measure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.AnyParamFun:

AnyParamFun
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="AnyParamFun">
    <span id="anykindrivermarker-anyparamfun" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyParamFun (0..1) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyParamFun" title="Permalink to this headline">¶</a>
    <span class="member-descr">Parameter functions (single input parameter), used as time-dependent...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyParamFun`
    | **Number:** 0..1



    Parameter functions (single input parameter), used as time-dependent kinematical driver functions.

..











*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

.. _AnyKinDriverMarker.MeasureOrganizer:

MeasureOrganizer
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MeasureOrganizer">
    <span id="anykindrivermarker-measureorganizer" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MeasureOrganizer </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#MeasureOrganizer" title="Permalink to this headline">¶</a>
    <span class="member-descr">List of indices of components from the assembled measures to be included in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    List of indices of components from the assembled measures to be included in the new (organized) measure.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyKinDriverMarker.CType:

CType
========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="CType">
    <span id="anykindrivermarker-ctype" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> CType </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#CType" title="Permalink to this headline">¶</a>
    <span class="member-descr">Constraint type specification that specify how the kinematic solver should...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinEqType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    Constraint type specification that specify how the kinematic solver should handle the constraint.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyKinDriverMarker.WeightFun:

WeightFun
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="WeightFun">
    <span id="anykindrivermarker-weightfun" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> WeightFun </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#WeightFun" title="Permalink to this headline">¶</a>
    <span class="member-descr">Kinematic weighting functions, i.e., time-functions (AnyParamFun) which...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    Kinematic weighting functions, i.e., time-functions (AnyParamFun) which multiplied to the kinemtic measures before it is used as constraints. An array of vector functions can be entered; in case of more than one function, their outputs are stacked into one vector. The total number of elements must match the dimension of the kinematic measure.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyKinDriverMarker.DriverPos0:

DriverPos0
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="DriverPos0">
    <span id="anykindrivermarker-driverpos0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> DriverPos0 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#DriverPos0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Initial position at time zero.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    Initial position at time zero.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyKinDriverMarker.DriverVel0:

DriverVel0
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="DriverVel0">
    <span id="anykindrivermarker-drivervel0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> DriverVel0 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#DriverVel0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Initial velocity at time zero.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    Initial velocity at time zero.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyKinDriverMarker.DriverAcc0:

DriverAcc0
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="DriverAcc0">
    <span id="anykindrivermarker-driveracc0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> DriverAcc0 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#DriverAcc0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Initial acceleration at time zero.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*







    Initial acceleration at time zero.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyKinDriverMarker.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdConfig">
    <span id="anykindrivermarker-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UpdDesign">
    <span id="anykindrivermarker-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdOutput">
    <span id="anykindrivermarker-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.t_:

t
====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="t">
    <span id="anykindrivermarker-t_" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.RefFrames:

RefFrames
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefFrames">
    <span id="anykindrivermarker-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Surfaces:

Surfaces
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Surfaces">
    <span id="anykindrivermarker-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.KinMeasureArr:

KinMeasureArr
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="KinMeasureArr">
    <span id="anykindrivermarker-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.KinMeasureIndexArr:

KinMeasureIndexArr
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="KinMeasureIndexArr">
    <span id="anykindrivermarker-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.nDim:

nDim
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="nDim">
    <span id="anykindrivermarker-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.RefFrameOutput:

RefFrameOutput
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RefFrameOutput">
    <span id="anykindrivermarker-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.RefFrameOutput.RefFrameArr:

RefFrameOutput.RefFrameArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefFrameOutput.RefFrameArr">
    <span id="anykindrivermarker-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.RefFrameOutput.Jacobians:

RefFrameOutput.Jacobians
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RefFrameOutput.Jacobians">
    <span id="anykindrivermarker-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Pos:

Pos
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Pos">
    <span id="anykindrivermarker-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Vel:

Vel
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Vel">
    <span id="anykindrivermarker-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Acc:

Acc
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Acc">
    <span id="anykindrivermarker-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction:

Reaction
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction">
    <span id="anykindrivermarker-reaction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction" title="Permalink to this headline">¶</a>
    <span class="member-descr">Reaction forces associated with the constraints.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyReacForce`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Reaction forces associated with the constraints.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.UpdConfig:

Reaction.UpdConfig
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.UpdConfig">
    <span id="anykindrivermarker-reaction-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.UpdDesign:

Reaction.UpdDesign
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.UpdDesign">
    <span id="anykindrivermarker-reaction-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.UpdOutput:

Reaction.UpdOutput
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.UpdOutput">
    <span id="anykindrivermarker-reaction-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.t:

Reaction.t
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.t">
    <span id="anykindrivermarker-reaction-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrames:

Reaction.RefFrames
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.RefFrames">
    <span id="anykindrivermarker-reaction-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.Surfaces:

Reaction.Surfaces
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.Surfaces">
    <span id="anykindrivermarker-reaction-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.KinMeasureArr:

Reaction.KinMeasureArr
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.KinMeasureArr">
    <span id="anykindrivermarker-reaction-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.KinMeasureIndexArr:

Reaction.KinMeasureIndexArr
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.KinMeasureIndexArr">
    <span id="anykindrivermarker-reaction-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.nDim:

Reaction.nDim
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.nDim">
    <span id="anykindrivermarker-reaction-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrameOutput:

Reaction.RefFrameOutput
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.RefFrameOutput">
    <span id="anykindrivermarker-reaction-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrameOutput.RefFrameArr:

Reaction.RefFrameOutput.RefFrameArr
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.RefFrameOutput.RefFrameArr">
    <span id="anykindrivermarker-reaction-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrameOutput.Jacobians:

Reaction.RefFrameOutput.Jacobians
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.RefFrameOutput.Jacobians">
    <span id="anykindrivermarker-reaction-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrameOutput.F:

Reaction.RefFrameOutput.F
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.RefFrameOutput.F">
    <span id="anykindrivermarker-reaction-refframeoutput-f" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrameOutput.F</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrameOutput.F" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.RefFrameOutput.M:

Reaction.RefFrameOutput.M
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.RefFrameOutput.M">
    <span id="anykindrivermarker-reaction-refframeoutput-m" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.RefFrameOutput.M</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.RefFrameOutput.M" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.Fin:

Reaction.Fin
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Reaction.Fin">
    <span id="anykindrivermarker-reaction-fin" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.Fin</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.Fin" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of input loads to the given type of analysis,...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of input loads to the given type of analysis, i.e., to the right-hand side of the equations of motion.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Reaction.Fout:

Reaction.Fout
================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Reaction.Fout">
    <span id="anykindrivermarker-reaction-fout" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Reaction.Fout</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Reaction.Fout" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of outputs from the given type of analysis....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of outputs from the given type of analysis. This is the total force in the element after the analysis is executed.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.WeightPos:

WeightPos
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="WeightPos">
    <span id="anykindrivermarker-weightpos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">WeightPos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#WeightPos" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current value of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current value of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.WeightVel:

WeightVel
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="WeightVel">
    <span id="anykindrivermarker-weightvel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">WeightVel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#WeightVel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current time-derivative of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current time-derivative of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.WeightAcc:

WeightAcc
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="WeightAcc">
    <span id="anykindrivermarker-weightacc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">WeightAcc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#WeightAcc" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current 2'nd order time-derivative of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current 2'nd order time-derivative of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.DriverPos:

DriverPos
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="DriverPos">
    <span id="anykindrivermarker-driverpos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">DriverPos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#DriverPos" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current value of the driver function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current value of the driver function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.DriverVel:

DriverVel
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="DriverVel">
    <span id="anykindrivermarker-drivervel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">DriverVel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#DriverVel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current time-derivative value of the driver function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current time-derivative value of the driver function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.DriverAcc:

DriverAcc
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="DriverAcc">
    <span id="anykindrivermarker-driveracc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">DriverAcc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#DriverAcc" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current second time-derivative value of the driver function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current second time-derivative value of the driver function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear:

Linear
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear">
    <span id="anykindrivermarker-linear" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear" title="Permalink to this headline">¶</a>
    <span class="member-descr">Linear kinematic measure that measure the error between the marker location...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinear2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Linear kinematic measure that measure the error between the marker location and the given wanted marker trajectory, i.e., the marker function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.UpdConfig:

Linear.UpdConfig
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.UpdConfig">
    <span id="anykindrivermarker-linear-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.UpdDesign:

Linear.UpdDesign
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.UpdDesign">
    <span id="anykindrivermarker-linear-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.UpdOutput:

Linear.UpdOutput
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.UpdOutput">
    <span id="anykindrivermarker-linear-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.t:

Linear.t
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.t">
    <span id="anykindrivermarker-linear-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.RefFrames:

Linear.RefFrames
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.RefFrames">
    <span id="anykindrivermarker-linear-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.Surfaces:

Linear.Surfaces
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.Surfaces">
    <span id="anykindrivermarker-linear-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.KinMeasureArr:

Linear.KinMeasureArr
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.KinMeasureArr">
    <span id="anykindrivermarker-linear-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.KinMeasureIndexArr:

Linear.KinMeasureIndexArr
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.KinMeasureIndexArr">
    <span id="anykindrivermarker-linear-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.nDim:

Linear.nDim
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.nDim">
    <span id="anykindrivermarker-linear-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.RefFrameOutput:

Linear.RefFrameOutput
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.RefFrameOutput">
    <span id="anykindrivermarker-linear-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.RefFrameOutput.RefFrameArr:

Linear.RefFrameOutput.RefFrameArr
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.RefFrameOutput.RefFrameArr">
    <span id="anykindrivermarker-linear-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.RefFrameOutput.Jacobians:

Linear.RefFrameOutput.Jacobians
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.RefFrameOutput.Jacobians">
    <span id="anykindrivermarker-linear-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.Pos:

Linear.Pos
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.Pos">
    <span id="anykindrivermarker-linear-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.Vel:

Linear.Vel
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.Vel">
    <span id="anykindrivermarker-linear-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.Acc:

Linear.Acc
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.Acc">
    <span id="anykindrivermarker-linear-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.TrajectoryPos:

Linear.TrajectoryPos
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.TrajectoryPos">
    <span id="anykindrivermarker-linear-trajectorypos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.TrajectoryPos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.TrajectoryPos" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current global position on the trajectory. Transformtion for given...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Current global position on the trajectory. Transformtion for given RefTraject is done.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.TrajectoryVel:

Linear.TrajectoryVel
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.TrajectoryVel">
    <span id="anykindrivermarker-linear-trajectoryvel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.TrajectoryVel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.TrajectoryVel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current time-derivative value of TrajectoryPos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Current time-derivative value of TrajectoryPos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.TrajectoryAcc:

Linear.TrajectoryAcc
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear.TrajectoryAcc">
    <span id="anykindrivermarker-linear-trajectoryacc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.TrajectoryAcc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.TrajectoryAcc" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current second time-derivative value of TrajectoryPos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Current second time-derivative value of TrajectoryPos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyKinDriverMarker.Linear.RefTrajectory:

Linear.RefTrajectory
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear.RefTrajectory">
    <span id="anykindrivermarker-linear-reftrajectory" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefTrajectory</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefTrajectory" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pointer to the reference frame object associated with the trajectory time-function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Pointer to the reference frame object associated with the trajectory time-function.

..





