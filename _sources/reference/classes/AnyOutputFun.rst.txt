
.. _AnyOutputFun:

############
AnyOutputFun
############

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyFunction`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyOutputFun.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|







.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.




*******************************
Required initialization members
*******************************




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyOutputFun.Val:

Val
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Val">
    <span id="anyoutputfun-val" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Val</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Val" title="Permalink to this headline">¶</a>
    <span class="member-descr">The current value of the output. It must be initialized with an expression...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`



    The current value of the output. It must be initialized with an expression that defines the output.

..








.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyOutputFun.DummyReturn:

DummyReturn
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="DummyReturn">
    <span id="anyoutputfun-dummyreturn" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">DummyReturn</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#DummyReturn" title="Permalink to this headline">¶</a>
    <span class="member-descr">Return value for function calls made before the output data structureis...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Return value for function calls made before the output data structureis complete, i.e. during loading.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyOutputFun.VoidFun:

VoidFun
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="VoidFun">
    <span id="anyoutputfun-voidfun" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">VoidFun</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#VoidFun" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyOutputFun.VoidFun.ArgList:

VoidFun.ArgList
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="VoidFun.ArgList">
    <span id="anyoutputfun-voidfun-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">VoidFun.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#VoidFun.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..





