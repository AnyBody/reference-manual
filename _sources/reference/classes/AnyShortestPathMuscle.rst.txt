
.. _AnyShortestPathMuscle:

#####################
AnyShortestPathMuscle
#####################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyMuscleShortestPath`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyShortestPathMuscle.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyShortestPathMuscle
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyForceConOnMuscleActivity </demos/zips/ClassExamples.AnyForceConOnMuscleActivity.zip>`
     - Applying constraints on muscle activity.
   * - :download:`ClassExamples.AnyShortestPathMuscle </demos/zips/ClassExamples.AnyShortestPathMuscle.zip>`
     - Muscle wrapping by class AnyShortestPathMuscle.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.AnyMuscleModel:

AnyMuscleModel
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AnyMuscleModel">
    <span id="anyshortestpathmuscle-anymusclemodel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyMuscleModel (1) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyMuscleModel" title="Permalink to this headline">¶</a>
    <span class="member-descr">A muscle model that defines the strength and passive properties of this muscle.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMuscleModel`
    | **Number:** 1



    A muscle model that defines the strength and passive properties of this muscle.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.AnyRefFrame:

AnyRefFrame
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="AnyRefFrame">
    <span id="anyshortestpathmuscle-anyrefframe" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyRefFrame (2..Inf) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyRefFrame" title="Permalink to this headline">¶</a>
    <span class="member-descr">Reference frames that define the via-points.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrame`
    | **Number:** 2..Inf



    Reference frames that define the via-points.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.AnySurface:

AnySurface
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AnySurface">
    <span id="anyshortestpathmuscle-anysurface" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnySurface (0..Inf) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnySurface" title="Permalink to this headline">¶</a>
    <span class="member-descr">The surfaces that may be obstacles on the muscle's path.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySurface`
    | **Number:** 0..Inf



    The surfaces that may be obstacles on the muscle's path.

..









*******************************
Required initialization members
*******************************




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.SPLine.StringMesh:

SPLine.StringMesh
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.StringMesh">
    <span id="anyshortestpathmuscle-spline-stringmesh" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.StringMesh</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.StringMesh" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of discretization points on each string segment.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`



    Number of discretization points on each string segment.

..








*******************************
Optional initialization members
*******************************
 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

viewForce
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> viewForce </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewForce" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the force.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.viewForce.Visible:

viewForce.Visible
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.Visible">
    <span id="anyshortestpathmuscle-viewforce-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewForce.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.Opacity:

viewForce.Opacity
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.Opacity">
    <span id="anyshortestpathmuscle-viewforce-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewForce.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.Pickable:

viewForce.Pickable
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.Pickable">
    <span id="anyshortestpathmuscle-viewforce-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewForce.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.PickableZOrdering:

viewForce.PickableZOrdering
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.PickableZOrdering">
    <span id="anyshortestpathmuscle-viewforce-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#viewForce.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ShowTotalForces:

viewForce.ShowTotalForces
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.ShowTotalForces">
    <span id="anyshortestpathmuscle-viewforce-showtotalforces" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowTotalForces </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewForce.ShowTotalForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing total forces at each RefFrame for the force drawing.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for showing total forces at each RefFrame for the force drawing.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ShowComponentForces:

viewForce.ShowComponentForces
--------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.ShowComponentForces">
    <span id="anyshortestpathmuscle-viewforce-showcomponentforces" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowComponentForces </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewForce.ShowComponentForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing component forces at each RefFrame for the force drawing.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for showing component forces at each RefFrame for the force drawing.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ForceScale:

viewForce.ForceScale
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.ForceScale">
    <span id="anyshortestpathmuscle-viewforce-forcescale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.001 </span><a class="headerlink" href="#viewForce.ForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing forces in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.001``

        

    The scaling used for drawing forces in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ComponentScale:

viewForce.ComponentScale
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.ComponentScale">
    <span id="anyshortestpathmuscle-viewforce-componentscale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ComponentScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#viewForce.ComponentScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing force components in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``

        

    The scaling used for drawing force components in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.MomentToForceScale:

viewForce.MomentToForceScale
-------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.MomentToForceScale">
    <span id="anyshortestpathmuscle-viewforce-momenttoforcescale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MomentToForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.1 </span><a class="headerlink" href="#viewForce.MomentToForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used between forces and moments in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.1``

        

    The scaling used between forces and moments in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.MaximumForceLength:

viewForce.MaximumForceLength
-------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.MaximumForceLength">
    <span id="anyshortestpathmuscle-viewforce-maximumforcelength" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MaximumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.25 </span><a class="headerlink" href="#viewForce.MaximumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The maximum length of the force drawing arrow relative to the viewport width.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.25``

        

    The maximum length of the force drawing arrow relative to the viewport width.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.MinimumForceLength:

viewForce.MinimumForceLength
-------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.MinimumForceLength">
    <span id="anyshortestpathmuscle-viewforce-minimumforcelength" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MinimumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#viewForce.MinimumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The minimum length of the force drawing arrow relative to the maximum force...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``

        

    The minimum length of the force drawing arrow relative to the maximum force drawing arrow length.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ReactionForceColor:

viewForce.ReactionForceColor
-------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.ReactionForceColor">
    <span id="anyshortestpathmuscle-viewforce-reactionforcecolor" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ReactionForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#viewForce.ReactionForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing reaction force arrowhead tips.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``

        

    The color used for drawing reaction force arrowhead tips.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.AppliedForceColor:

viewForce.AppliedForceColor
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.AppliedForceColor">
    <span id="anyshortestpathmuscle-viewforce-appliedforcecolor" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AppliedForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#viewForce.AppliedForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing applied force arrowhead tips.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``

        

    The color used for drawing applied force arrowhead tips.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.ScaleToView:

viewForce.ScaleToView
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.ScaleToView">
    <span id="anyshortestpathmuscle-viewforce-scaletoview" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ScaleToView </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewForce.ScaleToView" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for enabling scaling of force/moment arrows to viewport size.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for enabling scaling of force/moment arrows to viewport size.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

.. _AnyShortestPathMuscle.MetabModel:

MetabModel
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="MetabModel">
    <span id="anyshortestpathmuscle-metabmodel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MetabModel </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#MetabModel" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``
    

    
    
    



    <No description>

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

viewMuscle
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> viewMuscle </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewMuscle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the muscle.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.viewMuscle.Visible:

viewMuscle.Visible
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.Visible">
    <span id="anyshortestpathmuscle-viewmuscle-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewMuscle.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.Opacity:

viewMuscle.Opacity
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.Opacity">
    <span id="anyshortestpathmuscle-viewmuscle-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewMuscle.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.Pickable:

viewMuscle.Pickable
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.Pickable">
    <span id="anyshortestpathmuscle-viewmuscle-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewMuscle.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.PickableZOrdering:

viewMuscle.PickableZOrdering
-------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.PickableZOrdering">
    <span id="anyshortestpathmuscle-viewmuscle-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#viewMuscle.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.RGB:

viewMuscle.RGB
-----------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.RGB">
    <span id="anyshortestpathmuscle-viewmuscle-rgb" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#viewMuscle.RGB" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color in RGB values between 0 and 1. This must either be an array with 3...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGBs`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.5546875, 0.1015625, 0.1171875}``

        

    Color in RGB values between 0 and 1. This must either be an array with 3 values, i.e., one color for all line segments, or an array of RGB value sets, i.e., a matrix with three columns. Multiple colors are handled similarly to the multiple thickness values.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.Transparency:

viewMuscle.Transparency
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.Transparency">
    <span id="anyshortestpathmuscle-viewmuscle-transparency" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Transparency </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewMuscle.Transparency" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object transparency parameter. Values must be in the range from 0.0...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Object transparency parameter. Values must be in the range from 0.0 (completely transparent) to 1.0 (completely opaque).

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawOnOff:

viewMuscle.DrawOnOff
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawOnOff">
    <span id="anyshortestpathmuscle-viewmuscle-drawonoff" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewMuscle.DrawOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer value that controls if to draw the muscle or not 
    Options are:
    0: Do...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Integer value that controls if to draw the muscle or not 
    Options are:
    0: Do not draw the muscle
    1: Draw the muscle

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.Bulging:

viewMuscle.Bulging
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.Bulging">
    <span id="anyshortestpathmuscle-viewmuscle-bulging" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Bulging </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewMuscle.Bulging" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer value that specifies that the muscle bulges according to:1: The...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Integer value that specifies that the muscle bulges according to:1: The muscle activity.
    2: The current strength relative to the nominal strength.  
    3: The actual force compared to the nominal strength. 
    4: Obtaining constant volume of the muscle.
    Otherwise, the muscle will have constant radius given by the nominal strength of the muscle and the member MaxStress.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.ColorScale:

viewMuscle.ColorScale
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.ColorScale">
    <span id="anyshortestpathmuscle-viewmuscle-colorscale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ColorScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewMuscle.ColorScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer value that controls the color interpolation between the color in...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Integer value that controls the color interpolation between the color in RGBColorScale and RGB. 
    Options are:
    1: The muscle activity.
    2: The current strength relative to the nominal strength. 
    3: The actual force compared to the nominal strength.
    Otherwise, the muscle will have the color given in RGB.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.RGBColorScale:

viewMuscle.RGBColorScale
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.RGBColorScale">
    <span id="anyshortestpathmuscle-viewmuscle-rgbcolorscale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGBColorScale </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#viewMuscle.RGBColorScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color used for color scaling, values should be given in the range 0 to 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0.95703125, 0.78515625, 0.78515625}``

        

    Color used for color scaling, values should be given in the range 0 to 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.MaxStress:

viewMuscle.MaxStress
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.MaxStress">
    <span id="anyshortestpathmuscle-viewmuscle-maxstress" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MaxStress </span><span class="member-title-equal">=</span><span class="member-title-default"> 250000.0 </span><a class="headerlink" href="#viewMuscle.MaxStress" title="Permalink to this headline">¶</a>
    <span class="member-descr">MaxStress is the maximum allowed stress in the muscle used for estimating...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``250000.0``

        

    MaxStress is the maximum allowed stress in the muscle used for estimating the visual thickness of the muscles. The default radius of the muscle is determined based on the strength and this MaxStress value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScaleOnOff:

viewMuscle.DrawScaleOnOff
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.DrawScaleOnOff">
    <span id="anyshortestpathmuscle-viewmuscle-drawscaleonoff" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScaleOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewMuscle.DrawScaleOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for turning on multiple-color color scaling.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for turning on multiple-color color scaling.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale:

viewMuscle.DrawScale
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawScale">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewMuscle.DrawScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing material style settings that defines the multi-color coloring function.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStyleDrawMaterialScale`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Drawing material style settings that defines the multi-color coloring function.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.EnableCreasing:

viewMuscle.DrawScale.EnableCreasing
--------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.DrawScale.EnableCreasing">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-enablecreasing" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.EnableCreasing </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewMuscle.DrawScale.EnableCreasing" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set to Off, the creasing angle is ignored for this material.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    If set to Off, the creasing angle is ignored for this material.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.CreasingAngle:

viewMuscle.DrawScale.CreasingAngle
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawScale.CreasingAngle">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-creasingangle" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.CreasingAngle </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.524 </span><a class="headerlink" href="#viewMuscle.DrawScale.CreasingAngle" title="Permalink to this headline">¶</a>
    <span class="member-descr">The maximum angle (in radians) between neighboring triangle before the edge...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyFloatVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.524``

        

    The maximum angle (in radians) between neighboring triangle before the edge between the triangles is rendered as a hard edge.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.EnableWireframe:

viewMuscle.DrawScale.EnableWireframe
---------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.DrawScale.EnableWireframe">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-enablewireframe" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.EnableWireframe </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewMuscle.DrawScale.EnableWireframe" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set to On, surfaces with this material will be rendered as wireframe.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    If set to On, surfaces with this material will be rendered as wireframe.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.EnableSmoothing:

viewMuscle.DrawScale.EnableSmoothing
---------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawScale.EnableSmoothing">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-enablesmoothing" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.EnableSmoothing </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewMuscle.DrawScale.EnableSmoothing" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set to On, smoothing of surfaces are enabled for this material.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    If set to On, smoothing of surfaces are enabled for this material.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.Param:

viewMuscle.DrawScale.Param
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.DrawScale.Param">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-param" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.Param </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewMuscle.DrawScale.Param" title="Permalink to this headline">¶</a>
    <span class="member-descr">Parameter controling the output. It must be initialized with an expression...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Parameter controling the output. It must be initialized with an expression for the actual value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.ParamArray:

viewMuscle.DrawScale.ParamArray
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawScale.ParamArray">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-paramarray" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.ParamArray </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#viewMuscle.DrawScale.ParamArray" title="Permalink to this headline">¶</a>
    <span class="member-descr">Parameter values for which corresponding RGB and opacity values are given in...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Parameter values for which corresponding RGB and opacity values are given in RGBArray and OpacityArray, respectively.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.RGBArray:

viewMuscle.DrawScale.RGBArray
--------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.DrawScale.RGBArray">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-rgbarray" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.RGBArray </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#viewMuscle.DrawScale.RGBArray" title="Permalink to this headline">¶</a>
    <span class="member-descr">RGB color values corresponding to parameter values in ParamArray.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGBs`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    RGB color values corresponding to parameter values in ParamArray.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.DrawScale.OpacityArray:

viewMuscle.DrawScale.OpacityArray
------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.DrawScale.OpacityArray">
    <span id="anyshortestpathmuscle-viewmuscle-drawscale-opacityarray" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DrawScale.OpacityArray </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#viewMuscle.DrawScale.OpacityArray" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity values corresponding to parameter values in ParamArray.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Opacity values corresponding to parameter values in ParamArray.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

SPLine
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> SPLine </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#SPLine" title="Permalink to this headline">¶</a>
    <span class="member-descr">Kinematic measure of the length of the muscle tendon unit.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure:

SPLine.viewKinMeasure
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#SPLine.viewKinMeasure" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the kinematic measure.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDrawKinMeasure`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Drawing object that renders the kinematic measure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Visible:

SPLine.viewKinMeasure.Visible
--------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.Visible">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SPLine.viewKinMeasure.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Opacity:

SPLine.viewKinMeasure.Opacity
--------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.Opacity">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Pickable:

SPLine.viewKinMeasure.Pickable
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.Pickable">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.PickableZOrdering:

SPLine.viewKinMeasure.PickableZOrdering
------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.PickableZOrdering">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RGB1:

SPLine.viewKinMeasure.RGB1
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.RGB1">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-rgb1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB1 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#SPLine.viewKinMeasure.RGB1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F1 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``

        

    Color F1 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RGB2:

SPLine.viewKinMeasure.RGB2
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.RGB2">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-rgb2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB2 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#SPLine.viewKinMeasure.RGB2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F2 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``

        

    Color F2 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RGB3:

SPLine.viewKinMeasure.RGB3
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.RGB3">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-rgb3" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB3 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.3, 0.8} </span><a class="headerlink" href="#SPLine.viewKinMeasure.RGB3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F3 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.3, 0.8}``

        

    Color F3 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RGB4:

SPLine.viewKinMeasure.RGB4
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.RGB4">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-rgb4" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB4 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.5, 0.2} </span><a class="headerlink" href="#SPLine.viewKinMeasure.RGB4" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F4 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.5, 0.2}``

        

    Color F4 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Label:

SPLine.viewKinMeasure.Label
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.Label">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-label" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Label </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.Label" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Size:

SPLine.viewKinMeasure.Size
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.Size">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-size" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Size </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.02 </span><a class="headerlink" href="#SPLine.viewKinMeasure.Size" title="Permalink to this headline">¶</a>
    <span class="member-descr">Radius size of the balls etc. of the AnyDrawKinMeasure.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.02``

        

    Radius size of the balls etc. of the AnyDrawKinMeasure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Line:

SPLine.viewKinMeasure.Line
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.Line">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-line" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Line </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.Line" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the AnyDrawKinMeasure should have a line...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the AnyDrawKinMeasure should have a line between ball components.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.Text:

SPLine.viewKinMeasure.Text
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.Text">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-text" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Text </span><span class="member-title-equal">=</span><span class="member-title-default"> "" </span><a class="headerlink" href="#SPLine.viewKinMeasure.Text" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set, this text is shown as the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``

        

    If set, this text is shown as the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.TextSize:

SPLine.viewKinMeasure.TextSize
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.TextSize">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-textsize" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.TextSize </span><span class="member-title-equal">=</span><span class="member-title-default"> 30.0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.TextSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">The size in pixels of the Text label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``30.0``

        

    The size in pixels of the Text label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ShowIllustration:

SPLine.viewKinMeasure.ShowIllustration
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.ShowIllustration">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-showillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.ShowIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the graphical representation of the kinematic measure should be...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the graphical representation of the kinematic measure should be drawn if applicable.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ShowLabelLines:

SPLine.viewKinMeasure.ShowLabelLines
---------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.ShowLabelLines">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-showlabellines" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowLabelLines </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.ShowLabelLines" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the lines from the label to the reference frames of the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the lines from the label to the reference frames of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ShowValue:

SPLine.viewKinMeasure.ShowValue
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.ShowValue">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-showvalue" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowValue </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SPLine.viewKinMeasure.ShowValue" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the pos value of the kinematic measure should be shown in the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Indicates if the pos value of the kinematic measure should be shown in the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ShowLabelBorder:

SPLine.viewKinMeasure.ShowLabelBorder
----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.ShowLabelBorder">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-showlabelborder" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowLabelBorder </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SPLine.viewKinMeasure.ShowLabelBorder" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the label of the kinematic measure should be drawn.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the label of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.IllustrationPositionOffset:

SPLine.viewKinMeasure.IllustrationPositionOffset
---------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.IllustrationPositionOffset">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-illustrationpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.IllustrationPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#SPLine.viewKinMeasure.IllustrationPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.IllustrationRotationOffset:

SPLine.viewKinMeasure.IllustrationRotationOffset
---------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.IllustrationRotationOffset">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-illustrationrotationoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.IllustrationRotationOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#SPLine.viewKinMeasure.IllustrationRotationOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Rotational offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RefIllustration:

SPLine.viewKinMeasure.RefIllustration
----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.RefIllustration">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-refillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RefIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#SPLine.viewKinMeasure.RefIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the illustration...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the illustration is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.RefLabel:

SPLine.viewKinMeasure.RefLabel
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.RefLabel">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-reflabel" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RefLabel </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#SPLine.viewKinMeasure.RefLabel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the label is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the label is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.LabelPositionOffset:

SPLine.viewKinMeasure.LabelPositionOffset
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.LabelPositionOffset">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-labelpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.LabelPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#SPLine.viewKinMeasure.LabelPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the label of the kinematic measure in the reference...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the label of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueScaling:

SPLine.viewKinMeasure.ValueScaling
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.ValueScaling">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuescaling" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueScaling </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueScaling" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value used as a factor for the displayed pos value of the kinematic measure....</span>
    </h4>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Value used as a factor for the displayed pos value of the kinematic measure. This must either be a scalar or have the same size as pos of the kinematic measure being drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueStyle:

SPLine.viewKinMeasure.ValueStyle
-----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.ValueStyle">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuestyle" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueStyle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for the label text.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStyleNumeric2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Format settings for the label text.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueStyle.Digits:

SPLine.viewKinMeasure.ValueStyle.Digits
------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.ValueStyle.Digits">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuestyle-digits" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Digits </span><span class="member-title-equal">=</span><span class="member-title-default"> 8 </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueStyle.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``8``

        

    Number of digits in output. Disregarded if smaller than one.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueStyle.Style:

SPLine.viewKinMeasure.ValueStyle.Style
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.ValueStyle.Style">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuestyle-style" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Style </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueStyle.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style of the numeric output.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Style of the numeric output.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueStyle.Scale:

SPLine.viewKinMeasure.ValueStyle.Scale
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.ValueStyle.Scale">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuestyle-scale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Scale </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueStyle.Scale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for scaling.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for scaling.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.ValueStyle.ScaleVal:

SPLine.viewKinMeasure.ValueStyle.ScaleVal
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.ValueStyle.ScaleVal">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-valuestyle-scaleval" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.ScaleVal </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#SPLine.viewKinMeasure.ValueStyle.ScaleVal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling factor.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Scaling factor.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.StringRadius:

SPLine.StringRadius
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.StringRadius">
    <span id="anyshortestpathmuscle-spline-stringradius" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.StringRadius </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#SPLine.StringRadius" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    <No description>

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.InitWrapPosVectors:

SPLine.InitWrapPosVectors
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.InitWrapPosVectors">
    <span id="anyshortestpathmuscle-spline-initwrapposvectors" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.InitWrapPosVectors </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#SPLine.InitWrapPosVectors" title="Permalink to this headline">¶</a>
    <span class="member-descr">An array of 3-D vectors that specify the initial shape of the string. The...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyMatrix`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    An array of 3-D vectors that specify the initial shape of the string. The vectors are ordered as rows of a matrix. For each line segment two vectors must be specified. They are defining two points relative to the line segment's origin and insertion nodes and the curve's initial shape will be three straight lines; from the origin to the first point, then to the second, and finally to the insertion point.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.InitWrapPosVecArr:

SPLine.InitWrapPosVecArr
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.InitWrapPosVecArr">
    <span id="anyshortestpathmuscle-spline-initwrapposvecarr" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.InitWrapPosVecArr </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#SPLine.InitWrapPosVecArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object pointer array that must collect pointers to the initial position...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtr`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Object pointer array that must collect pointers to the initial position vectors. The initial position vectors are one array of 3D vector (AnyMatrix) for each line segment of the SPLine. Pointer value of 'None' is allowed, if a straight line between origin and insertion.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.InitWrapPosOnlyOnOff:

SPLine.InitWrapPosOnlyOnOff
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.InitWrapPosOnlyOnOff">
    <span id="anyshortestpathmuscle-spline-initwrapposonlyonoff" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.InitWrapPosOnlyOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SPLine.InitWrapPosOnlyOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether to use initial position only or carry out the wrapping...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for whether to use initial position only or carry out the wrapping computation. This is an option aimed at debugging initial position specification for all positions during a motion.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.InitWrapPosForEachStepOnOff:

SPLine.InitWrapPosForEachStepOnOff
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.InitWrapPosForEachStepOnOff">
    <span id="anyshortestpathmuscle-spline-initwrapposforeachsteponoff" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.InitWrapPosForEachStepOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SPLine.InitWrapPosForEachStepOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch to use the initial condition vectors as starting point in each time step..</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch to use the initial condition vectors as starting point in each time step..

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.SolverVersion:

SPLine.SolverVersion
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.SolverVersion">
    <span id="anyshortestpathmuscle-spline-solverversion" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.SolverVersion </span><span class="member-title-equal">=</span><span class="member-title-default"> 4.0 </span><a class="headerlink" href="#SPLine.SolverVersion" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``4.0``

        

    <No description>

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.ContactStiffness:

SPLine.ContactStiffness
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.ContactStiffness">
    <span id="anyshortestpathmuscle-spline-contactstiffness" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ContactStiffness </span><span class="member-title-equal">=</span><span class="member-title-default"> 10.0 </span><a class="headerlink" href="#SPLine.ContactStiffness" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``10.0``

        

    <No description>

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.RelTol:

SPLine.RelTol
----------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.RelTol">
    <span id="anyshortestpathmuscle-spline-reltol" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RelTol </span><span class="member-title-equal">=</span><span class="member-title-default"> 1e-08 </span><a class="headerlink" href="#SPLine.RelTol" title="Permalink to this headline">¶</a>
    <span class="member-descr">Relative tolerance for the change of the string that is used to determine...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1e-08``

        

    Relative tolerance for the change of the string that is used to determine whether the solution is acceptable. The string length is used for normalization of the displacement.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.AbsTol:

SPLine.AbsTol
----------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.AbsTol">
    <span id="anyshortestpathmuscle-spline-abstol" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AbsTol </span><span class="member-title-equal">=</span><span class="member-title-default"> 1e-06 </span><a class="headerlink" href="#SPLine.AbsTol" title="Permalink to this headline">¶</a>
    <span class="member-descr">Absolute tolerance for the change of positions of wrapping points that is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1e-06``

        

    Absolute tolerance for the change of positions of wrapping points that is used to determine whether the solution is acceptable.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.AbsSurfDistTol:

SPLine.AbsSurfDistTol
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.AbsSurfDistTol">
    <span id="anyshortestpathmuscle-spline-abssurfdisttol" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AbsSurfDistTol </span><span class="member-title-equal">=</span><span class="member-title-default"> 1e-08 </span><a class="headerlink" href="#SPLine.AbsSurfDistTol" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1e-08``

        

    <No description>

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.AugLagCoef:

SPLine.AugLagCoef
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.AugLagCoef">
    <span id="anyshortestpathmuscle-spline-auglagcoef" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AugLagCoef </span><span class="member-title-equal">=</span><span class="member-title-default"> 1000.0 </span><a class="headerlink" href="#SPLine.AugLagCoef" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coefficient for penalty term in the Augmented Lagragian method. Increasing...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1000.0``

        

    Coefficient for penalty term in the Augmented Lagragian method. Increasing this value can in some cases remove problems of negative pivots in the velocity analysis.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.MaxIteration:

SPLine.MaxIteration
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.MaxIteration">
    <span id="anyshortestpathmuscle-spline-maxiteration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MaxIteration </span><span class="member-title-equal">=</span><span class="member-title-default"> 500 </span><a class="headerlink" href="#SPLine.MaxIteration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximum number of interation in line wrapping solver. It can be increased if...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``500``

        

    Maximum number of interation in line wrapping solver. It can be increased if the solver runs out of iteration step in difficult problems.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.MaxRelStepSize:

SPLine.MaxRelStepSize
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.MaxRelStepSize">
    <span id="anyshortestpathmuscle-spline-maxrelstepsize" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MaxRelStepSize </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#SPLine.MaxRelStepSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximum relative step size. The default of 1.0 implies full step size, but...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Maximum relative step size. The default of 1.0 implies full step size, but it can be decreased to increase robustness for difficult problems.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.SolverType:

SPLine.SolverType
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.SolverType">
    <span id="anyshortestpathmuscle-spline-solvertype" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.SolverType </span><span class="member-title-equal">=</span><span class="member-title-default"> SPSolverModes </span><a class="headerlink" href="#SPLine.SolverType" title="Permalink to this headline">¶</a>
    <span class="member-descr">The SolverType defines one of four solver for the wrapping problem. Possible...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyKinSPSheetSolverType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``SPSolverModes``

        

    The SolverType defines one of four solver for the wrapping problem. Possible Values are:
    SPSolverFull - standard optimization solver for constraint optimization;
    SPSolverModes - method using modes to solve the optimization problem. This method is default and faster especially for fewer points in contact.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.MaxAngle:

SPLine.MaxAngle
------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.MaxAngle">
    <span id="anyshortestpathmuscle-spline-maxangle" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.MaxAngle </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.34906585 </span><a class="headerlink" href="#SPLine.MaxAngle" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.34906585``

        

    <No description>

..



    



    

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyShortestPathMuscle.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdConfig">
    <span id="anyshortestpathmuscle-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="UpdDesign">
    <span id="anyshortestpathmuscle-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdOutput">
    <span id="anyshortestpathmuscle-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.t_:

t
====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="t">
    <span id="anyshortestpathmuscle-t_" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrames:

RefFrames
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrames">
    <span id="anyshortestpathmuscle-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Surfaces:

Surfaces
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Surfaces">
    <span id="anyshortestpathmuscle-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.KinMeasureArr:

KinMeasureArr
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="KinMeasureArr">
    <span id="anyshortestpathmuscle-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{AnyShortestPathMuscle.SPLine}``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.KinMeasureIndexArr:

KinMeasureIndexArr
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="KinMeasureIndexArr">
    <span id="anyshortestpathmuscle-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0}``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.nDim:

nDim
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="nDim">
    <span id="anyshortestpathmuscle-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrameOutput:

RefFrameOutput
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="RefFrameOutput">
    <span id="anyshortestpathmuscle-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrameOutput.RefFrameArr:

RefFrameOutput.RefFrameArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrameOutput.RefFrameArr">
    <span id="anyshortestpathmuscle-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames that the measure depends on.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames that the measure depends on.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrameOutput.Jacobians:

RefFrameOutput.Jacobians
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="RefFrameOutput.Jacobians">
    <span id="anyshortestpathmuscle-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr">Data structure for holding Jacobian elements of the measure with respect to...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Data structure for holding Jacobian elements of the measure with respect to the degrees of freedom of the reference frames in 'DepRefFrameArr'. The structure is 3-domensional. First dimension contains on item for each frame in 'DepRefFrameArr', second dimension one for each dimension of the measure, and finally, in the third dimension, 6 jacobian elements (3 translations and 3 rotations refering to global axes).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrameOutput.F:

RefFrameOutput.F
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrameOutput.F">
    <span id="anyshortestpathmuscle-refframeoutput-f" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.F</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.F" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of 3D force vectors (global coordinates) associated with the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of 3D force vectors (global coordinates) associated with the references frames used by the force object (i.e. by the underlying kinematic measure).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.RefFrameOutput.M:

RefFrameOutput.M
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="RefFrameOutput.M">
    <span id="anyshortestpathmuscle-refframeoutput-m" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.M</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.M" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of 3D moment vectors (global coordinates) associated with the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of 3D moment vectors (global coordinates) associated with the references frames used by the force object (i.e. by the underlying kinematic measure).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.UpdConfig:

viewForce.UpdConfig
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.UpdConfig">
    <span id="anyshortestpathmuscle-viewforce-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewForce.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewForce.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.UpdDesign:

viewForce.UpdDesign
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewForce.UpdDesign">
    <span id="anyshortestpathmuscle-viewforce-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewForce.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewForce.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewForce.UpdOutput:

viewForce.UpdOutput
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewForce.UpdOutput">
    <span id="anyshortestpathmuscle-viewforce-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewForce.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewForce.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Fin:

Fin
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Fin">
    <span id="anyshortestpathmuscle-fin" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fin</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fin" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of input loads to the given type of analysis,...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of input loads to the given type of analysis, i.e., to the right-hand side of the equations of motion.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Fout:

Fout
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Fout">
    <span id="anyshortestpathmuscle-fout" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fout</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fout" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of outputs from the given type of analysis....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of outputs from the given type of analysis. This is the total force in the element after the analysis is executed.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Lmt:

Lmt
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Lmt">
    <span id="anyshortestpathmuscle-lmt" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Lmt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Lmt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the muscle-tendon unit.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Length of the muscle-tendon unit.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Lm:

Lm
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Lm">
    <span id="anyshortestpathmuscle-lm" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Lm</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Lm" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the muscle fiber unit. This is not the actual fiber length when...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Length of the muscle fiber unit. This is not the actual fiber length when the pennation angle is different from zero, but the length of the unit along the tendon line-of-action.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Lt:

Lt
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Lt">
    <span id="anyshortestpathmuscle-lt" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Lt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Lt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the tendon unit.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Length of the tendon unit.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.LmtDot:

LmtDot
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="LmtDot">
    <span id="anyshortestpathmuscle-lmtdot" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">LmtDot</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#LmtDot" title="Permalink to this headline">¶</a>
    <span class="member-descr">Time-derivative of the muscle-tendon unit length, Lmt.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Time-derivative of the muscle-tendon unit length, Lmt.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.LmDot:

LmDot
========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="LmDot">
    <span id="anyshortestpathmuscle-lmdot" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">LmDot</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#LmDot" title="Permalink to this headline">¶</a>
    <span class="member-descr">Time-derivative of the muscle fiber unit length, Lm.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Time-derivative of the muscle fiber unit length, Lm.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Activity:

Activity
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Activity">
    <span id="anyshortestpathmuscle-activity" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Activity</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Activity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Muscle activity, i.e., normalized muscle force.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Muscle activity, i.e., normalized muscle force.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.CorrectedActivity:

CorrectedActivity
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="CorrectedActivity">
    <span id="anyshortestpathmuscle-correctedactivity" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">CorrectedActivity</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#CorrectedActivity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Corrected activity, which may be slightly different from Activity for muscle...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Corrected activity, which may be slightly different from Activity for muscle models that involve linearization.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Fm:

Fm
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Fm">
    <span id="anyshortestpathmuscle-fm" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fm</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fm" title="Permalink to this headline">¶</a>
    <span class="member-descr">Force in the muscle fiber unit. Not projected onto the fiber direction for...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Force in the muscle fiber unit. Not projected onto the fiber direction for pennation angles different from zero.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Ft:

Ft
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Ft">
    <span id="anyshortestpathmuscle-ft" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Ft</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Ft" title="Permalink to this headline">¶</a>
    <span class="member-descr">Force in the tendon unit.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Force in the tendon unit.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Fp:

Fp
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Fp">
    <span id="anyshortestpathmuscle-fp" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fp</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fp" title="Permalink to this headline">¶</a>
    <span class="member-descr">Force in the parallel elastic element. Not projected onto the fiber...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Force in the parallel elastic element. Not projected onto the fiber direction for pennation angles different from zero.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Strength:

Strength
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Strength">
    <span id="anyshortestpathmuscle-strength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Strength</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Strength" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current muscle strength.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Current muscle strength.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Ft0:

Ft0
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Ft0">
    <span id="anyshortestpathmuscle-ft0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Ft0</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Ft0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Tendon force at zero activity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Tendon force at zero activity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Ft0Grad:

Ft0Grad
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Ft0Grad">
    <span id="anyshortestpathmuscle-ft0grad" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Ft0Grad</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Ft0Grad" title="Permalink to this headline">¶</a>
    <span class="member-descr">Tendon force gradient. with respect to the activity</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Tendon force gradient. with respect to the activity

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.PennationAngle:

PennationAngle
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="PennationAngle">
    <span id="anyshortestpathmuscle-pennationangle" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PennationAngle</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PennationAngle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pennation angle.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Pennation angle.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.EPOTt:

EPOTt
========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="EPOTt">
    <span id="anyshortestpathmuscle-epott" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">EPOTt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#EPOTt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Potential energy in the tendon.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Potential energy in the tendon.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.EPOTp:

EPOTp
========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="EPOTp">
    <span id="anyshortestpathmuscle-epotp" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">EPOTp</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#EPOTp" title="Permalink to this headline">¶</a>
    <span class="member-descr">Potential energy in the parallel elastic element.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Potential energy in the parallel elastic element.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.EPOTmt:

EPOTmt
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="EPOTmt">
    <span id="anyshortestpathmuscle-epotmt" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">EPOTmt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#EPOTmt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Total potential energy in the muscle-tendon unit.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Total potential energy in the muscle-tendon unit.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Pt:

Pt
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Pt">
    <span id="anyshortestpathmuscle-pt" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Power of the tendon unit on the segments, Pt=Ft*LtDot.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Power of the tendon unit on the segments, Pt=Ft*LtDot.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Pm:

Pm
=====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Pm">
    <span id="anyshortestpathmuscle-pm" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pm</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pm" title="Permalink to this headline">¶</a>
    <span class="member-descr">Power of the muscle fiber unit on the segments, Pm=Fm*LmDot.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Power of the muscle fiber unit on the segments, Pm=Fm*LmDot.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Pmt:

Pmt
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Pmt">
    <span id="anyshortestpathmuscle-pmt" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pmt</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pmt" title="Permalink to this headline">¶</a>
    <span class="member-descr">Power of the muscle-tendon unit on the segments, Pmt=Fmt*LmtDot.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Power of the muscle-tendon unit on the segments, Pmt=Fmt*LmtDot.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.Pmet:

Pmet
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Pmet">
    <span id="anyshortestpathmuscle-pmet" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pmet</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pmet" title="Permalink to this headline">¶</a>
    <span class="member-descr">Metabolic power.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Metabolic power.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.UpdConfig:

viewMuscle.UpdConfig
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.UpdConfig">
    <span id="anyshortestpathmuscle-viewmuscle-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewMuscle.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewMuscle.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.UpdDesign:

viewMuscle.UpdDesign
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.UpdDesign">
    <span id="anyshortestpathmuscle-viewmuscle-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewMuscle.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewMuscle.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.UpdOutput:

viewMuscle.UpdOutput
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewMuscle.UpdOutput">
    <span id="anyshortestpathmuscle-viewmuscle-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewMuscle.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewMuscle.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.viewMuscle.Thickness:

viewMuscle.Thickness
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewMuscle.Thickness">
    <span id="anyshortestpathmuscle-viewmuscle-thickness" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewMuscle.Thickness</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewMuscle.Thickness" title="Permalink to this headline">¶</a>
    <span class="member-descr">Line thickness. This must either hold one value valid for all line segments...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.001``




    Line thickness. This must either hold one value valid for all line segments or an array of values. For an array each element will be valid for a segment of the line and the last value will be valid for all remaining segments of the line.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine:

SPLine
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine">
    <span id="anyshortestpathmuscle-spline" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine" title="Permalink to this headline">¶</a>
    <span class="member-descr">Kinematic measure of the length of the muscle tendon unit.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinSPLine`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Kinematic measure of the length of the muscle tendon unit.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.UpdConfig:

SPLine.UpdConfig
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.UpdConfig">
    <span id="anyshortestpathmuscle-spline-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.UpdDesign:

SPLine.UpdDesign
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.UpdDesign">
    <span id="anyshortestpathmuscle-spline-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.UpdOutput:

SPLine.UpdOutput
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.UpdOutput">
    <span id="anyshortestpathmuscle-spline-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.t:

SPLine.t
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.t">
    <span id="anyshortestpathmuscle-spline-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.RefFrames:

SPLine.RefFrames
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.RefFrames">
    <span id="anyshortestpathmuscle-spline-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.Surfaces:

SPLine.Surfaces
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.Surfaces">
    <span id="anyshortestpathmuscle-spline-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.KinMeasureArr:

SPLine.KinMeasureArr
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.KinMeasureArr">
    <span id="anyshortestpathmuscle-spline-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.KinMeasureIndexArr:

SPLine.KinMeasureIndexArr
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.KinMeasureIndexArr">
    <span id="anyshortestpathmuscle-spline-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.nDim:

SPLine.nDim
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.nDim">
    <span id="anyshortestpathmuscle-spline-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.RefFrameOutput:

SPLine.RefFrameOutput
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.RefFrameOutput">
    <span id="anyshortestpathmuscle-spline-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.RefFrameOutput.RefFrameArr:

SPLine.RefFrameOutput.RefFrameArr
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.RefFrameOutput.RefFrameArr">
    <span id="anyshortestpathmuscle-spline-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames that the measure depends on.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames that the measure depends on.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.RefFrameOutput.Jacobians:

SPLine.RefFrameOutput.Jacobians
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.RefFrameOutput.Jacobians">
    <span id="anyshortestpathmuscle-spline-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr">Data structure for holding Jacobian elements of the measure with respect to...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Data structure for holding Jacobian elements of the measure with respect to the degrees of freedom of the reference frames in 'DepRefFrameArr'. The structure is 3-domensional. First dimension contains on item for each frame in 'DepRefFrameArr', second dimension one for each dimension of the measure, and finally, in the third dimension, 6 jacobian elements (3 translations and 3 rotations refering to global axes).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.Pos:

SPLine.Pos
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.Pos">
    <span id="anyshortestpathmuscle-spline-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.Vel:

SPLine.Vel
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.Vel">
    <span id="anyshortestpathmuscle-spline-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.Acc:

SPLine.Acc
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.Acc">
    <span id="anyshortestpathmuscle-spline-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.UpdConfig:

SPLine.viewKinMeasure.UpdConfig
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.UpdConfig">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.viewKinMeasure.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.viewKinMeasure.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.UpdDesign:

SPLine.viewKinMeasure.UpdDesign
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.viewKinMeasure.UpdDesign">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.viewKinMeasure.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.viewKinMeasure.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.viewKinMeasure.UpdOutput:

SPLine.viewKinMeasure.UpdOutput
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.viewKinMeasure.UpdOutput">
    <span id="anyshortestpathmuscle-spline-viewkinmeasure-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.viewKinMeasure.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.viewKinMeasure.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.P:

SPLine.P
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SPLine.P">
    <span id="anyshortestpathmuscle-spline-p" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.P</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.P" title="Permalink to this headline">¶</a>
    <span class="member-descr">Matrix of points of the polyline, i.e., the mesh points.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMatrix`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Matrix of points of the polyline, i.e., the mesh points.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyShortestPathMuscle.SPLine.Ap:

SPLine.Ap
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SPLine.Ap">
    <span id="anyshortestpathmuscle-spline-ap" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SPLine.Ap</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SPLine.Ap" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..






