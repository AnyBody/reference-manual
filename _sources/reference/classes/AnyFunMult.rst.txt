
.. _AnyFunMult:

##########
AnyFunMult
##########

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Abstract
:Parent class: :ref:`AnyFunElemByElemOpr`


**************
Description
**************


This is an abstract class implementing the function: :ref:`mult()` .

.. seealso:: Please see the documentation on :ref:`mult()` for more information
    on how to use the function.


.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyFunMult
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyFunElemOpr </demos/zips/ClassExamples.AnyFunElemOpr.zip>`
     - Element by element functions



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunMult.FloatFloatFunction:

FloatFloatFunction
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction">
    <span id="anyfunmult-floatfloatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatFloatFunction.ArgList:

FloatFloatFunction.ArgList
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatFloatFunction.ArgList">
    <span id="anyfunmult-floatfloatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatFloatFunction.ArgList.Arg1:

FloatFloatFunction.ArgList.Arg1
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction.ArgList.Arg1">
    <span id="anyfunmult-floatfloatfunction-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatFloatFunction.ArgList.Arg2:

FloatFloatFunction.ArgList.Arg2
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatFloatFunction.ArgList.Arg2">
    <span id="anyfunmult-floatfloatfunction-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatFloatFunction.Return:

FloatFloatFunction.Return
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction.Return">
    <span id="anyfunmult-floatfloatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatIntFunction:

FloatIntFunction
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction">
    <span id="anyfunmult-floatintfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatIntFunction.ArgList:

FloatIntFunction.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatIntFunction.ArgList">
    <span id="anyfunmult-floatintfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatIntFunction.ArgList.Arg1:

FloatIntFunction.ArgList.Arg1
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction.ArgList.Arg1">
    <span id="anyfunmult-floatintfunction-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatIntFunction.ArgList.Arg2:

FloatIntFunction.ArgList.Arg2
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatIntFunction.ArgList.Arg2">
    <span id="anyfunmult-floatintfunction-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.FloatIntFunction.Return:

FloatIntFunction.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction.Return">
    <span id="anyfunmult-floatintfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntFloatFunction:

IntFloatFunction
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction">
    <span id="anyfunmult-intfloatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntFloatFunction.ArgList:

IntFloatFunction.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntFloatFunction.ArgList">
    <span id="anyfunmult-intfloatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntFloatFunction.ArgList.Arg1:

IntFloatFunction.ArgList.Arg1
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction.ArgList.Arg1">
    <span id="anyfunmult-intfloatfunction-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntFloatFunction.ArgList.Arg2:

IntFloatFunction.ArgList.Arg2
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntFloatFunction.ArgList.Arg2">
    <span id="anyfunmult-intfloatfunction-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntFloatFunction.Return:

IntFloatFunction.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction.Return">
    <span id="anyfunmult-intfloatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntIntFunction:

IntIntFunction
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction">
    <span id="anyfunmult-intintfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntIntFunction.ArgList:

IntIntFunction.ArgList
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntIntFunction.ArgList">
    <span id="anyfunmult-intintfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntIntFunction.ArgList.Arg1:

IntIntFunction.ArgList.Arg1
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction.ArgList.Arg1">
    <span id="anyfunmult-intintfunction-arglist-arg1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList.Arg1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList.Arg1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntIntFunction.ArgList.Arg2:

IntIntFunction.ArgList.Arg2
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntIntFunction.ArgList.Arg2">
    <span id="anyfunmult-intintfunction-arglist-arg2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList.Arg2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList.Arg2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunMult.IntIntFunction.Return:

IntIntFunction.Return
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction.Return">
    <span id="anyfunmult-intintfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..





