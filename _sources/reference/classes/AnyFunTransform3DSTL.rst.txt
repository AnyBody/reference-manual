
.. _AnyFunTransform3DSTL:

####################
AnyFunTransform3DSTL
####################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyFunTransform3D`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyFunTransform3DSTL.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyFunTransform3DSTL
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyFunTransform3D </demos/zips/ClassExamples.AnyFunTransform3D.zip>`
     - 3D transformation function (AnyFunTransform3D-derived classes)
   * - :download:`ClassExamples.AnyFunTransform3DSTL </demos/zips/ClassExamples.AnyFunTransform3DSTL.zip>`
     - 3D transformation function for transforming STL files



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.




*******************************
Required initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunTransform3DSTL.NumPoints:

NumPoints
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="NumPoints">
    <span id="anyfuntransform3dstl-numpoints" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">NumPoints</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#NumPoints" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of landmark points to construct RBF transform.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`



    Number of landmark points to construct RBF transform.

..






*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunTransform3DSTL.PreTransforms:

PreTransforms
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreTransforms">
    <span id="anyfuntransform3dstl-pretransforms" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PreTransforms </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#PreTransforms" title="Permalink to this headline">¶</a>
    <span class="member-descr">Transforms that have to be applied prior to the application of constructed...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    Transforms that have to be applied prior to the application of constructed transform, i.e. a rigid/non-rigid surface registration.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.RBFDef:

RBFDef
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RBFDef">
    <span id="anyfuntransform3dstl-rbfdef" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RBFDef </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#RBFDef" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder with RBF settings.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStyleRBFFun`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    Folder with RBF settings.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.RBFDef.Type:

RBFDef.Type
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RBFDef.Type">
    <span id="anyfuntransform3dstl-rbfdef-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RBFDef.Type </span><span class="member-title-equal">=</span><span class="member-title-default"> RBF_Gaussian </span><a class="headerlink" href="#RBFDef.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Type of the radial basis function to use.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnumRBFFunType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``RBF_Gaussian``



    Type of the radial basis function to use.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.RBFDef.Param:

RBFDef.Param
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RBFDef.Param">
    <span id="anyfuntransform3dstl-rbfdef-param" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RBFDef.Param </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#RBFDef.Param" title="Permalink to this headline">¶</a>
    <span class="member-descr">Parameter used in the given radial basis function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``



    Parameter used in the given radial basis function.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.FileName0:

FileName0
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="FileName0">
    <span id="anyfuntransform3dstl-filename0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> FileName0 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#FileName0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Source geometry filename, either STL or AnySurf file.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySurfFile`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    Source geometry filename, either STL or AnySurf file.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.ScaleXYZ0:

ScaleXYZ0
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ScaleXYZ0">
    <span id="anyfuntransform3dstl-scalexyz0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ScaleXYZ0 </span><span class="member-title-equal">=</span><span class="member-title-default"> {1.0, 1.0, 1.0} </span><a class="headerlink" href="#ScaleXYZ0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling law (3D vector) for the source surface.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{1.0, 1.0, 1.0}``



    Scaling law (3D vector) for the source surface.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.SurfaceObjects0:

SurfaceObjects0
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SurfaceObjects0">
    <span id="anyfuntransform3dstl-surfaceobjects0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SurfaceObjects0 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#SurfaceObjects0" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    <No description>

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.FileName1:

FileName1
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="FileName1">
    <span id="anyfuntransform3dstl-filename1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> FileName1 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#FileName1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Target geometry filename, either STL or AnySurf file.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySurfFile`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    Target geometry filename, either STL or AnySurf file.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.ScaleXYZ1:

ScaleXYZ1
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="ScaleXYZ1">
    <span id="anyfuntransform3dstl-scalexyz1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ScaleXYZ1 </span><span class="member-title-equal">=</span><span class="member-title-default"> {1.0, 1.0, 1.0} </span><a class="headerlink" href="#ScaleXYZ1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling law (3D vector) for the target surface.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{1.0, 1.0, 1.0}``



    Scaling law (3D vector) for the target surface.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.SurfaceObjects1:

SurfaceObjects1
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="SurfaceObjects1">
    <span id="anyfuntransform3dstl-surfaceobjects1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SurfaceObjects1 </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#SurfaceObjects1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    <No description>

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.UseClosestPointMatchingOnOff:

UseClosestPointMatchingOnOff
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UseClosestPointMatchingOnOff">
    <span id="anyfuntransform3dstl-useclosestpointmatchingonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UseClosestPointMatchingOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#UseClosestPointMatchingOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">A switch for using closest-point matching; alternatively vertex-to-vertex...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    A switch for using closest-point matching; alternatively vertex-to-vertex matching is used.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.UseSurfaceCorrespondence:

UseSurfaceCorrespondence
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UseSurfaceCorrespondence">
    <span id="anyfuntransform3dstl-usesurfacecorrespondence" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UseSurfaceCorrespondence </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#UseSurfaceCorrespondence" title="Permalink to this headline">¶</a>
    <span class="member-descr">A switch to notify the system whether it should use matched surface-couples...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    A switch to notify the system whether it should use matched surface-couples from the source and target sets or search closest points on all surfaces.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.PolynomDegree:

PolynomDegree
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PolynomDegree">
    <span id="anyfuntransform3dstl-polynomdegree" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PolynomDegree </span><span class="member-title-equal">=</span><span class="member-title-default"> -1 </span><a class="headerlink" href="#PolynomDegree" title="Permalink to this headline">¶</a>
    <span class="member-descr">Degree of the polynomial. Negative values mean that no polynomial term is used.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-1``



    Degree of the polynomial. Negative values mean that no polynomial term is used.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.PolynomCoefs:

PolynomCoefs
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PolynomCoefs">
    <span id="anyfuntransform3dstl-polynomcoefs" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PolynomCoefs </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#PolynomCoefs" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coefficients for the polynomial function. Each term of the polynomial must...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMatrix`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    Coefficients for the polynomial function. Each term of the polynomial must be given by three parameters, one for each direction in space, i.e., the PolynomCoefs are given as a (m x 3) matrix. The number of rows, m, must match PolynomDegree; degree zero means m=1 (the constant term), positive degrees mean m=1+3*degree, and negative degrees mean m=0.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBox:

BoundingBox
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="BoundingBox">
    <span id="anyfuntransform3dstl-boundingbox" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> BoundingBox </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#BoundingBox" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder with bounding box settings.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStyleBoundingBox`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    Folder with bounding box settings.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBox.Type:

BoundingBox.Type
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="BoundingBox.Type">
    <span id="anyfuntransform3dstl-boundingbox-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> BoundingBox.Type </span><span class="member-title-equal">=</span><span class="member-title-default"> BB_Cartesian </span><a class="headerlink" href="#BoundingBox.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines a way to compute the bounding box.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnumBoundingBoxType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``BB_Cartesian``



    Defines a way to compute the bounding box.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBox.ScaleXYZ:

BoundingBox.ScaleXYZ
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="BoundingBox.ScaleXYZ">
    <span id="anyfuntransform3dstl-boundingbox-scalexyz" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> BoundingBox.ScaleXYZ </span><span class="member-title-equal">=</span><span class="member-title-default"> {2.0, 2.0, 2.0} </span><a class="headerlink" href="#BoundingBox.ScaleXYZ" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines a scale factor vector in selected axes.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{2.0, 2.0, 2.0}``



    Defines a scale factor vector in selected axes.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBox.DivisionFactorXYZ:

BoundingBox.DivisionFactorXYZ
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="BoundingBox.DivisionFactorXYZ">
    <span id="anyfuntransform3dstl-boundingbox-divisionfactorxyz" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> BoundingBox.DivisionFactorXYZ </span><span class="member-title-equal">=</span><span class="member-title-default"> {1, 1, 1} </span><a class="headerlink" href="#BoundingBox.DivisionFactorXYZ" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines a number of bounding box subdivisions in selected axes.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{1, 1, 1}``



    Defines a number of bounding box subdivisions in selected axes.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBoxOnOff:

BoundingBoxOnOff
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="BoundingBoxOnOff">
    <span id="anyfuntransform3dstl-boundingboxonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> BoundingBoxOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#BoundingBoxOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">A switch to use bounding box points for the RBF transform construction....</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``



    A switch to use bounding box points for the RBF transform construction. Please note that the source and target surfaces have to be registered for intended use (please use AnyFunTransform3DLin2 or other as a pretransform).

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunTransform3DSTL.Function:

Function
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function">
    <span id="anyfuntransform3dstl-function" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function" title="Permalink to this headline">¶</a>
    <span class="member-descr">Function for 3D vectors (of floating point values).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Function for 3D vectors (of floating point values).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.Function.ArgList:

Function.ArgList
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function.ArgList">
    <span id="anyfuntransform3dstl-function-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.Function.ArgList.Arg:

Function.ArgList.Arg
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function.ArgList.Arg">
    <span id="anyfuntransform3dstl-function-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.Function.Return:

Function.Return
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function.Return">
    <span id="anyfuntransform3dstl-function-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.UpdFunData:

UpdFunData
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdFunData">
    <span id="anyfuntransform3dstl-updfundata" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdFunData</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdFunData" title="Permalink to this headline">¶</a>
    <span class="member-descr">Update counter and control variable for dependencies, for instance handling...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Update counter and control variable for dependencies, for instance handling dependencies in PreTransforms.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL._UpdSurfaces:

_UpdSurfaces
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="_UpdSurfaces">
    <span id="anyfuntransform3dstl-_updsurfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">_UpdSurfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#_UpdSurfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DSTL.BoundingBoxPoints:

BoundingBoxPoints
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="BoundingBoxPoints">
    <span id="anyfuntransform3dstl-boundingboxpoints" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">BoundingBoxPoints</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#BoundingBoxPoints" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positions of points defining the bounding box.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMatrix`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Positions of points defining the bounding box.

..





