
.. _AnyMechOutputFileForceExport:

############################
AnyMechOutputFileForceExport
############################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyMechOutputFileBase`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyMechOutputFileForceExport.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyMechOutputFileForceExport
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyBodyStudy.MechObjectExclude </demos/zips/ClassExamples.AnyBodyStudy.MechObjectExclude.zip>`
     - Excluding mechanical objects from the analysis in a mechanical studies
   * - :download:`ClassExamples.AnyMechOutputFileForceE </demos/zips/ClassExamples.AnyMechOutputFileForceE.zip>`
     - Output file containing loads on segments as 3D point forces and torques.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOutputFileForceExport.AnyRefFrame:

AnyRefFrame
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AnyRefFrame">
    <span id="anymechoutputfileforceexport-anyrefframe" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyRefFrame (0..Inf) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyRefFrame" title="Permalink to this headline">¶</a>
    <span class="member-descr">!Deprecated!: A reference can be inputted and all output data refers to this...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrame`
    | **Number:** 0..Inf



    !Deprecated!: A reference can be inputted and all output data refers to this reference frame. (Notice that segments are also reference frames, so the one you want to use as reference here must come first)

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOutputFileForceExport.AnySeg:

AnySeg
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="AnySeg">
    <span id="anymechoutputfileforceexport-anyseg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnySeg (0..Inf) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnySeg" title="Permalink to this headline">¶</a>
    <span class="member-descr">!Deprecated!: Selected segments for which the output may be prepared...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySeg`
    | **Number:** 0..Inf



    !Deprecated!: Selected segments for which the output may be prepared depending on AllSegmentsInStudyOnOff.

..









*******************************
Required initialization members
*******************************




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOutputFileForceExport.FileName:

FileName
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FileName">
    <span id="anymechoutputfileforceexport-filename" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FileName</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FileName" title="Permalink to this headline">¶</a>
    <span class="member-descr">Name of the file.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFileVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`



    Name of the file.

..








*******************************
Optional initialization members
*******************************
 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

NumberFormat
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> NumberFormat </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#NumberFormat" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for numerical values in text formatted files. Applies to...</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOutputFileForceExport.NumberFormat.Digits:

NumberFormat.Digits
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="NumberFormat.Digits">
    <span id="anymechoutputfileforceexport-numberformat-digits" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Digits </span><span class="member-title-equal">=</span><span class="member-title-default"> 15 </span><a class="headerlink" href="#NumberFormat.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``15``

        

    Number of digits in output. Disregarded if smaller than one.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOutputFileForceExport.NumberFormat.Width:

NumberFormat.Width
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="NumberFormat.Width">
    <span id="anymechoutputfileforceexport-numberformat-width" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Width </span><span class="member-title-equal">=</span><span class="member-title-default"> 23 </span><a class="headerlink" href="#NumberFormat.Width" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of character spaces reserved for the number in output. Disregarded if...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``23``

        

    Number of character spaces reserved for the number in output. Disregarded if smaller than one.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOutputFileForceExport.NumberFormat.Style:

NumberFormat.Style
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="NumberFormat.Style">
    <span id="anymechoutputfileforceexport-numberformat-style" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Style </span><span class="member-title-equal">=</span><span class="member-title-default"> ScientificNumber </span><a class="headerlink" href="#NumberFormat.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style specification.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyEnumFloatNumberStyle`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``ScientificNumber``

        

    Style specification.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOutputFileForceExport.NumberFormat.FormatStr:

NumberFormat.FormatStr
-------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="NumberFormat.FormatStr">
    <span id="anymechoutputfileforceexport-numberformat-formatstr" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.FormatStr </span><span class="member-title-equal">=</span><span class="member-title-default"> "" </span><a class="headerlink" href="#NumberFormat.FormatStr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Complete format specification using C-style character specification known...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``

        

    Complete format specification using C-style character specification known from the printf() function. This overrides the any other specification. If not specified by the user it is determined automatically from the other specification.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

.. _AnyMechOutputFileForceExport.UseRefFrameOnOff:

UseRefFrameOnOff
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="UseRefFrameOnOff">
    <span id="anymechoutputfileforceexport-userefframeonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UseRefFrameOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#UseRefFrameOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether to use the first AnyRefFrame member as refernce frame...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``
    

    
    
    



    Switch for whether to use the first AnyRefFrame member as refernce frame instead of the global reference system

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.AllSegmentsInStudyOnOff:

AllSegmentsInStudyOnOff
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AllSegmentsInStudyOnOff">
    <span id="anymechoutputfileforceexport-allsegmentsinstudyonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AllSegmentsInStudyOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#AllSegmentsInStudyOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch that controls whether the output is prepared for all segments in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``
    

    
    
    



    Switch that controls whether the output is prepared for all segments in the current study being analyzed, or for selected segments. Selected segments

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.XMLformatOnOff:

XMLformatOnOff
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="XMLformatOnOff">
    <span id="anymechoutputfileforceexport-xmlformatonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> XMLformatOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#XMLformatOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using XML formatted output as alternative to the original text output.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``
    

    
    
    



    Switch for using XML formatted output as alternative to the original text output.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.RefFrame:

RefFrame
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrame">
    <span id="anymechoutputfileforceexport-refframe" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RefFrame </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#RefFrame" title="Permalink to this headline">¶</a>
    <span class="member-descr">An object pointer variable to supply an output reference frame.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``
    

    
    
    



    An object pointer variable to supply an output reference frame.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.Segments:

Segments
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Segments">
    <span id="anymechoutputfileforceexport-segments" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Segments </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#Segments" title="Permalink to this headline">¶</a>
    <span class="member-descr">An object pointer array to supply a list of segments to output forces for.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*
    

    
    
    



    An object pointer array to supply a list of segments to output forces for.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.MeshRefFrames:

MeshRefFrames
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="MeshRefFrames">
    <span id="anymechoutputfileforceexport-meshrefframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MeshRefFrames </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#MeshRefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">An object pointer array to supply a list of corresponding to Segments ref....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*
    

    
    
    



    An object pointer array to supply a list of corresponding to Segments ref. frames, which would be used to output muscle attachment locations in. For example, the reference frame of the finite element mesh. Please note that all these reference frames should be created as subnodes on the segments of interest.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.ForceObjectExclude:

ForceObjectExclude
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="ForceObjectExclude">
    <span id="anymechoutputfileforceexport-forceobjectexclude" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceObjectExclude </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#ForceObjectExclude" title="Permalink to this headline">¶</a>
    <span class="member-descr">An array of pointers to force objects to be excluded from output. Can be...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*
    

    
    
    



    An array of pointers to force objects to be excluded from output. Can be used in combination with ForceObjectList.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOutputFileForceExport.ForceObjectList:

ForceObjectList
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="ForceObjectList">
    <span id="anymechoutputfileforceexport-forceobjectlist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceObjectList </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#ForceObjectList" title="Permalink to this headline">¶</a>
    <span class="member-descr">An array of pointers to force objects to be output. Can be used in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*
    

    
    
    



    An array of pointers to force objects to be output. Can be used in combination with ForceObjectExclude.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOutputFileForceExport.UpdData:

UpdData
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdData">
    <span id="anymechoutputfileforceexport-upddata" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdData</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdData" title="Permalink to this headline">¶</a>
    <span class="member-descr">Data update counter that counts number of data update and configuration processes.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Data update counter that counts number of data update and configuration processes.

..






