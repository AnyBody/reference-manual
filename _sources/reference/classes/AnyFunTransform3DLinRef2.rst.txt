
.. _AnyFunTransform3DLinRef2:

########################
AnyFunTransform3DLinRef2
########################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyFunTransform3DLinRef`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyFunTransform3DLinRef2.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyFunTransform3DLinRef2
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyFunTransform3D </demos/zips/ClassExamples.AnyFunTransform3D.zip>`
     - 3D transformation function (AnyFunTransform3D-derived classes)
   * - :download:`ClassExamples.AnyFunTransform3DLinRef </demos/zips/ClassExamples.AnyFunTransform3DLinRef.zip>`
     - 3D transformation functions based on mechanical objects' positions



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.





*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunTransform3DLinRef2.PreTransforms:

PreTransforms
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreTransforms">
    <span id="anyfuntransform3dlinref2-pretransforms" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PreTransforms </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#PreTransforms" title="Permalink to this headline">¶</a>
    <span class="member-descr">Transforms that have to be applied prior to the application of constructed...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*



    Transforms that have to be applied prior to the application of constructed transform, i.e. a rigid/non-rigid surface registration.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Ref:

Ref
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Ref">
    <span id="anyfuntransform3dlinref2-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Ref </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object that defines the reference frame of the function input.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``



    Object that defines the reference frame of the function input.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.RefTarget:

RefTarget
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefTarget">
    <span id="anyfuntransform3dlinref2-reftarget" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RefTarget </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#RefTarget" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object that defines the reference frame for the function output. If empty or...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``



    Object that defines the reference frame for the function output. If empty or 'None' then output will be given in the root reference frame for 'Ref'.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.TranslationOnOff:

TranslationOnOff
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="TranslationOnOff">
    <span id="anyfuntransform3dlinref2-translationonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> TranslationOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#TranslationOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether positions of the reference frames are included or ignored.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for whether positions of the reference frames are included or ignored.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.RotationOnOff:

RotationOnOff
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RotationOnOff">
    <span id="anyfuntransform3dlinref2-rotationonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> RotationOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#RotationOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether relative rotation of the reference frames are included or...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for whether relative rotation of the reference frames are included or ignored. If ignored all vectors are assumed to refer to the global axes and only positions are included in the transform.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2Global:

Function_Ref2Global
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2Global">
    <span id="anyfuntransform3dlinref2-function_ref2global" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Function_Ref2Global </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Function_Ref2Global" title="Permalink to this headline">¶</a>
    <span class="member-descr">Mono-function with additional argument for overriding the 'Ref' member...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    Mono-function with additional argument for overriding the 'Ref' member transforming to global coordinates.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget:

Function_Ref2RefTarget
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Function_Ref2RefTarget </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Function_Ref2RefTarget" title="Permalink to this headline">¶</a>
    <span class="member-descr">Mono-function with additional arguments for overriding the 'Ref' and...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    Mono-function with additional arguments for overriding the 'Ref' and 'RefTarget' members.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunTransform3DLinRef2.Function:

Function
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function">
    <span id="anyfuntransform3dlinref2-function" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function" title="Permalink to this headline">¶</a>
    <span class="member-descr">Function for 3D vectors (of floating point values).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Function for 3D vectors (of floating point values).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function.ArgList:

Function.ArgList
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function.ArgList">
    <span id="anyfuntransform3dlinref2-function-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function.ArgList.Arg:

Function.ArgList.Arg
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function.ArgList.Arg">
    <span id="anyfuntransform3dlinref2-function-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function.Return:

Function.Return
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function.Return">
    <span id="anyfuntransform3dlinref2-function-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.UpdFunData:

UpdFunData
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdFunData">
    <span id="anyfuntransform3dlinref2-updfundata" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdFunData</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdFunData" title="Permalink to this headline">¶</a>
    <span class="member-descr">Update counter and control variable for dependencies, for instance handling...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Update counter and control variable for dependencies, for instance handling dependencies in PreTransforms.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2Global.ArgList:

Function_Ref2Global.ArgList
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2Global.ArgList">
    <span id="anyfuntransform3dlinref2-function_ref2global-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2Global.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2Global.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2Global.ArgList.Arg:

Function_Ref2Global.ArgList.Arg
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function_Ref2Global.ArgList.Arg">
    <span id="anyfuntransform3dlinref2-function_ref2global-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2Global.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2Global.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2Global.ArgList.Ref:

Function_Ref2Global.ArgList.Ref
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2Global.ArgList.Ref">
    <span id="anyfuntransform3dlinref2-function_ref2global-arglist-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2Global.ArgList.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2Global.ArgList.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2Global.Return:

Function_Ref2Global.Return
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function_Ref2Global.Return">
    <span id="anyfuntransform3dlinref2-function_ref2global-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2Global.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2Global.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget.ArgList:

Function_Ref2RefTarget.ArgList
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget.ArgList">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2RefTarget.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2RefTarget.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget.ArgList.Arg:

Function_Ref2RefTarget.ArgList.Arg
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget.ArgList.Arg">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2RefTarget.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2RefTarget.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget.ArgList.Ref:

Function_Ref2RefTarget.ArgList.Ref
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget.ArgList.Ref">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget-arglist-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2RefTarget.ArgList.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2RefTarget.ArgList.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget.ArgList.RefTarget:

Function_Ref2RefTarget.ArgList.RefTarget
===========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget.ArgList.RefTarget">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget-arglist-reftarget" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2RefTarget.ArgList.RefTarget</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2RefTarget.ArgList.RefTarget" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunTransform3DLinRef2.Function_Ref2RefTarget.Return:

Function_Ref2RefTarget.Return
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Function_Ref2RefTarget.Return">
    <span id="anyfuntransform3dlinref2-function_ref2reftarget-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Function_Ref2RefTarget.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Function_Ref2RefTarget.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..





