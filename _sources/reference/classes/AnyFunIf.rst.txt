
.. _AnyFunIf:

########
AnyFunIf
########

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Abstract
:Parent class: :ref:`AnyFunLogical`


**************
Description
**************


This is an abstract class implementing the function: :ref:`iffun()` .

.. seealso:: Please see the documentation on :ref:`iffun()` for more information
    on how to use the function.


.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyFunIf
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyFunLogical </demos/zips/ClassExamples.AnyFunLogical.zip>`
     - Logical functions (derived from AnyFunLogical)



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.








.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunIf.FloatFloatFunction:

FloatFloatFunction
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction">
    <span id="anyfunif-floatfloatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function for multi-dimensional floating point values.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function for multi-dimensional floating point values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatFloatFunction.ArgList:

FloatFloatFunction.ArgList
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatFloatFunction.ArgList">
    <span id="anyfunif-floatfloatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatFloatFunction.ArgList.Condition:

FloatFloatFunction.ArgList.Condition
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction.ArgList.Condition">
    <span id="anyfunif-floatfloatfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatFloatFunction.ArgList.Result1:

FloatFloatFunction.ArgList.Result1
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatFloatFunction.ArgList.Result1">
    <span id="anyfunif-floatfloatfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatFloatFunction.ArgList.Result2:

FloatFloatFunction.ArgList.Result2
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction.ArgList.Result2">
    <span id="anyfunif-floatfloatfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction:

FloatIntFunction
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction">
    <span id="anyfunif-floatintfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional floating point condition and...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional floating point condition and integer return values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction.ArgList:

FloatIntFunction.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatIntFunction.ArgList">
    <span id="anyfunif-floatintfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction.ArgList.Condition:

FloatIntFunction.ArgList.Condition
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction.ArgList.Condition">
    <span id="anyfunif-floatintfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction.ArgList.Result1:

FloatIntFunction.ArgList.Result1
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatIntFunction.ArgList.Result1">
    <span id="anyfunif-floatintfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction.ArgList.Result2:

FloatIntFunction.ArgList.Result2
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction.ArgList.Result2">
    <span id="anyfunif-floatintfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction:

FloatStringFunction
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatStringFunction">
    <span id="anyfunif-floatstringfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional floating point condition and...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional floating point condition and string return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction.ArgList:

FloatStringFunction.ArgList
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatStringFunction.ArgList">
    <span id="anyfunif-floatstringfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction.ArgList.Condition:

FloatStringFunction.ArgList.Condition
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatStringFunction.ArgList.Condition">
    <span id="anyfunif-floatstringfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction.ArgList.Result1:

FloatStringFunction.ArgList.Result1
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatStringFunction.ArgList.Result1">
    <span id="anyfunif-floatstringfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction.ArgList.Result2:

FloatStringFunction.ArgList.Result2
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatStringFunction.ArgList.Result2">
    <span id="anyfunif-floatstringfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction:

FloatEnumFunction
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatEnumFunction">
    <span id="anyfunif-floatenumfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional floating point condition and...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional floating point condition and Enum return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction.ArgList:

FloatEnumFunction.ArgList
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatEnumFunction.ArgList">
    <span id="anyfunif-floatenumfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction.ArgList.Condition:

FloatEnumFunction.ArgList.Condition
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatEnumFunction.ArgList.Condition">
    <span id="anyfunif-floatenumfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction.ArgList.Result1:

FloatEnumFunction.ArgList.Result1
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatEnumFunction.ArgList.Result1">
    <span id="anyfunif-floatenumfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction.ArgList.Result2:

FloatEnumFunction.ArgList.Result2
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatEnumFunction.ArgList.Result2">
    <span id="anyfunif-floatenumfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction:

IntFloatFunction
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction">
    <span id="anyfunif-intfloatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional integer condition and floating...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional integer condition and floating point return values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction.ArgList:

IntFloatFunction.ArgList
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntFloatFunction.ArgList">
    <span id="anyfunif-intfloatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction.ArgList.Condition:

IntFloatFunction.ArgList.Condition
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction.ArgList.Condition">
    <span id="anyfunif-intfloatfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction.ArgList.Result1:

IntFloatFunction.ArgList.Result1
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntFloatFunction.ArgList.Result1">
    <span id="anyfunif-intfloatfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction.ArgList.Result2:

IntFloatFunction.ArgList.Result2
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction.ArgList.Result2">
    <span id="anyfunif-intfloatfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction:

IntIntFunction
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction">
    <span id="anyfunif-intintfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function for multi-dimensional integer values.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function for multi-dimensional integer values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction.ArgList:

IntIntFunction.ArgList
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntIntFunction.ArgList">
    <span id="anyfunif-intintfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction.ArgList.Condition:

IntIntFunction.ArgList.Condition
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction.ArgList.Condition">
    <span id="anyfunif-intintfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction.ArgList.Result1:

IntIntFunction.ArgList.Result1
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntIntFunction.ArgList.Result1">
    <span id="anyfunif-intintfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction.ArgList.Result2:

IntIntFunction.ArgList.Result2
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction.ArgList.Result2">
    <span id="anyfunif-intintfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction:

IntStringFunction
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntStringFunction">
    <span id="anyfunif-intstringfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional integer condition and string return.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional integer condition and string return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction.ArgList:

IntStringFunction.ArgList
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntStringFunction.ArgList">
    <span id="anyfunif-intstringfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction.ArgList.Condition:

IntStringFunction.ArgList.Condition
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntStringFunction.ArgList.Condition">
    <span id="anyfunif-intstringfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction.ArgList.Result1:

IntStringFunction.ArgList.Result1
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntStringFunction.ArgList.Result1">
    <span id="anyfunif-intstringfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction.ArgList.Result2:

IntStringFunction.ArgList.Result2
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntStringFunction.ArgList.Result2">
    <span id="anyfunif-intstringfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction:

IntEnumFunction
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntEnumFunction">
    <span id="anyfunif-intenumfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional integer condition and Enum return.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional integer condition and Enum return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction.ArgList:

IntEnumFunction.ArgList
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntEnumFunction.ArgList">
    <span id="anyfunif-intenumfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction.ArgList.Condition:

IntEnumFunction.ArgList.Condition
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntEnumFunction.ArgList.Condition">
    <span id="anyfunif-intenumfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction.ArgList.Result1:

IntEnumFunction.ArgList.Result1
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntEnumFunction.ArgList.Result1">
    <span id="anyfunif-intenumfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction.ArgList.Result2:

IntEnumFunction.ArgList.Result2
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntEnumFunction.ArgList.Result2">
    <span id="anyfunif-intenumfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction:

SwitchFloatFunction
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchFloatFunction">
    <span id="anyfunif-switchfloatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional switch condition and floating...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional switch condition and floating point return values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction.ArgList:

SwitchFloatFunction.ArgList
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchFloatFunction.ArgList">
    <span id="anyfunif-switchfloatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction.ArgList.Condition:

SwitchFloatFunction.ArgList.Condition
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchFloatFunction.ArgList.Condition">
    <span id="anyfunif-switchfloatfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction.ArgList.Result1:

SwitchFloatFunction.ArgList.Result1
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchFloatFunction.ArgList.Result1">
    <span id="anyfunif-switchfloatfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction.ArgList.Result2:

SwitchFloatFunction.ArgList.Result2
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchFloatFunction.ArgList.Result2">
    <span id="anyfunif-switchfloatfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction:

SwitchIntFunction
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchIntFunction">
    <span id="anyfunif-switchintfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function for multi-dimensional switch values.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function for multi-dimensional switch values.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction.ArgList:

SwitchIntFunction.ArgList
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchIntFunction.ArgList">
    <span id="anyfunif-switchintfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction.ArgList.Condition:

SwitchIntFunction.ArgList.Condition
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchIntFunction.ArgList.Condition">
    <span id="anyfunif-switchintfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction.ArgList.Result1:

SwitchIntFunction.ArgList.Result1
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchIntFunction.ArgList.Result1">
    <span id="anyfunif-switchintfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction.ArgList.Result2:

SwitchIntFunction.ArgList.Result2
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchIntFunction.ArgList.Result2">
    <span id="anyfunif-switchintfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction:

SwitchStringFunction
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchStringFunction">
    <span id="anyfunif-switchstringfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional switch condition and string return.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional switch condition and string return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction.ArgList:

SwitchStringFunction.ArgList
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchStringFunction.ArgList">
    <span id="anyfunif-switchstringfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction.ArgList.Condition:

SwitchStringFunction.ArgList.Condition
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchStringFunction.ArgList.Condition">
    <span id="anyfunif-switchstringfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction.ArgList.Result1:

SwitchStringFunction.ArgList.Result1
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchStringFunction.ArgList.Result1">
    <span id="anyfunif-switchstringfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction.ArgList.Result2:

SwitchStringFunction.ArgList.Result2
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchStringFunction.ArgList.Result2">
    <span id="anyfunif-switchstringfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction:

SwitchEnumFunction
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchEnumFunction">
    <span id="anyfunif-switchenumfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr">If-then-else function with multi-dimensional switch condition and Enum return.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    If-then-else function with multi-dimensional switch condition and Enum return.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction.ArgList:

SwitchEnumFunction.ArgList
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchEnumFunction.ArgList">
    <span id="anyfunif-switchenumfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    A special folder containing the argument list of the function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction.ArgList.Condition:

SwitchEnumFunction.ArgList.Condition
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchEnumFunction.ArgList.Condition">
    <span id="anyfunif-switchenumfunction-arglist-condition" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction.ArgList.Condition</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction.ArgList.Condition" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitch`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction.ArgList.Result1:

SwitchEnumFunction.ArgList.Result1
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchEnumFunction.ArgList.Result1">
    <span id="anyfunif-switchenumfunction-arglist-result1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction.ArgList.Result1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction.ArgList.Result1" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction.ArgList.Result2:

SwitchEnumFunction.ArgList.Result2
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchEnumFunction.ArgList.Result2">
    <span id="anyfunif-switchenumfunction-arglist-result2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction.ArgList.Result2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction.ArgList.Result2" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..





.. rst-class:: html-toggle

*********************
Deprecated members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunIf.FloatFloatFunction.Return:

FloatFloatFunction.Return
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatFloatFunction.Return">
    <span id="anyfunif-floatfloatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatIntFunction.Return:

FloatIntFunction.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatIntFunction.Return">
    <span id="anyfunif-floatintfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatIntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatIntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatStringFunction.Return:

FloatStringFunction.Return
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="FloatStringFunction.Return">
    <span id="anyfunif-floatstringfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatStringFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatStringFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.FloatEnumFunction.Return:

FloatEnumFunction.Return
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="FloatEnumFunction.Return">
    <span id="anyfunif-floatenumfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatEnumFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatEnumFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntFloatFunction.Return:

IntFloatFunction.Return
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntFloatFunction.Return">
    <span id="anyfunif-intfloatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntIntFunction.Return:

IntIntFunction.Return
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntIntFunction.Return">
    <span id="anyfunif-intintfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntIntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntIntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntStringFunction.Return:

IntStringFunction.Return
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="IntStringFunction.Return">
    <span id="anyfunif-intstringfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntStringFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntStringFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.IntEnumFunction.Return:

IntEnumFunction.Return
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="IntEnumFunction.Return">
    <span id="anyfunif-intenumfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntEnumFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntEnumFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchFloatFunction.Return:

SwitchFloatFunction.Return
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchFloatFunction.Return">
    <span id="anyfunif-switchfloatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchFloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchFloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchIntFunction.Return:

SwitchIntFunction.Return
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchIntFunction.Return">
    <span id="anyfunif-switchintfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchIntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchIntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchStringFunction.Return:

SwitchStringFunction.Return
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="SwitchStringFunction.Return">
    <span id="anyfunif-switchstringfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchStringFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchStringFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyString`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunIf.SwitchEnumFunction.Return:

SwitchEnumFunction.Return
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="SwitchEnumFunction.Return">
    <span id="anyfunif-switchenumfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">SwitchEnumFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#SwitchEnumFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyEnum`
    | **Eval moment:** :ref:`NotDefined <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: Hidden object for return-data management.




    <No description>

..





