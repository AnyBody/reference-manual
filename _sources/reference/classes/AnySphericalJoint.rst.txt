
.. _AnySphericalJoint:

#################
AnySphericalJoint
#################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyStdJoint`
:Child classes: :ref:`AnyTransSphericalJoint`

**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnySphericalJoint.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnySphericalJoint
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`Demo.SliderCrank2D </demos/zips/Demo.SliderCrank2D.zip>`
     - Planar slider crank mechanism.
   * - :download:`Demo.SliderCrank3D </demos/zips/Demo.SliderCrank3D.zip>`
     - Model of spatial slider-crank mechanism in 3D demonstrating...
   * - :download:`Demo.SliderCrank3D_2 </demos/zips/Demo.SliderCrank3D_2.zip>`
     - Extension of the Demo.SliderCrank3D with an additional linkage.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.AnyRefFrame:

AnyRefFrame
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AnyRefFrame">
    <span id="anysphericaljoint-anyrefframe" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyRefFrame (2) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyRefFrame" title="Permalink to this headline">¶</a>
    <span class="member-descr">The reference frames that are input for the measure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrame`
    | **Number:** 2



    The reference frames that are input for the measure.

..












*******************************
Optional initialization members
*******************************
 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

viewKinMeasure
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> viewKinMeasure </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewKinMeasure" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the kinematic measure.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.viewKinMeasure.Visible:

viewKinMeasure.Visible
-------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.Visible">
    <span id="anysphericaljoint-viewkinmeasure-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewKinMeasure.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Opacity:

viewKinMeasure.Opacity
-------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.Opacity">
    <span id="anysphericaljoint-viewkinmeasure-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewKinMeasure.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Pickable:

viewKinMeasure.Pickable
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.Pickable">
    <span id="anysphericaljoint-viewkinmeasure-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.PickableZOrdering:

viewKinMeasure.PickableZOrdering
-----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.PickableZOrdering">
    <span id="anysphericaljoint-viewkinmeasure-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#viewKinMeasure.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RGB1:

viewKinMeasure.RGB1
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.RGB1">
    <span id="anysphericaljoint-viewkinmeasure-rgb1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB1 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#viewKinMeasure.RGB1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F1 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``

        

    Color F1 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RGB2:

viewKinMeasure.RGB2
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.RGB2">
    <span id="anysphericaljoint-viewkinmeasure-rgb2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB2 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#viewKinMeasure.RGB2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F2 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``

        

    Color F2 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RGB3:

viewKinMeasure.RGB3
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.RGB3">
    <span id="anysphericaljoint-viewkinmeasure-rgb3" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB3 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.3, 0.8} </span><a class="headerlink" href="#viewKinMeasure.RGB3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F3 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.3, 0.8}``

        

    Color F3 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RGB4:

viewKinMeasure.RGB4
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.RGB4">
    <span id="anysphericaljoint-viewkinmeasure-rgb4" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB4 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.5, 0.2} </span><a class="headerlink" href="#viewKinMeasure.RGB4" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F4 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.5, 0.2}``

        

    Color F4 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Label:

viewKinMeasure.Label
-----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.Label">
    <span id="anysphericaljoint-viewkinmeasure-label" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Label </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.Label" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Size:

viewKinMeasure.Size
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.Size">
    <span id="anysphericaljoint-viewkinmeasure-size" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Size </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.02 </span><a class="headerlink" href="#viewKinMeasure.Size" title="Permalink to this headline">¶</a>
    <span class="member-descr">Radius size of the balls etc. of the AnyDrawKinMeasure.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.02``

        

    Radius size of the balls etc. of the AnyDrawKinMeasure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Line:

viewKinMeasure.Line
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.Line">
    <span id="anysphericaljoint-viewkinmeasure-line" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Line </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.Line" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the AnyDrawKinMeasure should have a line...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the AnyDrawKinMeasure should have a line between ball components.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.Text:

viewKinMeasure.Text
----------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.Text">
    <span id="anysphericaljoint-viewkinmeasure-text" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Text </span><span class="member-title-equal">=</span><span class="member-title-default"> "" </span><a class="headerlink" href="#viewKinMeasure.Text" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set, this text is shown as the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``

        

    If set, this text is shown as the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.TextSize:

viewKinMeasure.TextSize
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.TextSize">
    <span id="anysphericaljoint-viewkinmeasure-textsize" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.TextSize </span><span class="member-title-equal">=</span><span class="member-title-default"> 30.0 </span><a class="headerlink" href="#viewKinMeasure.TextSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">The size in pixels of the Text label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``30.0``

        

    The size in pixels of the Text label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ShowIllustration:

viewKinMeasure.ShowIllustration
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.ShowIllustration">
    <span id="anysphericaljoint-viewkinmeasure-showillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.ShowIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the graphical representation of the kinematic measure should be...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the graphical representation of the kinematic measure should be drawn if applicable.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ShowLabelLines:

viewKinMeasure.ShowLabelLines
--------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.ShowLabelLines">
    <span id="anysphericaljoint-viewkinmeasure-showlabellines" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowLabelLines </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.ShowLabelLines" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the lines from the label to the reference frames of the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the lines from the label to the reference frames of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ShowValue:

viewKinMeasure.ShowValue
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.ShowValue">
    <span id="anysphericaljoint-viewkinmeasure-showvalue" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowValue </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewKinMeasure.ShowValue" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the pos value of the kinematic measure should be shown in the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Indicates if the pos value of the kinematic measure should be shown in the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ShowLabelBorder:

viewKinMeasure.ShowLabelBorder
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.ShowLabelBorder">
    <span id="anysphericaljoint-viewkinmeasure-showlabelborder" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ShowLabelBorder </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewKinMeasure.ShowLabelBorder" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the label of the kinematic measure should be drawn.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the label of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.IllustrationPositionOffset:

viewKinMeasure.IllustrationPositionOffset
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.IllustrationPositionOffset">
    <span id="anysphericaljoint-viewkinmeasure-illustrationpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.IllustrationPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#viewKinMeasure.IllustrationPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.IllustrationRotationOffset:

viewKinMeasure.IllustrationRotationOffset
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.IllustrationRotationOffset">
    <span id="anysphericaljoint-viewkinmeasure-illustrationrotationoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.IllustrationRotationOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#viewKinMeasure.IllustrationRotationOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Rotational offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RefIllustration:

viewKinMeasure.RefIllustration
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.RefIllustration">
    <span id="anysphericaljoint-viewkinmeasure-refillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RefIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#viewKinMeasure.RefIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the illustration...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the illustration is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.RefLabel:

viewKinMeasure.RefLabel
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.RefLabel">
    <span id="anysphericaljoint-viewkinmeasure-reflabel" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RefLabel </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#viewKinMeasure.RefLabel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the label is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the label is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.LabelPositionOffset:

viewKinMeasure.LabelPositionOffset
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.LabelPositionOffset">
    <span id="anysphericaljoint-viewkinmeasure-labelpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.LabelPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#viewKinMeasure.LabelPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the label of the kinematic measure in the reference...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the label of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueScaling:

viewKinMeasure.ValueScaling
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.ValueScaling">
    <span id="anysphericaljoint-viewkinmeasure-valuescaling" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueScaling </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewKinMeasure.ValueScaling" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value used as a factor for the displayed pos value of the kinematic measure....</span>
    </h4>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Value used as a factor for the displayed pos value of the kinematic measure. This must either be a scalar or have the same size as pos of the kinematic measure being drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueStyle:

viewKinMeasure.ValueStyle
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.ValueStyle">
    <span id="anysphericaljoint-viewkinmeasure-valuestyle" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueStyle </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewKinMeasure.ValueStyle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for the label text.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStyleNumeric2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Format settings for the label text.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueStyle.Digits:

viewKinMeasure.ValueStyle.Digits
-----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.ValueStyle.Digits">
    <span id="anysphericaljoint-viewkinmeasure-valuestyle-digits" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueStyle.Digits </span><span class="member-title-equal">=</span><span class="member-title-default"> 8 </span><a class="headerlink" href="#viewKinMeasure.ValueStyle.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``8``

        

    Number of digits in output. Disregarded if smaller than one.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueStyle.Style:

viewKinMeasure.ValueStyle.Style
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.ValueStyle.Style">
    <span id="anysphericaljoint-viewkinmeasure-valuestyle-style" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueStyle.Style </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#viewKinMeasure.ValueStyle.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style of the numeric output.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Style of the numeric output.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueStyle.Scale:

viewKinMeasure.ValueStyle.Scale
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.ValueStyle.Scale">
    <span id="anysphericaljoint-viewkinmeasure-valuestyle-scale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueStyle.Scale </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewKinMeasure.ValueStyle.Scale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for scaling.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for scaling.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.ValueStyle.ScaleVal:

viewKinMeasure.ValueStyle.ScaleVal
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.ValueStyle.ScaleVal">
    <span id="anysphericaljoint-viewkinmeasure-valuestyle-scaleval" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ValueStyle.ScaleVal </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewKinMeasure.ValueStyle.ScaleVal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling factor.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Scaling factor.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

Constraints
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> Constraints </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Constraints" title="Permalink to this headline">¶</a>
    <span class="member-descr">AnyKinEq measure that specifies the kinematic constraints of the joint.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure:

Constraints.viewKinMeasure
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure">
    <span id="anysphericaljoint-constraints-viewkinmeasure" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Constraints.viewKinMeasure" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the kinematic measure.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDrawKinMeasure`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Drawing object that renders the kinematic measure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Visible:

Constraints.viewKinMeasure.Visible
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.Visible">
    <span id="anysphericaljoint-constraints-viewkinmeasure-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Constraints.viewKinMeasure.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Opacity:

Constraints.viewKinMeasure.Opacity
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.Opacity">
    <span id="anysphericaljoint-constraints-viewkinmeasure-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Pickable:

Constraints.viewKinMeasure.Pickable
--------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.Pickable">
    <span id="anysphericaljoint-constraints-viewkinmeasure-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.PickableZOrdering:

Constraints.viewKinMeasure.PickableZOrdering
-----------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.PickableZOrdering">
    <span id="anysphericaljoint-constraints-viewkinmeasure-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RGB1:

Constraints.viewKinMeasure.RGB1
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.RGB1">
    <span id="anysphericaljoint-constraints-viewkinmeasure-rgb1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB1 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#Constraints.viewKinMeasure.RGB1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F1 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``

        

    Color F1 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RGB2:

Constraints.viewKinMeasure.RGB2
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.RGB2">
    <span id="anysphericaljoint-constraints-viewkinmeasure-rgb2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB2 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#Constraints.viewKinMeasure.RGB2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F2 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``

        

    Color F2 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RGB3:

Constraints.viewKinMeasure.RGB3
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.RGB3">
    <span id="anysphericaljoint-constraints-viewkinmeasure-rgb3" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB3 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.3, 0.8} </span><a class="headerlink" href="#Constraints.viewKinMeasure.RGB3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F3 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.3, 0.8}``

        

    Color F3 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RGB4:

Constraints.viewKinMeasure.RGB4
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.RGB4">
    <span id="anysphericaljoint-constraints-viewkinmeasure-rgb4" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RGB4 </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.5, 0.2} </span><a class="headerlink" href="#Constraints.viewKinMeasure.RGB4" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F4 in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.5, 0.2}``

        

    Color F4 in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Label:

Constraints.viewKinMeasure.Label
-----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.Label">
    <span id="anysphericaljoint-constraints-viewkinmeasure-label" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Label </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.Label" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Size:

Constraints.viewKinMeasure.Size
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.Size">
    <span id="anysphericaljoint-constraints-viewkinmeasure-size" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Size </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.02 </span><a class="headerlink" href="#Constraints.viewKinMeasure.Size" title="Permalink to this headline">¶</a>
    <span class="member-descr">Radius size of the balls etc. of the AnyDrawKinMeasure.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.02``

        

    Radius size of the balls etc. of the AnyDrawKinMeasure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Line:

Constraints.viewKinMeasure.Line
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.Line">
    <span id="anysphericaljoint-constraints-viewkinmeasure-line" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Line </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.Line" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the AnyDrawKinMeasure should have a line...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    On/Off value indicating whether the AnyDrawKinMeasure should have a line between ball components.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.Text:

Constraints.viewKinMeasure.Text
----------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.Text">
    <span id="anysphericaljoint-constraints-viewkinmeasure-text" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.Text </span><span class="member-title-equal">=</span><span class="member-title-default"> "" </span><a class="headerlink" href="#Constraints.viewKinMeasure.Text" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set, this text is shown as the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``

        

    If set, this text is shown as the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.TextSize:

Constraints.viewKinMeasure.TextSize
--------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.TextSize">
    <span id="anysphericaljoint-constraints-viewkinmeasure-textsize" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.TextSize </span><span class="member-title-equal">=</span><span class="member-title-default"> 30.0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.TextSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">The size in pixels of the Text label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``30.0``

        

    The size in pixels of the Text label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ShowIllustration:

Constraints.viewKinMeasure.ShowIllustration
----------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.ShowIllustration">
    <span id="anysphericaljoint-constraints-viewkinmeasure-showillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.ShowIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the graphical representation of the kinematic measure should be...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the graphical representation of the kinematic measure should be drawn if applicable.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ShowLabelLines:

Constraints.viewKinMeasure.ShowLabelLines
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.ShowLabelLines">
    <span id="anysphericaljoint-constraints-viewkinmeasure-showlabellines" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowLabelLines </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.ShowLabelLines" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the lines from the label to the reference frames of the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the lines from the label to the reference frames of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ShowValue:

Constraints.viewKinMeasure.ShowValue
---------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.ShowValue">
    <span id="anysphericaljoint-constraints-viewkinmeasure-showvalue" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowValue </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Constraints.viewKinMeasure.ShowValue" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the pos value of the kinematic measure should be shown in the label.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Indicates if the pos value of the kinematic measure should be shown in the label.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ShowLabelBorder:

Constraints.viewKinMeasure.ShowLabelBorder
---------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.ShowLabelBorder">
    <span id="anysphericaljoint-constraints-viewkinmeasure-showlabelborder" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ShowLabelBorder </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.viewKinMeasure.ShowLabelBorder" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the label of the kinematic measure should be drawn.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Indicates if the label of the kinematic measure should be drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.IllustrationPositionOffset:

Constraints.viewKinMeasure.IllustrationPositionOffset
--------------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.IllustrationPositionOffset">
    <span id="anysphericaljoint-constraints-viewkinmeasure-illustrationpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.IllustrationPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#Constraints.viewKinMeasure.IllustrationPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.IllustrationRotationOffset:

Constraints.viewKinMeasure.IllustrationRotationOffset
--------------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.IllustrationRotationOffset">
    <span id="anysphericaljoint-constraints-viewkinmeasure-illustrationrotationoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.IllustrationRotationOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#Constraints.viewKinMeasure.IllustrationRotationOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational offset for the illustration of the kinematic measure in the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Rotational offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RefIllustration:

Constraints.viewKinMeasure.RefIllustration
---------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.RefIllustration">
    <span id="anysphericaljoint-constraints-viewkinmeasure-refillustration" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RefIllustration </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#Constraints.viewKinMeasure.RefIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the illustration...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the illustration is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.RefLabel:

Constraints.viewKinMeasure.RefLabel
--------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.RefLabel">
    <span id="anysphericaljoint-constraints-viewkinmeasure-reflabel" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.RefLabel </span><span class="member-title-equal">=</span><span class="member-title-default"> -2 </span><a class="headerlink" href="#Constraints.viewKinMeasure.RefLabel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the label is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``

        

    Integer number that specifies the reference system in which the label is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.LabelPositionOffset:

Constraints.viewKinMeasure.LabelPositionOffset
-------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.LabelPositionOffset">
    <span id="anysphericaljoint-constraints-viewkinmeasure-labelpositionoffset" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.LabelPositionOffset </span><span class="member-title-equal">=</span><span class="member-title-default"> None </span><a class="headerlink" href="#Constraints.viewKinMeasure.LabelPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the label of the kinematic measure in the reference...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``

        

    Positional offset for the label of the kinematic measure in the reference frame indicated by the ref value.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueScaling:

Constraints.viewKinMeasure.ValueScaling
------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.ValueScaling">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuescaling" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueScaling </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueScaling" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value used as a factor for the displayed pos value of the kinematic measure....</span>
    </h4>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Value used as a factor for the displayed pos value of the kinematic measure. This must either be a scalar or have the same size as pos of the kinematic measure being drawn.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueStyle:

Constraints.viewKinMeasure.ValueStyle
----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.ValueStyle">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuestyle" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueStyle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for the label text.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyStyleNumeric2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Format settings for the label text.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueStyle.Digits:

Constraints.viewKinMeasure.ValueStyle.Digits
-----------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.ValueStyle.Digits">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuestyle-digits" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Digits </span><span class="member-title-equal">=</span><span class="member-title-default"> 8 </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueStyle.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``8``

        

    Number of digits in output. Disregarded if smaller than one.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueStyle.Style:

Constraints.viewKinMeasure.ValueStyle.Style
----------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.ValueStyle.Style">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuestyle-style" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Style </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueStyle.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style of the numeric output.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Style of the numeric output.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueStyle.Scale:

Constraints.viewKinMeasure.ValueStyle.Scale
----------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.ValueStyle.Scale">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuestyle-scale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.Scale </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueStyle.Scale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for scaling.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for scaling.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.ValueStyle.ScaleVal:

Constraints.viewKinMeasure.ValueStyle.ScaleVal
-------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.ValueStyle.ScaleVal">
    <span id="anysphericaljoint-constraints-viewkinmeasure-valuestyle-scaleval" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.viewKinMeasure.ValueStyle.ScaleVal </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#Constraints.viewKinMeasure.ValueStyle.ScaleVal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling factor.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Scaling factor.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.CType:

Constraints.CType
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.CType">
    <span id="anysphericaljoint-constraints-ctype" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.CType </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#Constraints.CType" title="Permalink to this headline">¶</a>
    <span class="member-descr">Constraint type specification that specify how the kinematic solver should...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyKinEqType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Constraint type specification that specify how the kinematic solver should handle the constraint.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.WeightFun:

Constraints.WeightFun
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.WeightFun">
    <span id="anysphericaljoint-constraints-weightfun" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.WeightFun </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#Constraints.WeightFun" title="Permalink to this headline">¶</a>
    <span class="member-descr">Kinematic weighting functions, i.e., time-functions (AnyParamFun) which...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Kinematic weighting functions, i.e., time-functions (AnyParamFun) which multiplied to the kinemtic measures before it is used as constraints. An array of vector functions can be entered; in case of more than one function, their outputs are stacked into one vector. The total number of elements must match the dimension of the kinematic measure.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce:

Constraints.Reaction.viewForce
---------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce">
    <span id="anysphericaljoint-constraints-reaction-viewforce" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Constraints.Reaction.viewForce" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the force.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDrawForce`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``

        

    Drawing object that renders the force.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.Visible:

Constraints.Reaction.viewForce.Visible
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.Visible">
    <span id="anysphericaljoint-constraints-reaction-viewforce-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Constraints.Reaction.viewForce.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.Opacity:

Constraints.Reaction.viewForce.Opacity
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.Opacity">
    <span id="anysphericaljoint-constraints-reaction-viewforce-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.Pickable:

Constraints.Reaction.viewForce.Pickable
------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.Pickable">
    <span id="anysphericaljoint-constraints-reaction-viewforce-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.Reaction.viewForce.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.PickableZOrdering:

Constraints.Reaction.viewForce.PickableZOrdering
---------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.PickableZOrdering">
    <span id="anysphericaljoint-constraints-reaction-viewforce-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ShowTotalForces:

Constraints.Reaction.viewForce.ShowTotalForces
-------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.ShowTotalForces">
    <span id="anysphericaljoint-constraints-reaction-viewforce-showtotalforces" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ShowTotalForces </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ShowTotalForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing total forces at each RefFrame for the force drawing.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for showing total forces at each RefFrame for the force drawing.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ShowComponentForces:

Constraints.Reaction.viewForce.ShowComponentForces
-----------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.ShowComponentForces">
    <span id="anysphericaljoint-constraints-reaction-viewforce-showcomponentforces" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ShowComponentForces </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ShowComponentForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing component forces at each RefFrame for the force drawing.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for showing component forces at each RefFrame for the force drawing.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ForceScale:

Constraints.Reaction.viewForce.ForceScale
--------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.ForceScale">
    <span id="anysphericaljoint-constraints-reaction-viewforce-forcescale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.001 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing forces in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.001``

        

    The scaling used for drawing forces in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ComponentScale:

Constraints.Reaction.viewForce.ComponentScale
------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.ComponentScale">
    <span id="anysphericaljoint-constraints-reaction-viewforce-componentscale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ComponentScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ComponentScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing force components in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``

        

    The scaling used for drawing force components in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.MomentToForceScale:

Constraints.Reaction.viewForce.MomentToForceScale
----------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.MomentToForceScale">
    <span id="anysphericaljoint-constraints-reaction-viewforce-momenttoforcescale" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.MomentToForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.1 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.MomentToForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used between forces and moments in the modelview.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.1``

        

    The scaling used between forces and moments in the modelview.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.MaximumForceLength:

Constraints.Reaction.viewForce.MaximumForceLength
----------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.MaximumForceLength">
    <span id="anysphericaljoint-constraints-reaction-viewforce-maximumforcelength" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.MaximumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.25 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.MaximumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The maximum length of the force drawing arrow relative to the viewport width.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.25``

        

    The maximum length of the force drawing arrow relative to the viewport width.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.MinimumForceLength:

Constraints.Reaction.viewForce.MinimumForceLength
----------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.MinimumForceLength">
    <span id="anysphericaljoint-constraints-reaction-viewforce-minimumforcelength" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.MinimumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#Constraints.Reaction.viewForce.MinimumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The minimum length of the force drawing arrow relative to the maximum force...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``

        

    The minimum length of the force drawing arrow relative to the maximum force drawing arrow length.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ReactionForceColor:

Constraints.Reaction.viewForce.ReactionForceColor
----------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.ReactionForceColor">
    <span id="anysphericaljoint-constraints-reaction-viewforce-reactionforcecolor" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ReactionForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ReactionForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing reaction force arrowhead tips.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``

        

    The color used for drawing reaction force arrowhead tips.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.AppliedForceColor:

Constraints.Reaction.viewForce.AppliedForceColor
---------------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.AppliedForceColor">
    <span id="anysphericaljoint-constraints-reaction-viewforce-appliedforcecolor" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.AppliedForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#Constraints.Reaction.viewForce.AppliedForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing applied force arrowhead tips.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``

        

    The color used for drawing applied force arrowhead tips.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.ScaleToView:

Constraints.Reaction.viewForce.ScaleToView
---------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.ScaleToView">
    <span id="anysphericaljoint-constraints-reaction-viewforce-scaletoview" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.viewForce.ScaleToView </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Constraints.Reaction.viewForce.ScaleToView" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for enabling scaling of force/moment arrows to viewport size.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for enabling scaling of force/moment arrows to viewport size.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.Type:

Constraints.Reaction.Type
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.Type">
    <span id="anysphericaljoint-constraints-reaction-type" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Reaction.Type </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#Constraints.Reaction.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Type specification of the reaction forces. Defaults to: ``repmat(nDim, On)``</span>
    </h4>

..


    | **Class type:**  :ref:`AnyReacForceType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** *Depends on other values*

        

    Type specification of the reaction forces. Defaults to: ``repmat(nDim, On)``

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

Linear
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> Linear </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Linear" title="Permalink to this headline">¶</a>
    <span class="member-descr">The measure of translation.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.Linear.Ref:

Linear.Ref
-------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.Ref">
    <span id="anysphericaljoint-linear-ref" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Ref </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#Linear.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer numbers that specify the reference system in which the vector is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Integer numbers that specify the reference system in which the vector is measured. '-1' is default meaning the global system, 0 or 1 mean respectively the first or the second reference system that have been added to the object.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

Orientation
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> Orientation </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Orientation" title="Permalink to this headline">¶</a>
    <span class="member-descr">The measure of rotation.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.Orientation.Type:

Orientation.Type
-------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.Type">
    <span id="anysphericaljoint-orientation-type" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Type </span><span class="member-title-equal">=</span><span class="member-title-default"> RotVector </span><a class="headerlink" href="#Orientation.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyKinRotationalType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``RotVector``

        

    Coordinate type specification.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Axis1:

Orientation.Axis1
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.Axis1">
    <span id="anysphericaljoint-orientation-axis1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Axis1 </span><span class="member-title-equal">=</span><span class="member-title-default"> z </span><a class="headerlink" href="#Orientation.Axis1" title="Permalink to this headline">¶</a>
    <span class="member-descr">First axis of rotation for RotAxesAngles and primary axis of rotation...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``

        

    First axis of rotation for RotAxesAngles and primary axis of rotation (normal to the planar motion) for PlanarAngles.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Axis2:

Orientation.Axis2
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.Axis2">
    <span id="anysphericaljoint-orientation-axis2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Axis2 </span><span class="member-title-equal">=</span><span class="member-title-default"> y </span><a class="headerlink" href="#Orientation.Axis2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Second axis of rotation for RotAxesAngles.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``y``

        

    Second axis of rotation for RotAxesAngles.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Axis3:

Orientation.Axis3
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.Axis3">
    <span id="anysphericaljoint-orientation-axis3" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Axis3 </span><span class="member-title-equal">=</span><span class="member-title-default"> x </span><a class="headerlink" href="#Orientation.Axis3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Third axis of rotation for RotAxesAngles.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``x``

        

    Third axis of rotation for RotAxesAngles.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.AngVelOnOff:

Orientation.AngVelOnOff
--------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.AngVelOnOff">
    <span id="anysphericaljoint-orientation-angvelonoff" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AngVelOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Orientation.AngVelOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector at velocity and acceleration level.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for using angular velocity vector at velocity and acceleration level.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.AngVelGlobal:

Orientation.AngVelGlobal
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.AngVelGlobal">
    <span id="anysphericaljoint-orientation-angvelglobal" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.AngVelGlobal </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Orientation.AngVelGlobal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector in global coordinates at velocity...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Switch for using angular velocity vector in global coordinates at velocity and acceleration level. This requires 'AngVelOnOff = On'.

..



    



    

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

viewJoint
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" >
    
    <h3 class="html-toggle-button" style=""><span class="member-title"> viewJoint </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#viewJoint" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the joint type and orientation.</span>
    </h3>

..



    
    
     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.viewJoint.Visible:

viewJoint.Visible
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.Visible">
    <span id="anysphericaljoint-viewjoint-visible" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Visible </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#viewJoint.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``

        

    Visibility setting, which specifies default visibility of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.Opacity:

viewJoint.Opacity
--------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.Opacity">
    <span id="anysphericaljoint-viewjoint-opacity" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Opacity </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#viewJoint.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``

        

    Opacity setting, which specifies default opacity of the object.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.Pickable:

viewJoint.Pickable
---------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.Pickable">
    <span id="anysphericaljoint-viewjoint-pickable" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Pickable </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#viewJoint.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``

        

    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.PickableZOrdering:

viewJoint.PickableZOrdering
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.PickableZOrdering">
    <span id="anysphericaljoint-viewjoint-pickablezordering" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.PickableZOrdering </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#viewJoint.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``

        

    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.RGB:

viewJoint.RGB
----------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.RGB">
    <span id="anysphericaljoint-viewjoint-rgb" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.RGB </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.65, 0.65, 0.65} </span><a class="headerlink" href="#viewJoint.RGB" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object color in RGB values between 0 and 1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.65, 0.65, 0.65}``

        

    Object color in RGB values between 0 and 1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.D:

viewJoint.D
--------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.D">
    <span id="anysphericaljoint-viewjoint-d" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.D </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.D" title="Permalink to this headline">¶</a>
    <span class="member-descr">Diameter or in general the basic size value used for dimensioning the...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Diameter or in general the basic size value used for dimensioning the drawing object. By default it is extimated from the segment sizes.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.L:

viewJoint.L
--------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.L">
    <span id="anysphericaljoint-viewjoint-l" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.L </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.L" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the center part of the joint drawing. By default 2 times D.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Length of the center part of the joint drawing. By default 2 times D.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.L1:

viewJoint.L1
---------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.L1">
    <span id="anysphericaljoint-viewjoint-l1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.L1 </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.L1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the first outer part of the joint drawing. By default equal to L.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Length of the first outer part of the joint drawing. By default equal to L.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.L2:

viewJoint.L2
---------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.L2">
    <span id="anysphericaljoint-viewjoint-l2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.L2 </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.L2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the second outer part of the joint drawing. By default equal to L1.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Length of the second outer part of the joint drawing. By default equal to L1.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.G1:

viewJoint.G1
---------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.G1">
    <span id="anysphericaljoint-viewjoint-g1" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.G1 </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.G1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Gab between the center and the first outer part of the joint drawing. By...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Gab between the center and the first outer part of the joint drawing. By default equal to a fraction of L.

..



     

..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.G2:

viewJoint.G2
---------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.G2">
    <span id="anysphericaljoint-viewjoint-g2" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.G2 </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#viewJoint.G2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Gab between the center and the second outer part of the joint drawing. By...</span>
    </h4>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``

        

    Gab between the center and the second outer part of the joint drawing. By default equal to a fraction of G1.

..



    



    

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdConfig">
    <span id="anysphericaljoint-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="UpdDesign">
    <span id="anysphericaljoint-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdOutput">
    <span id="anysphericaljoint-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.t_:

t
====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="t">
    <span id="anysphericaljoint-t_" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.RefFrames:

RefFrames
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrames">
    <span id="anysphericaljoint-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Surfaces:

Surfaces
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Surfaces">
    <span id="anysphericaljoint-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.KinMeasureArr:

KinMeasureArr
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="KinMeasureArr">
    <span id="anysphericaljoint-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{AnySphericalJoint.Orientation, AnySphericalJoint.Orientation,...``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.KinMeasureIndexArr:

KinMeasureIndexArr
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="KinMeasureIndexArr">
    <span id="anysphericaljoint-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0, 1, 2}``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.nDim:

nDim
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="nDim">
    <span id="anysphericaljoint-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.RefFrameOutput:

RefFrameOutput
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="RefFrameOutput">
    <span id="anysphericaljoint-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.RefFrameOutput.RefFrameArr:

RefFrameOutput.RefFrameArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="RefFrameOutput.RefFrameArr">
    <span id="anysphericaljoint-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.RefFrameOutput.Jacobians:

RefFrameOutput.Jacobians
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="RefFrameOutput.Jacobians">
    <span id="anysphericaljoint-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Pos:

Pos
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Pos">
    <span id="anysphericaljoint-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Vel:

Vel
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Vel">
    <span id="anysphericaljoint-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Acc:

Acc
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Acc">
    <span id="anysphericaljoint-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.UpdConfig:

viewKinMeasure.UpdConfig
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.UpdConfig">
    <span id="anysphericaljoint-viewkinmeasure-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewKinMeasure.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewKinMeasure.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.UpdDesign:

viewKinMeasure.UpdDesign
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewKinMeasure.UpdDesign">
    <span id="anysphericaljoint-viewkinmeasure-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewKinMeasure.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewKinMeasure.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewKinMeasure.UpdOutput:

viewKinMeasure.UpdOutput
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewKinMeasure.UpdOutput">
    <span id="anysphericaljoint-viewkinmeasure-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewKinMeasure.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewKinMeasure.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.MeasureOrganizer:

MeasureOrganizer
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="MeasureOrganizer">
    <span id="anysphericaljoint-measureorganizer" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">MeasureOrganizer</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#MeasureOrganizer" title="Permalink to this headline">¶</a>
    <span class="member-descr">List of indices of components from the assembled measures to be included in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    List of indices of components from the assembled measures to be included in the new (organized) measure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints:

Constraints
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints">
    <span id="anysphericaljoint-constraints" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints" title="Permalink to this headline">¶</a>
    <span class="member-descr">AnyKinEq measure that specifies the kinematic constraints of the joint.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinEq`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    AnyKinEq measure that specifies the kinematic constraints of the joint.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.UpdConfig:

Constraints.UpdConfig
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.UpdConfig">
    <span id="anysphericaljoint-constraints-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.UpdDesign:

Constraints.UpdDesign
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.UpdDesign">
    <span id="anysphericaljoint-constraints-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.UpdOutput:

Constraints.UpdOutput
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.UpdOutput">
    <span id="anysphericaljoint-constraints-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.t:

Constraints.t
================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.t">
    <span id="anysphericaljoint-constraints-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.RefFrames:

Constraints.RefFrames
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.RefFrames">
    <span id="anysphericaljoint-constraints-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Surfaces:

Constraints.Surfaces
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Surfaces">
    <span id="anysphericaljoint-constraints-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.KinMeasureArr:

Constraints.KinMeasureArr
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.KinMeasureArr">
    <span id="anysphericaljoint-constraints-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{AnySphericalJoint.Linear, AnySphericalJoint.Linear,...``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.KinMeasureIndexArr:

Constraints.KinMeasureIndexArr
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.KinMeasureIndexArr">
    <span id="anysphericaljoint-constraints-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0, 1, 2}``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.nDim:

Constraints.nDim
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.nDim">
    <span id="anysphericaljoint-constraints-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.RefFrameOutput:

Constraints.RefFrameOutput
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.RefFrameOutput">
    <span id="anysphericaljoint-constraints-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.RefFrameOutput.RefFrameArr:

Constraints.RefFrameOutput.RefFrameArr
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.RefFrameOutput.RefFrameArr">
    <span id="anysphericaljoint-constraints-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.RefFrameOutput.Jacobians:

Constraints.RefFrameOutput.Jacobians
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.RefFrameOutput.Jacobians">
    <span id="anysphericaljoint-constraints-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Pos:

Constraints.Pos
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Pos">
    <span id="anysphericaljoint-constraints-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Vel:

Constraints.Vel
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Vel">
    <span id="anysphericaljoint-constraints-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Acc:

Constraints.Acc
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Acc">
    <span id="anysphericaljoint-constraints-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.UpdConfig:

Constraints.viewKinMeasure.UpdConfig
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.UpdConfig">
    <span id="anysphericaljoint-constraints-viewkinmeasure-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.viewKinMeasure.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.viewKinMeasure.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.UpdDesign:

Constraints.viewKinMeasure.UpdDesign
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.viewKinMeasure.UpdDesign">
    <span id="anysphericaljoint-constraints-viewkinmeasure-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.viewKinMeasure.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.viewKinMeasure.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.viewKinMeasure.UpdOutput:

Constraints.viewKinMeasure.UpdOutput
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.viewKinMeasure.UpdOutput">
    <span id="anysphericaljoint-constraints-viewkinmeasure-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.viewKinMeasure.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.viewKinMeasure.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.MeasureOrganizer:

Constraints.MeasureOrganizer
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.MeasureOrganizer">
    <span id="anysphericaljoint-constraints-measureorganizer" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.MeasureOrganizer</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.MeasureOrganizer" title="Permalink to this headline">¶</a>
    <span class="member-descr">List of indices of components from the assembled measures to be included in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    List of indices of components from the assembled measures to be included in the new (organized) measure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction:

Constraints.Reaction
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction">
    <span id="anysphericaljoint-constraints-reaction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction" title="Permalink to this headline">¶</a>
    <span class="member-descr">Reaction forces associated with the constraints.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyReacForce`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Reaction forces associated with the constraints.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.UpdConfig:

Constraints.Reaction.UpdConfig
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.UpdConfig">
    <span id="anysphericaljoint-constraints-reaction-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.UpdDesign:

Constraints.Reaction.UpdDesign
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.UpdDesign">
    <span id="anysphericaljoint-constraints-reaction-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.UpdOutput:

Constraints.Reaction.UpdOutput
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.UpdOutput">
    <span id="anysphericaljoint-constraints-reaction-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.t:

Constraints.Reaction.t
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.t">
    <span id="anysphericaljoint-constraints-reaction-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrames:

Constraints.Reaction.RefFrames
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.RefFrames">
    <span id="anysphericaljoint-constraints-reaction-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.Surfaces:

Constraints.Reaction.Surfaces
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.Surfaces">
    <span id="anysphericaljoint-constraints-reaction-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.KinMeasureArr:

Constraints.Reaction.KinMeasureArr
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.KinMeasureArr">
    <span id="anysphericaljoint-constraints-reaction-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.KinMeasureIndexArr:

Constraints.Reaction.KinMeasureIndexArr
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.KinMeasureIndexArr">
    <span id="anysphericaljoint-constraints-reaction-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.nDim:

Constraints.Reaction.nDim
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.nDim">
    <span id="anysphericaljoint-constraints-reaction-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrameOutput:

Constraints.Reaction.RefFrameOutput
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.RefFrameOutput">
    <span id="anysphericaljoint-constraints-reaction-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrameOutput.RefFrameArr:

Constraints.Reaction.RefFrameOutput.RefFrameArr
==================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.RefFrameOutput.RefFrameArr">
    <span id="anysphericaljoint-constraints-reaction-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrameOutput.Jacobians:

Constraints.Reaction.RefFrameOutput.Jacobians
================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.RefFrameOutput.Jacobians">
    <span id="anysphericaljoint-constraints-reaction-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrameOutput.F:

Constraints.Reaction.RefFrameOutput.F
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.RefFrameOutput.F">
    <span id="anysphericaljoint-constraints-reaction-refframeoutput-f" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrameOutput.F</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrameOutput.F" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.RefFrameOutput.M:

Constraints.Reaction.RefFrameOutput.M
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.RefFrameOutput.M">
    <span id="anysphericaljoint-constraints-reaction-refframeoutput-m" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.RefFrameOutput.M</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.RefFrameOutput.M" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.UpdConfig:

Constraints.Reaction.viewForce.UpdConfig
===========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.UpdConfig">
    <span id="anysphericaljoint-constraints-reaction-viewforce-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.viewForce.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.viewForce.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.UpdDesign:

Constraints.Reaction.viewForce.UpdDesign
===========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.viewForce.UpdDesign">
    <span id="anysphericaljoint-constraints-reaction-viewforce-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.viewForce.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.viewForce.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.viewForce.UpdOutput:

Constraints.Reaction.viewForce.UpdOutput
===========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.viewForce.UpdOutput">
    <span id="anysphericaljoint-constraints-reaction-viewforce-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.viewForce.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.viewForce.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.Fin:

Constraints.Reaction.Fin
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.Reaction.Fin">
    <span id="anysphericaljoint-constraints-reaction-fin" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.Fin</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.Fin" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of input loads to the given type of analysis,...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of input loads to the given type of analysis, i.e., to the right-hand side of the equations of motion.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.Reaction.Fout:

Constraints.Reaction.Fout
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.Reaction.Fout">
    <span id="anysphericaljoint-constraints-reaction-fout" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.Reaction.Fout</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.Reaction.Fout" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of outputs from the given type of analysis....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of outputs from the given type of analysis. This is the total force in the element after the analysis is executed.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.WeightPos:

Constraints.WeightPos
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.WeightPos">
    <span id="anysphericaljoint-constraints-weightpos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.WeightPos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.WeightPos" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current value of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current value of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.WeightVel:

Constraints.WeightVel
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Constraints.WeightVel">
    <span id="anysphericaljoint-constraints-weightvel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.WeightVel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.WeightVel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current time-derivative of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current time-derivative of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Constraints.WeightAcc:

Constraints.WeightAcc
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Constraints.WeightAcc">
    <span id="anysphericaljoint-constraints-weightacc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Constraints.WeightAcc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Constraints.WeightAcc" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current 2'nd order time-derivative of the kinematic weighting function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Current 2'nd order time-derivative of the kinematic weighting function.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear:

Linear
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear">
    <span id="anysphericaljoint-linear" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear" title="Permalink to this headline">¶</a>
    <span class="member-descr">The measure of translation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinear`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    The measure of translation.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.UpdConfig:

Linear.UpdConfig
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.UpdConfig">
    <span id="anysphericaljoint-linear-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.UpdDesign:

Linear.UpdDesign
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.UpdDesign">
    <span id="anysphericaljoint-linear-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.UpdOutput:

Linear.UpdOutput
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.UpdOutput">
    <span id="anysphericaljoint-linear-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.t:

Linear.t
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.t">
    <span id="anysphericaljoint-linear-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.RefFrames:

Linear.RefFrames
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.RefFrames">
    <span id="anysphericaljoint-linear-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.Surfaces:

Linear.Surfaces
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.Surfaces">
    <span id="anysphericaljoint-linear-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.KinMeasureArr:

Linear.KinMeasureArr
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.KinMeasureArr">
    <span id="anysphericaljoint-linear-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.KinMeasureIndexArr:

Linear.KinMeasureIndexArr
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.KinMeasureIndexArr">
    <span id="anysphericaljoint-linear-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.nDim:

Linear.nDim
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.nDim">
    <span id="anysphericaljoint-linear-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.RefFrameOutput:

Linear.RefFrameOutput
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.RefFrameOutput">
    <span id="anysphericaljoint-linear-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.RefFrameOutput.RefFrameArr:

Linear.RefFrameOutput.RefFrameArr
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.RefFrameOutput.RefFrameArr">
    <span id="anysphericaljoint-linear-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.RefFrameOutput.Jacobians:

Linear.RefFrameOutput.Jacobians
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.RefFrameOutput.Jacobians">
    <span id="anysphericaljoint-linear-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.Pos:

Linear.Pos
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.Pos">
    <span id="anysphericaljoint-linear-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.Vel:

Linear.Vel
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.Vel">
    <span id="anysphericaljoint-linear-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.Acc:

Linear.Acc
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.Acc">
    <span id="anysphericaljoint-linear-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure:

Linear.viewKinMeasure
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure">
    <span id="anysphericaljoint-linear-viewkinmeasure" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the kinematic measure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyDrawKinMeasure`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Drawing object that renders the kinematic measure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.UpdConfig:

Linear.viewKinMeasure.UpdConfig
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.UpdConfig">
    <span id="anysphericaljoint-linear-viewkinmeasure-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.UpdDesign:

Linear.viewKinMeasure.UpdDesign
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.UpdDesign">
    <span id="anysphericaljoint-linear-viewkinmeasure-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.UpdOutput:

Linear.viewKinMeasure.UpdOutput
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.UpdOutput">
    <span id="anysphericaljoint-linear-viewkinmeasure-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Visible:

Linear.viewKinMeasure.Visible
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.Visible">
    <span id="anysphericaljoint-linear-viewkinmeasure-visible" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Visible</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Visibility setting, which specifies default visibility of the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Opacity:

Linear.viewKinMeasure.Opacity
================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.Opacity">
    <span id="anysphericaljoint-linear-viewkinmeasure-opacity" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Opacity</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Opacity setting, which specifies default opacity of the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Pickable:

Linear.viewKinMeasure.Pickable
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.Pickable">
    <span id="anysphericaljoint-linear-viewkinmeasure-pickable" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Pickable</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.PickableZOrdering:

Linear.viewKinMeasure.PickableZOrdering
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.PickableZOrdering">
    <span id="anysphericaljoint-linear-viewkinmeasure-pickablezordering" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.PickableZOrdering</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RGB1:

Linear.viewKinMeasure.RGB1
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.RGB1">
    <span id="anysphericaljoint-linear-viewkinmeasure-rgb1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RGB1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RGB1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F1 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``




    Color F1 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RGB2:

Linear.viewKinMeasure.RGB2
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.RGB2">
    <span id="anysphericaljoint-linear-viewkinmeasure-rgb2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RGB2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RGB2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F2 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``




    Color F2 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RGB3:

Linear.viewKinMeasure.RGB3
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.RGB3">
    <span id="anysphericaljoint-linear-viewkinmeasure-rgb3" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RGB3</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RGB3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F3 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.3, 0.8}``




    Color F3 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RGB4:

Linear.viewKinMeasure.RGB4
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.RGB4">
    <span id="anysphericaljoint-linear-viewkinmeasure-rgb4" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RGB4</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RGB4" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F4 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.5, 0.2}``




    Color F4 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Label:

Linear.viewKinMeasure.Label
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.Label">
    <span id="anysphericaljoint-linear-viewkinmeasure-label" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Label</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Label" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Size:

Linear.viewKinMeasure.Size
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.Size">
    <span id="anysphericaljoint-linear-viewkinmeasure-size" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Size</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Size" title="Permalink to this headline">¶</a>
    <span class="member-descr">Radius size of the balls etc. of the AnyDrawKinMeasure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.02``




    Radius size of the balls etc. of the AnyDrawKinMeasure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Line:

Linear.viewKinMeasure.Line
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.Line">
    <span id="anysphericaljoint-linear-viewkinmeasure-line" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Line</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Line" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the AnyDrawKinMeasure should have a line...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    On/Off value indicating whether the AnyDrawKinMeasure should have a line between ball components.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.Text:

Linear.viewKinMeasure.Text
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.Text">
    <span id="anysphericaljoint-linear-viewkinmeasure-text" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.Text</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.Text" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set, this text is shown as the label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``




    If set, this text is shown as the label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.TextSize:

Linear.viewKinMeasure.TextSize
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.TextSize">
    <span id="anysphericaljoint-linear-viewkinmeasure-textsize" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.TextSize</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.TextSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">The size in pixels of the Text label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``30.0``




    The size in pixels of the Text label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ShowIllustration:

Linear.viewKinMeasure.ShowIllustration
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.ShowIllustration">
    <span id="anysphericaljoint-linear-viewkinmeasure-showillustration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ShowIllustration</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ShowIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the graphical representation of the kinematic measure should be...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the graphical representation of the kinematic measure should be drawn if applicable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ShowLabelLines:

Linear.viewKinMeasure.ShowLabelLines
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.ShowLabelLines">
    <span id="anysphericaljoint-linear-viewkinmeasure-showlabellines" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ShowLabelLines</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ShowLabelLines" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the lines from the label to the reference frames of the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the lines from the label to the reference frames of the kinematic measure should be drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ShowValue:

Linear.viewKinMeasure.ShowValue
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.ShowValue">
    <span id="anysphericaljoint-linear-viewkinmeasure-showvalue" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ShowValue</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ShowValue" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the pos value of the kinematic measure should be shown in the label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Indicates if the pos value of the kinematic measure should be shown in the label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ShowLabelBorder:

Linear.viewKinMeasure.ShowLabelBorder
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.ShowLabelBorder">
    <span id="anysphericaljoint-linear-viewkinmeasure-showlabelborder" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ShowLabelBorder</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ShowLabelBorder" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the label of the kinematic measure should be drawn.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the label of the kinematic measure should be drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.IllustrationPositionOffset:

Linear.viewKinMeasure.IllustrationPositionOffset
===================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.IllustrationPositionOffset">
    <span id="anysphericaljoint-linear-viewkinmeasure-illustrationpositionoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.IllustrationPositionOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.IllustrationPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the illustration of the kinematic measure in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Positional offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.IllustrationRotationOffset:

Linear.viewKinMeasure.IllustrationRotationOffset
===================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.IllustrationRotationOffset">
    <span id="anysphericaljoint-linear-viewkinmeasure-illustrationrotationoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.IllustrationRotationOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.IllustrationRotationOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational offset for the illustration of the kinematic measure in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Rotational offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RefIllustration:

Linear.viewKinMeasure.RefIllustration
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.RefIllustration">
    <span id="anysphericaljoint-linear-viewkinmeasure-refillustration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RefIllustration</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RefIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the illustration...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``




    Integer number that specifies the reference system in which the illustration is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.RefLabel:

Linear.viewKinMeasure.RefLabel
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.RefLabel">
    <span id="anysphericaljoint-linear-viewkinmeasure-reflabel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.RefLabel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.RefLabel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the label is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``




    Integer number that specifies the reference system in which the label is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.LabelPositionOffset:

Linear.viewKinMeasure.LabelPositionOffset
============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.LabelPositionOffset">
    <span id="anysphericaljoint-linear-viewkinmeasure-labelpositionoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.LabelPositionOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.LabelPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the label of the kinematic measure in the reference...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Positional offset for the label of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueScaling:

Linear.viewKinMeasure.ValueScaling
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.ValueScaling">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuescaling" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueScaling</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueScaling" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value used as a factor for the displayed pos value of the kinematic measure....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Value used as a factor for the displayed pos value of the kinematic measure. This must either be a scalar or have the same size as pos of the kinematic measure being drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueStyle:

Linear.viewKinMeasure.ValueStyle
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.ValueStyle">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuestyle" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueStyle</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueStyle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for the label text.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStyleNumeric2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Format settings for the label text.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueStyle.Digits:

Linear.viewKinMeasure.ValueStyle.Digits
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.ValueStyle.Digits">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuestyle-digits" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueStyle.Digits</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueStyle.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``8``




    Number of digits in output. Disregarded if smaller than one.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueStyle.Style:

Linear.viewKinMeasure.ValueStyle.Style
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.ValueStyle.Style">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuestyle-style" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueStyle.Style</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueStyle.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style of the numeric output.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Style of the numeric output.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueStyle.Scale:

Linear.viewKinMeasure.ValueStyle.Scale
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.viewKinMeasure.ValueStyle.Scale">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuestyle-scale" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueStyle.Scale</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueStyle.Scale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for scaling.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Switch for scaling.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.viewKinMeasure.ValueStyle.ScaleVal:

Linear.viewKinMeasure.ValueStyle.ScaleVal
============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.viewKinMeasure.ValueStyle.ScaleVal">
    <span id="anysphericaljoint-linear-viewkinmeasure-valuestyle-scaleval" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.viewKinMeasure.ValueStyle.ScaleVal</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.viewKinMeasure.ValueStyle.ScaleVal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling factor.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Scaling factor.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.Type:

Linear.Type
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.Type">
    <span id="anysphericaljoint-linear-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.Type</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinearType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``CartesianCoord``




    Coordinate type specification.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.LineLineDistanceAxes:

Linear.LineLineDistanceAxes
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.LineLineDistanceAxes">
    <span id="anysphericaljoint-linear-linelinedistanceaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.LineLineDistanceAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.LineLineDistanceAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes for which line-to-line distances are measured when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes for which line-to-line distances are measured when Type is LineLineDistance.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.LineLineDistanceAxisLength:

Linear.LineLineDistanceAxisLength
====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Linear.LineLineDistanceAxisLength">
    <span id="anysphericaljoint-linear-linelinedistanceaxislength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.LineLineDistanceAxisLength</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.LineLineDistanceAxisLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the secondary axis used for line-to-line distances when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``10.0``




    Length of the secondary axis used for line-to-line distances when Type is LineLineDistance. The sencondary axis if set to this finite length to smoothen the singularity for parallel lines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Linear.AngularAxis:

Linear.AngularAxis
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Linear.AngularAxis">
    <span id="anysphericaljoint-linear-angularaxis" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear.AngularAxis</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear.AngularAxis" title="Permalink to this headline">¶</a>
    <span class="member-descr">Axis of rotation for spherical and cylindrical coordinates i.e. when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``




    Axis of rotation for spherical and cylindrical coordinates i.e. when Type is either SphericalCoord or CylindricalCoord.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation:

Orientation
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation">
    <span id="anysphericaljoint-orientation" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation" title="Permalink to this headline">¶</a>
    <span class="member-descr">The measure of rotation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinRotational`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    The measure of rotation.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.UpdConfig:

Orientation.UpdConfig
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.UpdConfig">
    <span id="anysphericaljoint-orientation-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.UpdDesign:

Orientation.UpdDesign
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.UpdDesign">
    <span id="anysphericaljoint-orientation-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.UpdOutput:

Orientation.UpdOutput
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.UpdOutput">
    <span id="anysphericaljoint-orientation-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.t:

Orientation.t
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.t">
    <span id="anysphericaljoint-orientation-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.RefFrames:

Orientation.RefFrames
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.RefFrames">
    <span id="anysphericaljoint-orientation-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Surfaces:

Orientation.Surfaces
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.Surfaces">
    <span id="anysphericaljoint-orientation-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.KinMeasureArr:

Orientation.KinMeasureArr
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.KinMeasureArr">
    <span id="anysphericaljoint-orientation-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.KinMeasureIndexArr:

Orientation.KinMeasureIndexArr
=================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.KinMeasureIndexArr">
    <span id="anysphericaljoint-orientation-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.nDim:

Orientation.nDim
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.nDim">
    <span id="anysphericaljoint-orientation-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.RefFrameOutput:

Orientation.RefFrameOutput
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.RefFrameOutput">
    <span id="anysphericaljoint-orientation-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.RefFrameOutput.RefFrameArr:

Orientation.RefFrameOutput.RefFrameArr
=========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.RefFrameOutput.RefFrameArr">
    <span id="anysphericaljoint-orientation-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.RefFrameOutput.Jacobians:

Orientation.RefFrameOutput.Jacobians
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.RefFrameOutput.Jacobians">
    <span id="anysphericaljoint-orientation-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Pos:

Orientation.Pos
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.Pos">
    <span id="anysphericaljoint-orientation-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Vel:

Orientation.Vel
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.Vel">
    <span id="anysphericaljoint-orientation-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.Acc:

Orientation.Acc
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.Acc">
    <span id="anysphericaljoint-orientation-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure:

Orientation.viewKinMeasure
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure">
    <span id="anysphericaljoint-orientation-viewkinmeasure" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing object that renders the kinematic measure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyDrawKinMeasure`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Drawing object that renders the kinematic measure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.UpdConfig:

Orientation.viewKinMeasure.UpdConfig
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.UpdConfig">
    <span id="anysphericaljoint-orientation-viewkinmeasure-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.UpdDesign:

Orientation.viewKinMeasure.UpdDesign
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.UpdDesign">
    <span id="anysphericaljoint-orientation-viewkinmeasure-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.UpdOutput:

Orientation.viewKinMeasure.UpdOutput
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.UpdOutput">
    <span id="anysphericaljoint-orientation-viewkinmeasure-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Visible:

Orientation.viewKinMeasure.Visible
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.Visible">
    <span id="anysphericaljoint-orientation-viewkinmeasure-visible" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Visible</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Visible" title="Permalink to this headline">¶</a>
    <span class="member-descr">Visibility setting, which specifies default visibility of the object.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Visibility setting, which specifies default visibility of the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Opacity:

Orientation.viewKinMeasure.Opacity
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.Opacity">
    <span id="anysphericaljoint-orientation-viewkinmeasure-opacity" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Opacity</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Opacity" title="Permalink to this headline">¶</a>
    <span class="member-descr">Opacity setting, which specifies default opacity of the object.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Opacity setting, which specifies default opacity of the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Pickable:

Orientation.viewKinMeasure.Pickable
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.Pickable">
    <span id="anysphericaljoint-orientation-viewkinmeasure-pickable" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Pickable</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Pickable" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for whether the AnyDrawObject can interacted with by clicking it in a...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for whether the AnyDrawObject can interacted with by clicking it in a model view.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.PickableZOrdering:

Orientation.viewKinMeasure.PickableZOrdering
===============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.PickableZOrdering">
    <span id="anysphericaljoint-orientation-viewkinmeasure-pickablezordering" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.PickableZOrdering</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.PickableZOrdering" title="Permalink to this headline">¶</a>
    <span class="member-descr">Defines the pick order sorting in the Modelview. Modelview picking order is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Defines the pick order sorting in the Modelview. Modelview picking order is resolved by PickableZOrdering before resolving by depth in the viewport.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RGB1:

Orientation.viewKinMeasure.RGB1
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.RGB1">
    <span id="anysphericaljoint-orientation-viewkinmeasure-rgb1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RGB1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RGB1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F1 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``




    Color F1 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RGB2:

Orientation.viewKinMeasure.RGB2
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.RGB2">
    <span id="anysphericaljoint-orientation-viewkinmeasure-rgb2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RGB2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RGB2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F2 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``




    Color F2 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RGB3:

Orientation.viewKinMeasure.RGB3
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.RGB3">
    <span id="anysphericaljoint-orientation-viewkinmeasure-rgb3" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RGB3</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RGB3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F3 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.3, 0.8}``




    Color F3 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RGB4:

Orientation.viewKinMeasure.RGB4
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.RGB4">
    <span id="anysphericaljoint-orientation-viewkinmeasure-rgb4" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RGB4</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RGB4" title="Permalink to this headline">¶</a>
    <span class="member-descr">Color F4 in RGB values between 0 and 1.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.5, 0.2}``




    Color F4 in RGB values between 0 and 1.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Label:

Orientation.viewKinMeasure.Label
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.Label">
    <span id="anysphericaljoint-orientation-viewkinmeasure-label" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Label</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Label" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    On/Off value indicating whether the label of the AnyDrawKinMeasure should be shown.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Size:

Orientation.viewKinMeasure.Size
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.Size">
    <span id="anysphericaljoint-orientation-viewkinmeasure-size" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Size</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Size" title="Permalink to this headline">¶</a>
    <span class="member-descr">Radius size of the balls etc. of the AnyDrawKinMeasure.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.02``




    Radius size of the balls etc. of the AnyDrawKinMeasure.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Line:

Orientation.viewKinMeasure.Line
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.Line">
    <span id="anysphericaljoint-orientation-viewkinmeasure-line" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Line</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Line" title="Permalink to this headline">¶</a>
    <span class="member-descr">On/Off value indicating whether the AnyDrawKinMeasure should have a line...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    On/Off value indicating whether the AnyDrawKinMeasure should have a line between ball components.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.Text:

Orientation.viewKinMeasure.Text
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.Text">
    <span id="anysphericaljoint-orientation-viewkinmeasure-text" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.Text</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.Text" title="Permalink to this headline">¶</a>
    <span class="member-descr">If set, this text is shown as the label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStringVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``""``




    If set, this text is shown as the label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.TextSize:

Orientation.viewKinMeasure.TextSize
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.TextSize">
    <span id="anysphericaljoint-orientation-viewkinmeasure-textsize" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.TextSize</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.TextSize" title="Permalink to this headline">¶</a>
    <span class="member-descr">The size in pixels of the Text label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``30.0``




    The size in pixels of the Text label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ShowIllustration:

Orientation.viewKinMeasure.ShowIllustration
==============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.ShowIllustration">
    <span id="anysphericaljoint-orientation-viewkinmeasure-showillustration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ShowIllustration</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ShowIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the graphical representation of the kinematic measure should be...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the graphical representation of the kinematic measure should be drawn if applicable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ShowLabelLines:

Orientation.viewKinMeasure.ShowLabelLines
============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.ShowLabelLines">
    <span id="anysphericaljoint-orientation-viewkinmeasure-showlabellines" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ShowLabelLines</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ShowLabelLines" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the lines from the label to the reference frames of the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the lines from the label to the reference frames of the kinematic measure should be drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ShowValue:

Orientation.viewKinMeasure.ShowValue
=======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.ShowValue">
    <span id="anysphericaljoint-orientation-viewkinmeasure-showvalue" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ShowValue</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ShowValue" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the pos value of the kinematic measure should be shown in the label.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Indicates if the pos value of the kinematic measure should be shown in the label.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ShowLabelBorder:

Orientation.viewKinMeasure.ShowLabelBorder
=============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.ShowLabelBorder">
    <span id="anysphericaljoint-orientation-viewkinmeasure-showlabelborder" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ShowLabelBorder</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ShowLabelBorder" title="Permalink to this headline">¶</a>
    <span class="member-descr">Indicates if the label of the kinematic measure should be drawn.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Indicates if the label of the kinematic measure should be drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.IllustrationPositionOffset:

Orientation.viewKinMeasure.IllustrationPositionOffset
========================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.IllustrationPositionOffset">
    <span id="anysphericaljoint-orientation-viewkinmeasure-illustrationpositionoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.IllustrationPositionOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.IllustrationPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the illustration of the kinematic measure in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Positional offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.IllustrationRotationOffset:

Orientation.viewKinMeasure.IllustrationRotationOffset
========================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.IllustrationRotationOffset">
    <span id="anysphericaljoint-orientation-viewkinmeasure-illustrationrotationoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.IllustrationRotationOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.IllustrationRotationOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational offset for the illustration of the kinematic measure in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Rotational offset for the illustration of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RefIllustration:

Orientation.viewKinMeasure.RefIllustration
=============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.RefIllustration">
    <span id="anysphericaljoint-orientation-viewkinmeasure-refillustration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RefIllustration</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RefIllustration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the illustration...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``




    Integer number that specifies the reference system in which the illustration is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.RefLabel:

Orientation.viewKinMeasure.RefLabel
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.RefLabel">
    <span id="anysphericaljoint-orientation-viewkinmeasure-reflabel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.RefLabel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.RefLabel" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer number that specifies the reference system in which the label is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-2``




    Integer number that specifies the reference system in which the label is drawn. 
    -2 is default, meaning that the illustration will be placed depending on the type of kinematic measure.
    -1 is the global reference system. 0 to (n-1) means the reference systems of the reference frames in the kinematic measure

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.LabelPositionOffset:

Orientation.viewKinMeasure.LabelPositionOffset
=================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.LabelPositionOffset">
    <span id="anysphericaljoint-orientation-viewkinmeasure-labelpositionoffset" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.LabelPositionOffset</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.LabelPositionOffset" title="Permalink to this headline">¶</a>
    <span class="member-descr">Positional offset for the label of the kinematic measure in the reference...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`RuntimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``None``




    Positional offset for the label of the kinematic measure in the reference frame indicated by the ref value.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueScaling:

Orientation.viewKinMeasure.ValueScaling
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.ValueScaling">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuescaling" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueScaling</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueScaling" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value used as a factor for the displayed pos value of the kinematic measure....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Value used as a factor for the displayed pos value of the kinematic measure. This must either be a scalar or have the same size as pos of the kinematic measure being drawn.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueStyle:

Orientation.viewKinMeasure.ValueStyle
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.ValueStyle">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuestyle" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueStyle</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueStyle" title="Permalink to this headline">¶</a>
    <span class="member-descr">Format settings for the label text.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyStyleNumeric2`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Format settings for the label text.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueStyle.Digits:

Orientation.viewKinMeasure.ValueStyle.Digits
===============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.ValueStyle.Digits">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuestyle-digits" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueStyle.Digits</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueStyle.Digits" title="Permalink to this headline">¶</a>
    <span class="member-descr">Number of digits in output. Disregarded if smaller than one.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``8``




    Number of digits in output. Disregarded if smaller than one.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueStyle.Style:

Orientation.viewKinMeasure.ValueStyle.Style
==============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.ValueStyle.Style">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuestyle-style" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueStyle.Style</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueStyle.Style" title="Permalink to this headline">¶</a>
    <span class="member-descr">Style of the numeric output.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Style of the numeric output.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueStyle.Scale:

Orientation.viewKinMeasure.ValueStyle.Scale
==============================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.viewKinMeasure.ValueStyle.Scale">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuestyle-scale" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueStyle.Scale</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueStyle.Scale" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for scaling.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``




    Switch for scaling.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.viewKinMeasure.ValueStyle.ScaleVal:

Orientation.viewKinMeasure.ValueStyle.ScaleVal
=================================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="Orientation.viewKinMeasure.ValueStyle.ScaleVal">
    <span id="anysphericaljoint-orientation-viewkinmeasure-valuestyle-scaleval" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.viewKinMeasure.ValueStyle.ScaleVal</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.viewKinMeasure.ValueStyle.ScaleVal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Scaling factor.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``




    Scaling factor.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.Orientation.DirCosineAxes:

Orientation.DirCosineAxes
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.DirCosineAxes">
    <span id="anysphericaljoint-orientation-dircosineaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.DirCosineAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.DirCosineAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes used for which directional cosine outputs are given when Type...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes used for which directional cosine outputs are given when Type is DirCosines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.UpdConfig:

viewJoint.UpdConfig
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.UpdConfig">
    <span id="anysphericaljoint-viewjoint-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewJoint.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewJoint.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.UpdDesign:

viewJoint.UpdDesign
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="viewJoint.UpdDesign">
    <span id="anysphericaljoint-viewjoint-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewJoint.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewJoint.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySphericalJoint.viewJoint.UpdOutput:

viewJoint.UpdOutput
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="viewJoint.UpdOutput">
    <span id="anysphericaljoint-viewjoint-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">viewJoint.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#viewJoint.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..





.. rst-class:: html-toggle

*********************
Deprecated members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySphericalJoint.Orientation.Ref:

Orientation.Ref
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Orientation.Ref">
    <span id="anysphericaljoint-orientation-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    |
    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`

    .. rst-class:: without-title

    .. danger::
        **Deprecated**: The functionality of 'Ref' has been removed, in order to avoid
        misunderstandings and confusion with 'Ref' in AnyKinLinear. Please modify your
        model to remove initialization of 'Ref'.




    <No description>

..





