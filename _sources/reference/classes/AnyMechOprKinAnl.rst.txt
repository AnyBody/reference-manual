
.. _AnyMechOprKinAnl:

################
AnyMechOprKinAnl
################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyMechOpr`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyMechOprKinAnl.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyMechOprKinAnl
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`ClassExamples.AnyBodyStudy.MechObjectExclude </demos/zips/ClassExamples.AnyBodyStudy.MechObjectExclude.zip>`
     - Excluding mechanical objects from the analysis in a mechanical studies
   * - :download:`ClassExamples.AnyMechStudyBase </demos/zips/ClassExamples.AnyMechStudyBase.zip>`
     - AnyMechStudyBase, the empty base class for mechnical studies.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.







*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

.. _AnyMechOprKinAnl.Settings:

Settings
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Settings">
    <span id="anymechoprkinanl-settings" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Settings </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#Settings" title="Permalink to this headline">¶</a>
    <span class="member-descr">General settings for the operation.</span>
    </h3>

..







..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOprKinAnl.Settings.Echo:

Settings.Echo
----------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Settings.Echo">
    <span id="anymechoprkinanl-settings-echo" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Echo </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Settings.Echo" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.Settings.ModelSceneUpdate:

Settings.ModelSceneUpdate
----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Settings.ModelSceneUpdate">
    <span id="anymechoprkinanl-settings-modelsceneupdate" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.ModelSceneUpdate </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#Settings.ModelSceneUpdate" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.Settings.DisplayPriority:

Settings.DisplayPriority
---------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Settings.DisplayPriority">
    <span id="anymechoprkinanl-settings-displaypriority" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.DisplayPriority </span><span class="member-title-equal">=</span><span class="member-title-default"> PriorityNormal </span><a class="headerlink" href="#Settings.DisplayPriority" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining the interface display priority for the Operation.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDisplayPriority`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``PriorityNormal``



    Value for defining the interface display priority for the Operation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.Settings.SelectOnLoad:

Settings.SelectOnLoad
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Settings.SelectOnLoad">
    <span id="anymechoprkinanl-settings-selectonload" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.SelectOnLoad </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#Settings.SelectOnLoad" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining if the Operation should be displayed as the default...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``



    Value for defining if the Operation should be displayed as the default Operation for the loaded model.

..







    General settings for the operation.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

.. _AnyMechOprKinAnl.PreOperation:

PreOperation
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PreOperation">
    <span id="anymechoprkinanl-preoperation" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PreOperation </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#PreOperation" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pre-process operation.</span>
    </h3>

..







..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOprKinAnl.PreOperation.Settings:

PreOperation.Settings
------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreOperation.Settings">
    <span id="anymechoprkinanl-preoperation-settings" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#PreOperation.Settings" title="Permalink to this headline">¶</a>
    <span class="member-descr">General settings for the operation.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyOprSetUI`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    General settings for the operation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.Settings.Echo:

PreOperation.Settings.Echo
-----------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PreOperation.Settings.Echo">
    <span id="anymechoprkinanl-preoperation-settings-echo" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.Echo </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#PreOperation.Settings.Echo" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.Settings.ModelSceneUpdate:

PreOperation.Settings.ModelSceneUpdate
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreOperation.Settings.ModelSceneUpdate">
    <span id="anymechoprkinanl-preoperation-settings-modelsceneupdate" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.ModelSceneUpdate </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#PreOperation.Settings.ModelSceneUpdate" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.Settings.DisplayPriority:

PreOperation.Settings.DisplayPriority
----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PreOperation.Settings.DisplayPriority">
    <span id="anymechoprkinanl-preoperation-settings-displaypriority" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.DisplayPriority </span><span class="member-title-equal">=</span><span class="member-title-default"> PriorityLow </span><a class="headerlink" href="#PreOperation.Settings.DisplayPriority" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining the interface display priority for the Operation.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDisplayPriority`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``PriorityLow``



    Value for defining the interface display priority for the Operation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.Settings.SelectOnLoad:

PreOperation.Settings.SelectOnLoad
-------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreOperation.Settings.SelectOnLoad">
    <span id="anymechoprkinanl-preoperation-settings-selectonload" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.SelectOnLoad </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#PreOperation.Settings.SelectOnLoad" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining if the Operation should be displayed as the default...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``



    Value for defining if the Operation should be displayed as the default Operation for the loaded model.

..







    Pre-process operation.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

.. _AnyMechOprKinAnl.PostOperation:

PostOperation
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation">
    <span id="anymechoprkinanl-postoperation" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PostOperation </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#PostOperation" title="Permalink to this headline">¶</a>
    <span class="member-descr">Post-process operation.</span>
    </h3>

..







..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOprKinAnl.PostOperation.Settings:

PostOperation.Settings
-------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation.Settings">
    <span id="anymechoprkinanl-postoperation-settings" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#PostOperation.Settings" title="Permalink to this headline">¶</a>
    <span class="member-descr">General settings for the operation.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyOprSetUI`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``



    General settings for the operation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.Settings.Echo:

PostOperation.Settings.Echo
------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PostOperation.Settings.Echo">
    <span id="anymechoprkinanl-postoperation-settings-echo" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.Echo </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#PostOperation.Settings.Echo" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.Settings.ModelSceneUpdate:

PostOperation.Settings.ModelSceneUpdate
------------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation.Settings.ModelSceneUpdate">
    <span id="anymechoprkinanl-postoperation-settings-modelsceneupdate" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.ModelSceneUpdate </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#PostOperation.Settings.ModelSceneUpdate" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for definition of operation output to the output log and views.</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Switch for definition of operation output to the output log and views.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.Settings.DisplayPriority:

PostOperation.Settings.DisplayPriority
-----------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PostOperation.Settings.DisplayPriority">
    <span id="anymechoprkinanl-postoperation-settings-displaypriority" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.DisplayPriority </span><span class="member-title-equal">=</span><span class="member-title-default"> PriorityLow </span><a class="headerlink" href="#PostOperation.Settings.DisplayPriority" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining the interface display priority for the Operation.</span>
    </h4>

..


    | **Class type:**  :ref:`AnyDisplayPriority`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``PriorityLow``



    Value for defining the interface display priority for the Operation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.Settings.SelectOnLoad:

PostOperation.Settings.SelectOnLoad
--------------------------------------


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation.Settings.SelectOnLoad">
    <span id="anymechoprkinanl-postoperation-settings-selectonload" style=""></span>
    <h4 class="html-toggle-button" style=""><span class="member-title"> &nbsp;&nbsp;.Settings.SelectOnLoad </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#PostOperation.Settings.SelectOnLoad" title="Permalink to this headline">¶</a>
    <span class="member-descr">Value for defining if the Operation should be displayed as the default...</span>
    </h4>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``



    Value for defining if the Operation should be displayed as the default Operation for the loaded model.

..







    Post-process operation.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div></div> <!--
..

.. _AnyMechOprKinAnl.KinematicTol:

KinematicTol
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="KinematicTol">
    <span id="anymechoprkinanl-kinematictol" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> KinematicTol </span><span class="member-title-equal">=</span><span class="member-title-default"> 1e-06 </span><a class="headerlink" href="#KinematicTol" title="Permalink to this headline">¶</a>
    <span class="member-descr">Tolerance for the kinematic analysis.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``1e-06``







    Tolerance for the kinematic analysis.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.MaxIteration:

MaxIteration
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MaxIteration">
    <span id="anymechoprkinanl-maxiteration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MaxIteration </span><span class="member-title-equal">=</span><span class="member-title-default"> 3000 </span><a class="headerlink" href="#MaxIteration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximal number of Newton iterations in the solution of the non-linear...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``3000``







    Maximal number of Newton iterations in the solution of the non-linear equations in the kinematic position analysis.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.MaxFallback:

MaxFallback
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="MaxFallback">
    <span id="anymechoprkinanl-maxfallback" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MaxFallback </span><span class="member-title-equal">=</span><span class="member-title-default"> 5 </span><a class="headerlink" href="#MaxFallback" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximal number of fallback iterations used by some solvers.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``5``







    Maximal number of fallback iterations used by some solvers.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.Relax:

Relax
========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Relax">
    <span id="anymechoprkinanl-relax" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Relax </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#Relax" title="Permalink to this headline">¶</a>
    <span class="member-descr">Initial value of relaxation coefficient for the Newton iteration.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``







    Initial value of relaxation coefficient for the Newton iteration.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SingleStepOnOff:

SingleStepOnOff
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="SingleStepOnOff">
    <span id="anymechoprkinanl-singlesteponoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SingleStepOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SingleStepOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for the single-step analysis.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``







    Switch for the single-step analysis.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SingleStepNo:

SingleStepNo
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SingleStepNo">
    <span id="anymechoprkinanl-singlestepno" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SingleStepNo </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#SingleStepNo" title="Permalink to this headline">¶</a>
    <span class="member-descr">Zero-based index for the time step to use in the single-step analysis.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``







    Zero-based index for the time step to use in the single-step analysis.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.UseStartGuessOnOff:

UseStartGuessOnOff
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UseStartGuessOnOff">
    <span id="anymechoprkinanl-usestartguessonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UseStartGuessOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#UseStartGuessOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for for whether to use input positions as starting guess or the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``







    Switch for for whether to use input positions as starting guess or the model's current positions.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.PosAnalysisOnlyOnOff:

PosAnalysisOnlyOnOff
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PosAnalysisOnlyOnOff">
    <span id="anymechoprkinanl-posanalysisonlyonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> PosAnalysisOnlyOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#PosAnalysisOnlyOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for skipping velocity and acceleration analysis, i.e., running...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``







    Switch for skipping velocity and acceleration analysis, i.e., running position analysis only. Velocitites and acceleration of all segments are set to zero when computations are skipped.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.ApproxVelAccPerturb:

ApproxVelAccPerturb
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ApproxVelAccPerturb">
    <span id="anymechoprkinanl-approxvelaccperturb" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ApproxVelAccPerturb </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.01 </span><a class="headerlink" href="#ApproxVelAccPerturb" title="Permalink to this headline">¶</a>
    <span class="member-descr">Magnitude of perturbation use in finite difference differentiation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.01``







    Magnitude of perturbation use in finite difference differentiation.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SmallStepAssumptionOnOff:

SmallStepAssumptionOnOff
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SmallStepAssumptionOnOff">
    <span id="anymechoprkinanl-smallstepassumptiononoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SmallStepAssumptionOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#SmallStepAssumptionOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for assumption of small steps (position or time-steps). When 'Off'...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``







    Switch for assumption of small steps (position or time-steps). When 'Off' more robust method can be applied. (REFER TO OTHER DOCUMENTATION).

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SparseSolverDiagEps:

SparseSolverDiagEps
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="SparseSolverDiagEps">
    <span id="anymechoprkinanl-sparsesolverdiageps" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SparseSolverDiagEps </span><span class="member-title-equal">=</span><span class="member-title-default"> 1e-12 </span><a class="headerlink" href="#SparseSolverDiagEps" title="Permalink to this headline">¶</a>
    <span class="member-descr">Test variable: Small floating point number (Epsilon) used by some solvers to...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``1e-12``







    Test variable: Small floating point number (Epsilon) used by some solvers to perturb diagonal elements (DEPRECATED).

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SparseSolverMaxIterativeRefinements:

SparseSolverMaxIterativeRefinements
======================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SparseSolverMaxIterativeRefinements">
    <span id="anymechoprkinanl-sparsesolvermaxiterativerefinements" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SparseSolverMaxIterativeRefinements </span><span class="member-title-equal">=</span><span class="member-title-default"> 2 </span><a class="headerlink" href="#SparseSolverMaxIterativeRefinements" title="Permalink to this headline">¶</a>
    <span class="member-descr">Test variable : Maximal number of iterative refinement steps in solver (DEPRECATED).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``2``







    Test variable : Maximal number of iterative refinement steps in solver (DEPRECATED).

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SparseSolver2x2pivoting:

SparseSolver2x2pivoting
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="SparseSolver2x2pivoting">
    <span id="anymechoprkinanl-sparsesolver2x2pivoting" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SparseSolver2x2pivoting </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SparseSolver2x2pivoting" title="Permalink to this headline">¶</a>
    <span class="member-descr">Test variable: Switch for selecting pivoting scheme for the MKL PARDISO...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``







    Test variable: Switch for selecting pivoting scheme for the MKL PARDISO solver (DEPRECATED).

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SolverType:

SolverType
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SolverType">
    <span id="anymechoprkinanl-solvertype" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SolverType </span><span class="member-title-equal">=</span><span class="member-title-default"> KinSolDeterminate </span><a class="headerlink" href="#SolverType" title="Permalink to this headline">¶</a>
    <span class="member-descr">Solver type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinSolverType`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``KinSolDeterminate``







    Solver type specification.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.Solver:

Solver
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-deprecated" id="Solver">
    <span id="anymechoprkinanl-solver" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Solver </span><span class="member-title-equal">=</span><span class="member-title-default"> ... </span><a class="headerlink" href="#Solver" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``AnyMechOprKinAnl.SolverOptions.KinSolDet1``

    .. deprecated::
       AnyMechOprKinAnl is being extended with new solver options that are currently
        in a beta phase and you have initialized one of these options.
        Version 6.1 is preparing this extension by hidden(deprecated) members to select
        these new options. Future versions will make these options fully function,
        current functionality avaialble with these options is in a beta state and not
        recommended for actual use.

    







    <No description>

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyMechOprKinAnl.SolverOptions:

SolverOptions
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-deprecated" id="SolverOptions">
    <span id="anymechoprkinanl-solveroptions" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SolverOptions </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#SolverOptions" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..



    .. deprecated::
       AnyMechOprKinAnl is being extended with new solver options that are currently
        in a beta phase and you have initialized one of these options.
        Version 6.1 is preparing this extension by hidden(deprecated) members to select
        these new options. Future versions will make these options fully function,
        current functionality avaialble with these options is in a beta state and not
        recommended for actual use.

    







    <No description>

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyMechOprKinAnl.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdConfig">
    <span id="anymechoprkinanl-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UpdDesign">
    <span id="anymechoprkinanl-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdOutput">
    <span id="anymechoprkinanl-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.UpdConfig:

PreOperation.UpdConfig
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PreOperation.UpdConfig">
    <span id="anymechoprkinanl-preoperation-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PreOperation.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PreOperation.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.UpdDesign:

PreOperation.UpdDesign
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PreOperation.UpdDesign">
    <span id="anymechoprkinanl-preoperation-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PreOperation.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PreOperation.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PreOperation.UpdOutput:

PreOperation.UpdOutput
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PreOperation.UpdOutput">
    <span id="anymechoprkinanl-preoperation-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PreOperation.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PreOperation.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.UpdConfig:

PostOperation.UpdConfig
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation.UpdConfig">
    <span id="anymechoprkinanl-postoperation-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PostOperation.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PostOperation.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.UpdDesign:

PostOperation.UpdDesign
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="PostOperation.UpdDesign">
    <span id="anymechoprkinanl-postoperation-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PostOperation.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PostOperation.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.PostOperation.UpdOutput:

PostOperation.UpdOutput
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PostOperation.UpdOutput">
    <span id="anymechoprkinanl-postoperation-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PostOperation.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PostOperation.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyMechOprKinAnl.KinematicError:

KinematicError
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="KinematicError">
    <span id="anymechoprkinanl-kinematicerror" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinematicError</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinematicError" title="Permalink to this headline">¶</a>
    <span class="member-descr">Current value of the kinematic error.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Current value of the kinematic error.

..





