
.. _AnyForceConSimpleBound:

######################
AnyForceConSimpleBound
######################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyForceConstraint`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyForceConSimpleBound.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyForceConSimpleBound
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`Demo.Arm2D </demos/zips/Demo.Arm2D.zip>`
     - Simple planar arm model including 8 muscles.
   * - :download:`ClassExamples.AnyForce </demos/zips/ClassExamples.AnyForce.zip>`
     - AnyForce
   * - :download:`ClassExamples.AnyForceConstraint </demos/zips/ClassExamples.AnyForceConstraint.zip>`
     - Applying constraints on forces, in particular reaction force.
   * - :download:`ClassExamples.AnyForceMomentMeasure </demos/zips/ClassExamples.AnyForceMomentMeasure.zip>`
     - Measuring forces as 3D point force and moment components.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceConSimpleBound.AnyForceBase:

AnyForceBase
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="AnyForceBase">
    <span id="anyforceconsimplebound-anyforcebase" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyForceBase (1) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyForceBase" title="Permalink to this headline">¶</a>
    <span class="member-descr">The force objects to be constrained.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyForceBase`
    | **Number:** 1



    The force objects to be constrained.

..












*******************************
Optional initialization members
*******************************
 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

.. _AnyForceConSimpleBound.ForceArr:

ForceArr
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="ForceArr">
    <span id="anyforceconsimplebound-forcearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceArr </span><span class="member-title-equal">=</span><span class="member-title-default"> {} </span><a class="headerlink" href="#ForceArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the forces (class AnyForceBase and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``
    

    
    
    



    Array of pointers to the forces (class AnyForceBase and derived) that are basic input to the constraint.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.ForceIndexArr:

ForceIndexArr
================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="ForceIndexArr">
    <span id="anyforceconsimplebound-forceindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceIndexArr </span><span class="member-title-equal">=</span><span class="member-title-default"> {0} </span><a class="headerlink" href="#ForceIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0}``
    

    
    
    



    <No description>

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.Findex:

Findex
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="Findex">
    <span id="anyforceconsimplebound-findex" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> Findex </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#Findex" title="Permalink to this headline">¶</a>
    <span class="member-descr">Index of the force component to be constrained.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``
    

    
    
    



    Index of the force component to be constrained.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.LowerBoundOnOff:

LowerBoundOnOff
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="LowerBoundOnOff">
    <span id="anyforceconsimplebound-lowerboundonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> LowerBoundOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#LowerBoundOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for activation of the lower bound.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``
    

    
    
    



    Switch for activation of the lower bound.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.LowerBound:

LowerBound
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="LowerBound">
    <span id="anyforceconsimplebound-lowerbound" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> LowerBound </span><span class="member-title-equal">=</span><span class="member-title-default"> -1.0 </span><a class="headerlink" href="#LowerBound" title="Permalink to this headline">¶</a>
    <span class="member-descr">Lower bound of the force.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``-1.0``
    

    
    
    



    Lower bound of the force.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.UpperBoundOnOff:

UpperBoundOnOff
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="UpperBoundOnOff">
    <span id="anyforceconsimplebound-upperboundonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UpperBoundOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#UpperBoundOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for activation of the upper bound.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``
    

    
    
    



    Switch for activation of the upper bound.

..



 



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnyForceConSimpleBound.UpperBound:

UpperBound
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpperBound">
    <span id="anyforceconsimplebound-upperbound" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> UpperBound </span><span class="member-title-equal">=</span><span class="member-title-default"> 1.0 </span><a class="headerlink" href="#UpperBound" title="Permalink to this headline">¶</a>
    <span class="member-descr">Upper bound of the force.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``1.0``
    

    
    
    



    Upper bound of the force.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceConSimpleBound.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdConfig">
    <span id="anyforceconsimplebound-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceConSimpleBound.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="UpdDesign">
    <span id="anyforceconsimplebound-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceConSimpleBound.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed" id="UpdOutput">
    <span id="anyforceconsimplebound-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceConSimpleBound.t_:

t
====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed" id="t">
    <span id="anyforceconsimplebound-t_" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..






