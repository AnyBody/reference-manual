
.. _AnyForceSurfaceContact:

######################
AnyForceSurfaceContact
######################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnyAppliedForce`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnyForceSurfaceContact.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|






.. Do not edit this file.
.. It is automatically generated. If you need to alter the demos which are include
.. edit the demos/demos.json file

.. rst-class:: plain

.. list-table:: Demo examples related to AnyForceSurfaceContact
   :widths: 25 75
   :header-rows: 1

   * - Demo
     - Description
   * - :download:`Demo.Arm2D </demos/zips/Demo.Arm2D.zip>`
     - Simple planar arm model including 8 muscles.
   * - :download:`ClassExamples.AnyForce </demos/zips/ClassExamples.AnyForce.zip>`
     - AnyForce
   * - :download:`ClassExamples.AnyForceSurfaceContact </demos/zips/ClassExamples.AnyForceSurfaceContact.zip>`
     - Shows how to use the AnyForceSurfaceContact class
   * - :download:`ClassExamples.AnyForceMomentMeasure </demos/zips/ClassExamples.AnyForceMomentMeasure.zip>`
     - Measuring forces as 3D point force and moment components.



.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



****************
Expected members
****************
.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceSurfaceContact.AnySurface:

AnySurface
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="AnySurface">
    <span id="anyforcesurfacecontact-anysurface" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnySurface (2) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnySurface" title="Permalink to this headline">¶</a>
    <span class="member-descr">Master (first) and slave (second) surface for contact calculation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySurface`
    | **Number:** 2



    Master (first) and slave (second) surface for contact calculation.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.AnyParamFun:

AnyParamFun
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="AnyParamFun">
    <span id="anyforcesurfacecontact-anyparamfun" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AnyParamFun (0..1) </span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#AnyParamFun" title="Permalink to this headline">¶</a>
    <span class="member-descr">Depth function used for integration of volume.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyParamFun`
    | **Number:** 0..1



    Depth function used for integration of volume.

..








*******************************
Required initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceSurfaceContact.PressureModule:

PressureModule
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="PressureModule">
    <span id="anyforcesurfacecontact-pressuremodule" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">PressureModule</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#PressureModule" title="Permalink to this headline">¶</a>
    <span class="member-descr">Linear pressure module defining a linear relationship between penetration...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`



    Linear pressure module defining a linear relationship between penetration volume and force, i.e., penetration and pressure.

..






*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceSurfaceContact.MeshRefinementMaster:

MeshRefinementMaster
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MeshRefinementMaster">
    <span id="anyforcesurfacecontact-meshrefinementmaster" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MeshRefinementMaster </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#MeshRefinementMaster" title="Permalink to this headline">¶</a>
    <span class="member-descr">Level of mesh refinement for computation of the master surface.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``



    Level of mesh refinement for computation of the master surface.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.MeshRefinementSlave:

MeshRefinementSlave
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="MeshRefinementSlave">
    <span id="anyforcesurfacecontact-meshrefinementslave" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MeshRefinementSlave </span><span class="member-title-equal">=</span><span class="member-title-default"> 0 </span><a class="headerlink" href="#MeshRefinementSlave" title="Permalink to this headline">¶</a>
    <span class="member-descr">Level of mesh refinement for computation of the slave surface.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``



    Level of mesh refinement for computation of the slave surface.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.MinDepth:

MinDepth
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MinDepth">
    <span id="anyforcesurfacecontact-mindepth" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MinDepth </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#MinDepth" title="Permalink to this headline">¶</a>
    <span class="member-descr">Minimal penetration depth considered in calculation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``



    Minimal penetration depth considered in calculation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.MaxDepth:

MaxDepth
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="MaxDepth">
    <span id="anyforcesurfacecontact-maxdepth" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MaxDepth </span><span class="member-title-equal">=</span><span class="member-title-default"> 100000.0 </span><a class="headerlink" href="#MaxDepth" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximal penetration depth considered in calculation.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``100000.0``



    Maximal penetration depth considered in calculation.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.SingleSidedOnOff:

SingleSidedOnOff
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="SingleSidedOnOff">
    <span id="anyforcesurfacecontact-singlesidedonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> SingleSidedOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#SingleSidedOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch to turn on calculation just from master to slave.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``Off``



    Switch to turn on calculation just from master to slave.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.ForceViewOnOff:

ForceViewOnOff
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ForceViewOnOff">
    <span id="anyforcesurfacecontact-forceviewonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceViewOnOff </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#ForceViewOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Drawing of contact forces. THIS MEMBER IS DEPRECATED AND ONLY LEFT FOR...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``



    Drawing of contact forces. THIS MEMBER IS DEPRECATED AND ONLY LEFT FOR BACKWARDS COMPATIBILITY!!!

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.ProjectionThresholdMaster:

ProjectionThresholdMaster
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="ProjectionThresholdMaster">
    <span id="anyforcesurfacecontact-projectionthresholdmaster" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ProjectionThresholdMaster </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#ProjectionThresholdMaster" title="Permalink to this headline">¶</a>
    <span class="member-descr">Threshold for the projection of the connection line and the master surface normal.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloatVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``



    Threshold for the projection of the connection line and the master surface normal.

..





..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.ProjectionThresholdSlave:

ProjectionThresholdSlave
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ProjectionThresholdSlave">
    <span id="anyforcesurfacecontact-projectionthresholdslave" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ProjectionThresholdSlave </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.0 </span><a class="headerlink" href="#ProjectionThresholdSlave" title="Permalink to this headline">¶</a>
    <span class="member-descr">Threshold for the projection of the connection line and the slave surface normal.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloatVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``



    Threshold for the projection of the connection line and the slave surface normal.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyForceSurfaceContact.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdConfig">
    <span id="anyforcesurfacecontact-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UpdDesign">
    <span id="anyforcesurfacecontact-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdOutput">
    <span id="anyforcesurfacecontact-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.t_:

t
====


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="t">
    <span id="anyforcesurfacecontact-t_" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrames:

RefFrames
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefFrames">
    <span id="anyforcesurfacecontact-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Surfaces:

Surfaces
===========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Surfaces">
    <span id="anyforcesurfacecontact-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.KinMeasureArr:

KinMeasureArr
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="KinMeasureArr">
    <span id="anyforcesurfacecontact-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{AnyForceSurfaceContact.Linear0, AnyForceSurfaceContact.Linear0,...``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.KinMeasureIndexArr:

KinMeasureIndexArr
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="KinMeasureIndexArr">
    <span id="anyforcesurfacecontact-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2}``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.nDim:

nDim
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="nDim">
    <span id="anyforcesurfacecontact-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrameOutput:

RefFrameOutput
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RefFrameOutput">
    <span id="anyforcesurfacecontact-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrameOutput.RefFrameArr:

RefFrameOutput.RefFrameArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefFrameOutput.RefFrameArr">
    <span id="anyforcesurfacecontact-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrameOutput.Jacobians:

RefFrameOutput.Jacobians
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RefFrameOutput.Jacobians">
    <span id="anyforcesurfacecontact-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrameOutput.F:

RefFrameOutput.F
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="RefFrameOutput.F">
    <span id="anyforcesurfacecontact-refframeoutput-f" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.F</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.F" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.RefFrameOutput.M:

RefFrameOutput.M
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="RefFrameOutput.M">
    <span id="anyforcesurfacecontact-refframeoutput-m" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">RefFrameOutput.M</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#RefFrameOutput.M" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Fin:

Fin
======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Fin">
    <span id="anyforcesurfacecontact-fin" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fin</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fin" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of input loads to the given type of analysis,...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of input loads to the given type of analysis, i.e., to the right-hand side of the equations of motion.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Fout:

Fout
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Fout">
    <span id="anyforcesurfacecontact-fout" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fout</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fout" title="Permalink to this headline">¶</a>
    <span class="member-descr">The generalized force vector of outputs from the given type of analysis....</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The generalized force vector of outputs from the given type of analysis. This is the total force in the element after the analysis is executed.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0:

Linear0
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0">
    <span id="anyforcesurfacecontact-linear0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Linear kinematic measure object measuring translation of the first (index 0) surface.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinear`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Linear kinematic measure object measuring translation of the first (index 0) surface.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.UpdConfig:

Linear0.UpdConfig
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.UpdConfig">
    <span id="anyforcesurfacecontact-linear0-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.UpdDesign:

Linear0.UpdDesign
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.UpdDesign">
    <span id="anyforcesurfacecontact-linear0-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.UpdOutput:

Linear0.UpdOutput
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.UpdOutput">
    <span id="anyforcesurfacecontact-linear0-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.t:

Linear0.t
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.t">
    <span id="anyforcesurfacecontact-linear0-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.RefFrames:

Linear0.RefFrames
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.RefFrames">
    <span id="anyforcesurfacecontact-linear0-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Surfaces:

Linear0.Surfaces
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.Surfaces">
    <span id="anyforcesurfacecontact-linear0-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.KinMeasureArr:

Linear0.KinMeasureArr
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.KinMeasureArr">
    <span id="anyforcesurfacecontact-linear0-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.KinMeasureIndexArr:

Linear0.KinMeasureIndexArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.KinMeasureIndexArr">
    <span id="anyforcesurfacecontact-linear0-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.nDim:

Linear0.nDim
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.nDim">
    <span id="anyforcesurfacecontact-linear0-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.RefFrameOutput:

Linear0.RefFrameOutput
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.RefFrameOutput">
    <span id="anyforcesurfacecontact-linear0-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.RefFrameOutput.RefFrameArr:

Linear0.RefFrameOutput.RefFrameArr
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.RefFrameOutput.RefFrameArr">
    <span id="anyforcesurfacecontact-linear0-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.RefFrameOutput.Jacobians:

Linear0.RefFrameOutput.Jacobians
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.RefFrameOutput.Jacobians">
    <span id="anyforcesurfacecontact-linear0-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Pos:

Linear0.Pos
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.Pos">
    <span id="anyforcesurfacecontact-linear0-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Vel:

Linear0.Vel
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.Vel">
    <span id="anyforcesurfacecontact-linear0-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Acc:

Linear0.Acc
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.Acc">
    <span id="anyforcesurfacecontact-linear0-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Type:

Linear0.Type
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.Type">
    <span id="anyforcesurfacecontact-linear0-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Type</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinearType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``CartesianCoord``




    Coordinate type specification.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.Ref:

Linear0.Ref
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.Ref">
    <span id="anyforcesurfacecontact-linear0-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer numbers that specify the reference system in which the vector is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-1.0``




    Integer numbers that specify the reference system in which the vector is measured. '-1' is default meaning the global system, 0 or 1 mean respectively the first or the second reference system that have been added to the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.LineLineDistanceAxes:

Linear0.LineLineDistanceAxes
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.LineLineDistanceAxes">
    <span id="anyforcesurfacecontact-linear0-linelinedistanceaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.LineLineDistanceAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.LineLineDistanceAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes for which line-to-line distances are measured when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes for which line-to-line distances are measured when Type is LineLineDistance.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.LineLineDistanceAxisLength:

Linear0.LineLineDistanceAxisLength
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear0.LineLineDistanceAxisLength">
    <span id="anyforcesurfacecontact-linear0-linelinedistanceaxislength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.LineLineDistanceAxisLength</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.LineLineDistanceAxisLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the secondary axis used for line-to-line distances when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``10.0``




    Length of the secondary axis used for line-to-line distances when Type is LineLineDistance. The sencondary axis if set to this finite length to smoothen the singularity for parallel lines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear0.AngularAxis:

Linear0.AngularAxis
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear0.AngularAxis">
    <span id="anyforcesurfacecontact-linear0-angularaxis" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear0.AngularAxis</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear0.AngularAxis" title="Permalink to this headline">¶</a>
    <span class="member-descr">Axis of rotation for spherical and cylindrical coordinates i.e. when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``




    Axis of rotation for spherical and cylindrical coordinates i.e. when Type is either SphericalCoord or CylindricalCoord.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0:

Orientation0
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0">
    <span id="anyforcesurfacecontact-orientation0" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational kinematic measure object measuring orientation of the first...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinRotational`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Rotational kinematic measure object measuring orientation of the first (index 0) surface.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.UpdConfig:

Orientation0.UpdConfig
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.UpdConfig">
    <span id="anyforcesurfacecontact-orientation0-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.UpdDesign:

Orientation0.UpdDesign
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.UpdDesign">
    <span id="anyforcesurfacecontact-orientation0-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.UpdOutput:

Orientation0.UpdOutput
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.UpdOutput">
    <span id="anyforcesurfacecontact-orientation0-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.t:

Orientation0.t
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.t">
    <span id="anyforcesurfacecontact-orientation0-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.RefFrames:

Orientation0.RefFrames
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.RefFrames">
    <span id="anyforcesurfacecontact-orientation0-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Surfaces:

Orientation0.Surfaces
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.Surfaces">
    <span id="anyforcesurfacecontact-orientation0-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.KinMeasureArr:

Orientation0.KinMeasureArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.KinMeasureArr">
    <span id="anyforcesurfacecontact-orientation0-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.KinMeasureIndexArr:

Orientation0.KinMeasureIndexArr
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.KinMeasureIndexArr">
    <span id="anyforcesurfacecontact-orientation0-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.nDim:

Orientation0.nDim
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.nDim">
    <span id="anyforcesurfacecontact-orientation0-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.RefFrameOutput:

Orientation0.RefFrameOutput
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.RefFrameOutput">
    <span id="anyforcesurfacecontact-orientation0-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.RefFrameOutput.RefFrameArr:

Orientation0.RefFrameOutput.RefFrameArr
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.RefFrameOutput.RefFrameArr">
    <span id="anyforcesurfacecontact-orientation0-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.RefFrameOutput.Jacobians:

Orientation0.RefFrameOutput.Jacobians
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.RefFrameOutput.Jacobians">
    <span id="anyforcesurfacecontact-orientation0-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Pos:

Orientation0.Pos
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.Pos">
    <span id="anyforcesurfacecontact-orientation0-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Vel:

Orientation0.Vel
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.Vel">
    <span id="anyforcesurfacecontact-orientation0-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Acc:

Orientation0.Acc
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.Acc">
    <span id="anyforcesurfacecontact-orientation0-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Type:

Orientation0.Type
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.Type">
    <span id="anyforcesurfacecontact-orientation0-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Type</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinRotationalType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``RotVector``




    Coordinate type specification.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Axis1:

Orientation0.Axis1
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.Axis1">
    <span id="anyforcesurfacecontact-orientation0-axis1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Axis1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Axis1" title="Permalink to this headline">¶</a>
    <span class="member-descr">First axis of rotation for RotAxesAngles and primary axis of rotation...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``




    First axis of rotation for RotAxesAngles and primary axis of rotation (normal to the planar motion) for PlanarAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Axis2:

Orientation0.Axis2
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.Axis2">
    <span id="anyforcesurfacecontact-orientation0-axis2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Axis2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Axis2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Second axis of rotation for RotAxesAngles.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``y``




    Second axis of rotation for RotAxesAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Axis3:

Orientation0.Axis3
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.Axis3">
    <span id="anyforcesurfacecontact-orientation0-axis3" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Axis3</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Axis3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Third axis of rotation for RotAxesAngles.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``x``




    Third axis of rotation for RotAxesAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.DirCosineAxes:

Orientation0.DirCosineAxes
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.DirCosineAxes">
    <span id="anyforcesurfacecontact-orientation0-dircosineaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.DirCosineAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.DirCosineAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes used for which directional cosine outputs are given when Type...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes used for which directional cosine outputs are given when Type is DirCosines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.Ref:

Orientation0.Ref
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.Ref">
    <span id="anyforcesurfacecontact-orientation0-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">IMPORTANT: The functionality of 'Ref' has been removed, in order to avoid...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-1.0``




    IMPORTANT: The functionality of 'Ref' has been removed, in order to avoid misunderstandings and confusion with 'Ref' in AnyKinLinear. Please modify your model to remove initialization of 'Ref'. In future versions, 'Ref' will be removed entirely. Previous description of this member was: Integer numbers that specify the reference system in which geometric vectors are measured, e.g. the angular velocity vector. '-1' is default meaning the global system, 0 or 1 mean respectively the first or the second reference system that have been added to the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.AngVelOnOff:

Orientation0.AngVelOnOff
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation0.AngVelOnOff">
    <span id="anyforcesurfacecontact-orientation0-angvelonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.AngVelOnOff</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.AngVelOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector at velocity and acceleration level.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for using angular velocity vector at velocity and acceleration level.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation0.AngVelGlobal:

Orientation0.AngVelGlobal
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation0.AngVelGlobal">
    <span id="anyforcesurfacecontact-orientation0-angvelglobal" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation0.AngVelGlobal</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation0.AngVelGlobal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector in global coordinates at velocity...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for using angular velocity vector in global coordinates at velocity and acceleration level. This requires 'AngVelOnOff = On'.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1:

Linear1
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1">
    <span id="anyforcesurfacecontact-linear1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Linear kinematic measure object measuring translation of the second (index...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinear`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Linear kinematic measure object measuring translation of the second (index 1) surface.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.UpdConfig:

Linear1.UpdConfig
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.UpdConfig">
    <span id="anyforcesurfacecontact-linear1-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.UpdDesign:

Linear1.UpdDesign
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.UpdDesign">
    <span id="anyforcesurfacecontact-linear1-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.UpdOutput:

Linear1.UpdOutput
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.UpdOutput">
    <span id="anyforcesurfacecontact-linear1-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.t:

Linear1.t
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.t">
    <span id="anyforcesurfacecontact-linear1-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.RefFrames:

Linear1.RefFrames
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.RefFrames">
    <span id="anyforcesurfacecontact-linear1-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Surfaces:

Linear1.Surfaces
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.Surfaces">
    <span id="anyforcesurfacecontact-linear1-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.KinMeasureArr:

Linear1.KinMeasureArr
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.KinMeasureArr">
    <span id="anyforcesurfacecontact-linear1-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.KinMeasureIndexArr:

Linear1.KinMeasureIndexArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.KinMeasureIndexArr">
    <span id="anyforcesurfacecontact-linear1-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.nDim:

Linear1.nDim
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.nDim">
    <span id="anyforcesurfacecontact-linear1-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.RefFrameOutput:

Linear1.RefFrameOutput
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.RefFrameOutput">
    <span id="anyforcesurfacecontact-linear1-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.RefFrameOutput.RefFrameArr:

Linear1.RefFrameOutput.RefFrameArr
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.RefFrameOutput.RefFrameArr">
    <span id="anyforcesurfacecontact-linear1-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.RefFrameOutput.Jacobians:

Linear1.RefFrameOutput.Jacobians
===================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.RefFrameOutput.Jacobians">
    <span id="anyforcesurfacecontact-linear1-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Pos:

Linear1.Pos
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.Pos">
    <span id="anyforcesurfacecontact-linear1-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Vel:

Linear1.Vel
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.Vel">
    <span id="anyforcesurfacecontact-linear1-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Acc:

Linear1.Acc
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.Acc">
    <span id="anyforcesurfacecontact-linear1-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Type:

Linear1.Type
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.Type">
    <span id="anyforcesurfacecontact-linear1-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Type</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinLinearType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``CartesianCoord``




    Coordinate type specification.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.Ref:

Linear1.Ref
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.Ref">
    <span id="anyforcesurfacecontact-linear1-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">Integer numbers that specify the reference system in which the vector is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-1.0``




    Integer numbers that specify the reference system in which the vector is measured. '-1' is default meaning the global system, 0 or 1 mean respectively the first or the second reference system that have been added to the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.LineLineDistanceAxes:

Linear1.LineLineDistanceAxes
===============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.LineLineDistanceAxes">
    <span id="anyforcesurfacecontact-linear1-linelinedistanceaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.LineLineDistanceAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.LineLineDistanceAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes for which line-to-line distances are measured when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes for which line-to-line distances are measured when Type is LineLineDistance.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.LineLineDistanceAxisLength:

Linear1.LineLineDistanceAxisLength
=====================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Linear1.LineLineDistanceAxisLength">
    <span id="anyforcesurfacecontact-linear1-linelinedistanceaxislength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.LineLineDistanceAxisLength</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.LineLineDistanceAxisLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">Length of the secondary axis used for line-to-line distances when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``10.0``




    Length of the secondary axis used for line-to-line distances when Type is LineLineDistance. The sencondary axis if set to this finite length to smoothen the singularity for parallel lines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Linear1.AngularAxis:

Linear1.AngularAxis
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Linear1.AngularAxis">
    <span id="anyforcesurfacecontact-linear1-angularaxis" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Linear1.AngularAxis</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Linear1.AngularAxis" title="Permalink to this headline">¶</a>
    <span class="member-descr">Axis of rotation for spherical and cylindrical coordinates i.e. when Type is...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``




    Axis of rotation for spherical and cylindrical coordinates i.e. when Type is either SphericalCoord or CylindricalCoord.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1:

Orientation1
===============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1">
    <span id="anyforcesurfacecontact-orientation1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1" title="Permalink to this headline">¶</a>
    <span class="member-descr">Rotational kinematic measure object measuring orientation of the second...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinRotational`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Rotational kinematic measure object measuring orientation of the second (index 1) surface.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.UpdConfig:

Orientation1.UpdConfig
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.UpdConfig">
    <span id="anyforcesurfacecontact-orientation1-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.UpdDesign:

Orientation1.UpdDesign
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.UpdDesign">
    <span id="anyforcesurfacecontact-orientation1-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.UpdOutput:

Orientation1.UpdOutput
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.UpdOutput">
    <span id="anyforcesurfacecontact-orientation1-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.t:

Orientation1.t
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.t">
    <span id="anyforcesurfacecontact-orientation1-t" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.t</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.t" title="Permalink to this headline">¶</a>
    <span class="member-descr">Object-time variable.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`TimeVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Object-time variable.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.RefFrames:

Orientation1.RefFrames
=========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.RefFrames">
    <span id="anyforcesurfacecontact-orientation1-refframes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.RefFrames</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.RefFrames" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the reference frames (class AnyRefFrame and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the reference frames (class AnyRefFrame and derived) that are basic input to the kinematic measure. Notice that some kinematic measures also use other refernce frames implicitly.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Surfaces:

Orientation1.Surfaces
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.Surfaces">
    <span id="anyforcesurfacecontact-orientation1-surfaces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Surfaces</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Surfaces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the surfaces (class AnySurface and derived) that are...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the surfaces (class AnySurface and derived) that are basic input to the kinematic measure. Notice that many kinematic measure do not have any surface dependency.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.KinMeasureArr:

Orientation1.KinMeasureArr
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.KinMeasureArr">
    <span id="anyforcesurfacecontact-orientation1-kinmeasurearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.KinMeasureArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.KinMeasureArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of pointers to the other kinematic (class AnyKinMeasure and derived)...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of pointers to the other kinematic (class AnyKinMeasure and derived) that are basic input to the kinematic measure. This is used only for kinematic measure that combine other measure, but not for AnyKinMeasureReal-derived measures

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.KinMeasureIndexArr:

Orientation1.KinMeasureIndexArr
==================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.KinMeasureIndexArr">
    <span id="anyforcesurfacecontact-orientation1-kinmeasureindexarr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.KinMeasureIndexArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.KinMeasureIndexArr" title="Permalink to this headline">¶</a>
    <span class="member-descr">Array of indices of the component of the associated kinematic measure in...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntArray`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Array of indices of the component of the associated kinematic measure in KinMeasureArr that is used.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.nDim:

Orientation1.nDim
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.nDim">
    <span id="anyforcesurfacecontact-orientation1-ndim" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.nDim</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.nDim" title="Permalink to this headline">¶</a>
    <span class="member-descr">Dimensions of the kinematic measure, i.e., the number of elements in the...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Dimensions of the kinematic measure, i.e., the number of elements in the measure, e.g. the number of elements in the 'Pos' member (when avaialble) and related members.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.RefFrameOutput:

Orientation1.RefFrameOutput
==============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.RefFrameOutput">
    <span id="anyforcesurfacecontact-orientation1-refframeoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.RefFrameOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.RefFrameOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr">Folder containing data related to all the reference frames that this measure...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFolder`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    Folder containing data related to all the reference frames that this measure depends on. This includes reference frames explicitly given by via members such as 'RefFrames', but also implicit dependecies via for instance surfaces (e.g. from the member 'Surfaces').

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.RefFrameOutput.RefFrameArr:

Orientation1.RefFrameOutput.RefFrameArr
==========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.RefFrameOutput.RefFrameArr">
    <span id="anyforcesurfacecontact-orientation1-refframeoutput-refframearr" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.RefFrameOutput.RefFrameArr</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.RefFrameOutput.RefFrameArr" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyObjectPtrArray`
    | **Eval moment:** :ref:`ConfigVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.RefFrameOutput.Jacobians:

Orientation1.RefFrameOutput.Jacobians
========================================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.RefFrameOutput.Jacobians">
    <span id="anyforcesurfacecontact-orientation1-refframeoutput-jacobians" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.RefFrameOutput.Jacobians</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.RefFrameOutput.Jacobians" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Pos:

Orientation1.Pos
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.Pos">
    <span id="anyforcesurfacecontact-orientation1-pos" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Pos</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Pos" title="Permalink to this headline">¶</a>
    <span class="member-descr">The position vector, i.e., the current values of the measured quantity.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`PosVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The position vector, i.e., the current values of the measured quantity.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Vel:

Orientation1.Vel
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.Vel">
    <span id="anyforcesurfacecontact-orientation1-vel" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Vel</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Vel" title="Permalink to this headline">¶</a>
    <span class="member-descr">The velocity vector, typically the time-derivative of Pos.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`VelVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The velocity vector, typically the time-derivative of Pos.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Acc:

Orientation1.Acc
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.Acc">
    <span id="anyforcesurfacecontact-orientation1-acc" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Acc</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Acc" title="Permalink to this headline">¶</a>
    <span class="member-descr">The acceleration vector, typically the time-derivative of Vel.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVector`
    | **Eval moment:** :ref:`AccVar <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    The acceleration vector, typically the time-derivative of Vel.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Type:

Orientation1.Type
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.Type">
    <span id="anyforcesurfacecontact-orientation1-type" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Type</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Type" title="Permalink to this headline">¶</a>
    <span class="member-descr">Coordinate type specification.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyKinRotationalType`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``RotVector``




    Coordinate type specification.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Axis1:

Orientation1.Axis1
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.Axis1">
    <span id="anyforcesurfacecontact-orientation1-axis1" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Axis1</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Axis1" title="Permalink to this headline">¶</a>
    <span class="member-descr">First axis of rotation for RotAxesAngles and primary axis of rotation...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``z``




    First axis of rotation for RotAxesAngles and primary axis of rotation (normal to the planar motion) for PlanarAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Axis2:

Orientation1.Axis2
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.Axis2">
    <span id="anyforcesurfacecontact-orientation1-axis2" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Axis2</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Axis2" title="Permalink to this headline">¶</a>
    <span class="member-descr">Second axis of rotation for RotAxesAngles.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``y``




    Second axis of rotation for RotAxesAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Axis3:

Orientation1.Axis3
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.Axis3">
    <span id="anyforcesurfacecontact-orientation1-axis3" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Axis3</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Axis3" title="Permalink to this headline">¶</a>
    <span class="member-descr">Third axis of rotation for RotAxesAngles.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``x``




    Third axis of rotation for RotAxesAngles.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.DirCosineAxes:

Orientation1.DirCosineAxes
=============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.DirCosineAxes">
    <span id="anyforcesurfacecontact-orientation1-dircosineaxes" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.DirCosineAxes</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.DirCosineAxes" title="Permalink to this headline">¶</a>
    <span class="member-descr">Pairs of axes used for which directional cosine outputs are given when Type...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRefFrameAxis`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    Pairs of axes used for which directional cosine outputs are given when Type is DirCosines.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.Ref:

Orientation1.Ref
===================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.Ref">
    <span id="anyforcesurfacecontact-orientation1-ref" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.Ref</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.Ref" title="Permalink to this headline">¶</a>
    <span class="member-descr">IMPORTANT: The functionality of 'Ref' has been removed, in order to avoid...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``-1.0``




    IMPORTANT: The functionality of 'Ref' has been removed, in order to avoid misunderstandings and confusion with 'Ref' in AnyKinLinear. Please modify your model to remove initialization of 'Ref'. In future versions, 'Ref' will be removed entirely. Previous description of this member was: Integer numbers that specify the reference system in which geometric vectors are measured, e.g. the angular velocity vector. '-1' is default meaning the global system, 0 or 1 mean respectively the first or the second reference system that have been added to the object.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.AngVelOnOff:

Orientation1.AngVelOnOff
===========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Orientation1.AngVelOnOff">
    <span id="anyforcesurfacecontact-orientation1-angvelonoff" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.AngVelOnOff</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.AngVelOnOff" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector at velocity and acceleration level.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for using angular velocity vector at velocity and acceleration level.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Orientation1.AngVelGlobal:

Orientation1.AngVelGlobal
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Orientation1.AngVelGlobal">
    <span id="anyforcesurfacecontact-orientation1-angvelglobal" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Orientation1.AngVelGlobal</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Orientation1.AngVelGlobal" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for using angular velocity vector in global coordinates at velocity...</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``On``




    Switch for using angular velocity vector in global coordinates at velocity and acceleration level. This requires 'AngVelOnOff = On'.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Fmaster:

Fmaster
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Fmaster">
    <span id="anyforcesurfacecontact-fmaster" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fmaster</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fmaster" title="Permalink to this headline">¶</a>
    <span class="member-descr">Force vector applied to the master surface in global coordinates.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Force vector applied to the master surface in global coordinates.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Fslave:

Fslave
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Fslave">
    <span id="anyforcesurfacecontact-fslave" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Fslave</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Fslave" title="Permalink to this headline">¶</a>
    <span class="member-descr">Force vector applied to the slave surface in global coordinates frame.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Force vector applied to the slave surface in global coordinates frame.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Mmaster:

Mmaster
==========


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Mmaster">
    <span id="anyforcesurfacecontact-mmaster" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Mmaster</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Mmaster" title="Permalink to this headline">¶</a>
    <span class="member-descr">Moment vector applied to the master surface in global coordinates.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Moment vector applied to the master surface in global coordinates.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Mslave:

Mslave
=========


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="Mslave">
    <span id="anyforcesurfacecontact-mslave" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Mslave</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Mslave" title="Permalink to this headline">¶</a>
    <span class="member-descr">Moment vector applied to the slave surface in global coordinates frame.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Moment vector applied to the slave surface in global coordinates frame.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.Mcop:

Mcop
=======


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="Mcop">
    <span id="anyforcesurfacecontact-mcop" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">Mcop</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#Mcop" title="Permalink to this headline">¶</a>
    <span class="member-descr">Torque moment in global coordinates frame.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Torque moment in global coordinates frame.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.COP:

COP
======


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="COP">
    <span id="anyforcesurfacecontact-cop" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">COP</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#COP" title="Permalink to this headline">¶</a>
    <span class="member-descr">Center of Pressure in global coordinates frame.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVec3`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.0, 0.0, 0.0}``




    Center of Pressure in global coordinates frame.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.ContactArea:

ContactArea
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="ContactArea">
    <span id="anyforcesurfacecontact-contactarea" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">ContactArea</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#ContactArea" title="Permalink to this headline">¶</a>
    <span class="member-descr">Area of contact between the two surfaces.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Area of contact between the two surfaces.

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyForceSurfaceContact.MaxPenetration:

MaxPenetration
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="MaxPenetration">
    <span id="anyforcesurfacecontact-maxpenetration" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">MaxPenetration</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#MaxPenetration" title="Permalink to this headline">¶</a>
    <span class="member-descr">Maximal Penetration of the surfaces.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ForceVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.0``




    Maximal Penetration of the surfaces.

..





