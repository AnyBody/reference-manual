
.. _AnyFunAbs:

#########
AnyFunAbs
#########

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Abstract
:Parent class: :ref:`AnyFunElemByElemOpr`


**************
Description
**************


This is an abstract class implementing the function: :ref:`abs()` .

.. seealso:: Please see the documentation on :ref:`abs()` for more information
    on how to use the function.


.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|







.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.







.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnyFunAbs.FloatFunction:

FloatFunction
================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="FloatFunction">
    <span id="anyfunabs-floatfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.FloatFunction.ArgList:

FloatFunction.ArgList
========================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="FloatFunction.ArgList">
    <span id="anyfunabs-floatfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.FloatFunction.ArgList.Arg:

FloatFunction.ArgList.Arg
============================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="FloatFunction.ArgList.Arg">
    <span id="anyfunabs-floatfunction-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFunction.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFunction.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.FloatFunction.Return:

FloatFunction.Return
=======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="FloatFunction.Return">
    <span id="anyfunabs-floatfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">FloatFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#FloatFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyFloat`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.IntFunction:

IntFunction
==============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="IntFunction">
    <span id="anyfunabs-intfunction" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFunction</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFunction" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyMonoFunction`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.IntFunction.ArgList:

IntFunction.ArgList
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="IntFunction.ArgList">
    <span id="anyfunabs-intfunction-arglist" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFunction.ArgList</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFunction.ArgList" title="Permalink to this headline">¶</a>
    <span class="member-descr">A special folder containing the argument list of the function.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyFunctionArgList`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``{}``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.IntFunction.ArgList.Arg:

IntFunction.ArgList.Arg
==========================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="IntFunction.ArgList.Arg">
    <span id="anyfunabs-intfunction-arglist-arg" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFunction.ArgList.Arg</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFunction.ArgList.Arg" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    { descr | indent(width=4) }

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnyFunAbs.IntFunction.Return:

IntFunction.Return
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="IntFunction.Return">
    <span id="anyfunabs-intfunction-return" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">IntFunction.Return</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#IntFunction.Return" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyInt`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``"Dependent"``




    { descr | indent(width=4) }

..





