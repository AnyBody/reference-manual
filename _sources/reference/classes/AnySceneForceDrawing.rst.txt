
.. _AnySceneForceDrawing:

####################
AnySceneForceDrawing
####################

.. Do not edit this file.
.. It is automatically generated by ``reference/create_pages.py``

:Type: Creatable
:Parent class: :ref:`AnySceneObject`


**************
Description
**************



.. The include file below is not auto genrated. Please edit that to modify the description file
.. for this class.

.. include:: /class-descriptions/AnySceneForceDrawing.rst



.. Hack to insure that that an emtpy section deosn't screw
.. with the section levels.

|nbsp|







.. Do not edit this file.
.. Members are must be modified directly in the AMS source code.







*******************************
Optional initialization members
*******************************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
      <!--
..

.. _AnySceneForceDrawing.ShowTotalForces:

ShowTotalForces
==================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="ShowTotalForces">
    <span id="anysceneforcedrawing-showtotalforces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ShowTotalForces </span><span class="member-title-equal">=</span><span class="member-title-default"> On </span><a class="headerlink" href="#ShowTotalForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing total forces at each RefFrame when force drawing is enabled.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``On``







    Switch for showing total forces at each RefFrame when force drawing is enabled.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.ShowComponentForces:

ShowComponentForces
======================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ShowComponentForces">
    <span id="anysceneforcedrawing-showcomponentforces" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ShowComponentForces </span><span class="member-title-equal">=</span><span class="member-title-default"> Off </span><a class="headerlink" href="#ShowComponentForces" title="Permalink to this headline">¶</a>
    <span class="member-descr">Switch for showing component forces at each RefFrame when force drawing is enabled.</span>
    </h3>

..


    | **Class type:**  :ref:`AnySwitchVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``Off``







    Switch for showing component forces at each RefFrame when force drawing is enabled.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.ForceScale:

ForceScale
=============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="ForceScale">
    <span id="anysceneforcedrawing-forcescale" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.001 </span><a class="headerlink" href="#ForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing forces in the modelview.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.001``







    The scaling used for drawing forces in the modelview.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.ComponentScale:

ComponentScale
=================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ComponentScale">
    <span id="anysceneforcedrawing-componentscale" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ComponentScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#ComponentScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used for drawing force components in the modelview.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``







    The scaling used for drawing force components in the modelview.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.MomentToForceScale:

MomentToForceScale
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MomentToForceScale">
    <span id="anysceneforcedrawing-momenttoforcescale" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MomentToForceScale </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.1 </span><a class="headerlink" href="#MomentToForceScale" title="Permalink to this headline">¶</a>
    <span class="member-descr">The scaling used between forces and moments in the modelview.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.1``







    The scaling used between forces and moments in the modelview.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.MaximumForceLength:

MaximumForceLength
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="MaximumForceLength">
    <span id="anysceneforcedrawing-maximumforcelength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MaximumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.25 </span><a class="headerlink" href="#MaximumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The maximum length of the force drawing arrow relative to the viewport width.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.25``







    The maximum length of the force drawing arrow relative to the viewport width.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.MinimumForceLength:

MinimumForceLength
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="MinimumForceLength">
    <span id="anysceneforcedrawing-minimumforcelength" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> MinimumForceLength </span><span class="member-title-equal">=</span><span class="member-title-default"> 0.2 </span><a class="headerlink" href="#MinimumForceLength" title="Permalink to this headline">¶</a>
    <span class="member-descr">The minimum length of the force drawing arrow relative to the maximum force...</span>
    </h3>

..


    | **Class type:**  :ref:`AnyVar`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``0.2``







    The minimum length of the force drawing arrow relative to the maximum force drawing arrow length.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.ReactionForceColor:

ReactionForceColor
=====================


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="ReactionForceColor">
    <span id="anysceneforcedrawing-reactionforcecolor" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> ReactionForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.8, 0.3, 0.3} </span><a class="headerlink" href="#ReactionForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing reaction force arrowhead tips.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.8, 0.3, 0.3}``







    The color used for drawing reaction force arrowhead tips.

..






..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
     </div> <!--
..

.. _AnySceneForceDrawing.AppliedForceColor:

AppliedForceColor
====================


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="AppliedForceColor">
    <span id="anysceneforcedrawing-appliedforcecolor" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title"> AppliedForceColor </span><span class="member-title-equal">=</span><span class="member-title-default"> {0.3, 0.8, 0.3} </span><a class="headerlink" href="#AppliedForceColor" title="Permalink to this headline">¶</a>
    <span class="member-descr">The color used for drawing applied force arrowhead tips.</span>
    </h3>

..


    | **Class type:**  :ref:`AnyRGB`
    | **Eval moment:** :ref:`ModelSceneVar <InsideAMS_EvalMoments>`
    | **Default:** ``{0.3, 0.8, 0.3}``







    The color used for drawing applied force arrowhead tips.

..





.. rst-class:: html-toggle

*********************
Denied-Access members
*********************



..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    <!--
..

.. _AnySceneForceDrawing.UpdConfig:

UpdConfig
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdConfig">
    <span id="anysceneforcedrawing-updconfig" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdConfig</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdConfig" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`Const <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySceneForceDrawing.UpdDesign:

UpdDesign
============


.. raw:: html

    -->

    <div class="html-toggle member-entries even section collapsed object-appearance-state-normal" id="UpdDesign">
    <span id="anysceneforcedrawing-upddesign" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdDesign</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdDesign" title="Permalink to this headline">¶</a>
    <span class="member-descr">Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).</span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`DesignVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    Counter of updates of design variable (i.e. the DesignVar Evaluation Moment).

..




..

.. raw:: html

    <!-- Hack to trick sphinx into adding member target link -->
    </div><!--
..

.. _AnySceneForceDrawing.UpdOutput:

UpdOutput
============


.. raw:: html

    -->

    <div class="html-toggle member-entries odd section collapsed object-appearance-state-normal" id="UpdOutput">
    <span id="anysceneforcedrawing-updoutput" style=""></span>
    <h3 class="html-toggle-button" style=""><span class="member-title">UpdOutput</span><span class="member-title-equal"></span><span class="member-title-default"></span><a class="headerlink" href="#UpdOutput" title="Permalink to this headline">¶</a>
    <span class="member-descr"></span>
    </h3>

..


    | **Class type:**  :ref:`AnyIntVar`
    | **Eval moment:** :ref:`OutputVar <InsideAMS_EvalMoments>`
    | **Default:** ``0``




    <No description>

..





